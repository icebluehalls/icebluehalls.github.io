<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Unity on IceBlueHalls</title><link>https://icebluehalls.github.io/categories/unity/</link><description>Recent content in Unity on IceBlueHalls</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Mon, 23 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://icebluehalls.github.io/categories/unity/index.xml" rel="self" type="application/rss+xml"/><item><title>[C#과 유니티로 만드는 MMORPG 게임 개발 시리즈] Part4: 게임 서버 - 정리</title><link>https://icebluehalls.github.io/p/inflearn-gamer-server4/</link><pubDate>Mon, 23 Jan 2023 00:00:00 +0000</pubDate><guid>https://icebluehalls.github.io/p/inflearn-gamer-server4/</guid><description>&lt;h2 id="멀티쓰레드">멀티쓰레드&lt;/h2>
&lt;p>쓰레드는 크게 3개 정도로 사용 가능&lt;/p>
&lt;ul>
&lt;li>Thread&lt;/li>
&lt;li>ThreadPool&lt;/li>
&lt;li>Task&lt;/li>
&lt;/ul>
&lt;h3 id="thread">Thread&lt;/h3>
&lt;p>일반적인 쓰레드. 한번 사용하려면 할당을 해야한다.&lt;/p>
&lt;p>&lt;strong>코드&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">void&lt;/span> &lt;span class="n">OneThread&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;실행중입니다&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">static&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Thread&lt;/span> &lt;span class="n">t&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Thread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OneThread&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello World&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>결과&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">실행중입니다
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">실행중입니다
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">실행중입니다
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">실행중입니다
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Hello World
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">실행중입니다
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>이것은 쓰레드의 성능에 따라 달라질 수 있다. 어쨌든 병행처리이다.&lt;/p>
&lt;h3 id="threadpool">ThreadPool&lt;/h3>
&lt;p>쓰레드풀은 여러 쓰레드의 최대갯수를 지정하는 등의 조절하는 역할을 해준다.&lt;br>
하지만 변수에 object state를 만들어줘야한다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">void&lt;/span> &lt;span class="n">OneThread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">object&lt;/span> &lt;span class="n">state&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;실행중입니다&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">static&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ThreadPool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetMaxThreads&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ThreadPool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">QueueUserWorkItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OneThread&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ThreadPool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">QueueUserWorkItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OneThread&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ThreadPool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">QueueUserWorkItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OneThread&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ThreadPool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">QueueUserWorkItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OneThread&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ThreadPool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">QueueUserWorkItem&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;끝났나요?&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello World&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>결과&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">실행중입니다
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">실행중입니다
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">실행중입니다
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">실행중입니다
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">실행중입니다
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>이 경우 TheadPool은 최대 4개까지만 가능하므로, 마지막에 삽입한 끝났나요 호출 쓰레드는 작동하지 않는다.&lt;/p>
&lt;h3 id="task">Task&lt;/h3>
&lt;p>Thead의 진화판. ThreadPool의 설정을 공유한다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">System.Threading.Tasks&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">static&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ThreadPool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetMaxThreads&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Task&lt;/span> &lt;span class="n">t&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Task&lt;/span>&lt;span class="p">(&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ThreadPool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">QueueUserWorkItem&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ThreadPool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">QueueUserWorkItem&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ThreadPool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">QueueUserWorkItem&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ThreadPool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">QueueUserWorkItem&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;4&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>결과&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">실행중입니다
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">실행중입니다
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">실행중입니다
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">실행중입니다
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="컴파일러-최적화">컴파일러 최적화&lt;/h2>
&lt;p>Debug 모드에서 Release 모드로 바뀔 때 컴파일러는 자동으로 최적화하여 빌드한다. 그러나 컴퓨터는 정확한 쓰임새를 모르기 떄문에 잘못된 내용으로 코드를 최적화시킬 수 있다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">static&lt;/span> &lt;span class="n">isStop&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">void&lt;/span> &lt;span class="n">InfinityLoop&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isStop&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;안멈출거지롱~~&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">void&lt;/span> &lt;span class="n">Start&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Task&lt;/span> &lt;span class="n">t&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Task&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InfinityLoop&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">isStop&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Join&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;끝났습니다&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Debug Mode&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">안멈출거지롱~~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">안멈출거지롱~~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">끝났습니다
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Release Mode&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">안멈출거지롱~~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">안멈출거지롱~~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">안멈출거지롱~~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">안멈출거지롱~~
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>이러한 이유는 컴파일러가 Release로 최적화를 하면사 다음과 같이 로직을 변경했기 떄문이다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">void&lt;/span> &lt;span class="n">InfinityLoop&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isStop&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;안멈출거지롱~~&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>이러한 값의 변경을 막고자 할때에는 &lt;strong>volatile&lt;/strong> bool isStop = false;를 통해 volatile 키워드를 붙여서 컴퓨터 멋대로 바꾸지 못하게 당부해야한다.&lt;/p>
&lt;h2 id="캐시">캐시&lt;/h2>
&lt;p>CPU 코어에서는 더 빠르게 데이터를 처리하기 위해 캐시라는 개념을 사용한다.&lt;br>
캐시는 자주쓰는 데이터를 메인 저장공간에 저장하고 꺼내쓰는 식이 아닌, cpu가 메인까지 가지 않고 소지하여 계속 사용하면서 메인 메모리까지의 보내는 것을 단축시키는 역할을 한다.&lt;br>
강의 예시에서는 테이블의 주문이 있을 때 주문을 받고 바로 주방에 알리는 식이 아닌 테이블을 돌아다니며 주문을 받아 적고 한번에 주방장에게 주는 방식이다.&lt;br>
다만 직원이 많을 경우에는 각자 가지고 있는 주문표가 겹칠 수도 있으니 꼬일 수도 있다.&lt;/p>
&lt;p>캐시는 두가지 철학이 있다.&lt;/p>
&lt;ul>
&lt;li>시간적 캐싱(TEMPORAL LOCALITY) : 해당 주소를 사용한 직후 해당 주소값의 데이터를 계속 사용할 수 있으므로 캐싱한다.&lt;/li>
&lt;li>공간적 캐싱(SAPCIAL LOCALITY) : 해당 주소를 사용한 주변 주소를 또 사용할 가능성이 있으므로 해당 주소를 캐싱한다.(배열등 인접한 주소 사용시 유용)&lt;/li>
&lt;/ul>
&lt;h2 id="메모리-배리어">메모리 배리어&lt;/h2>
&lt;p>하드웨어에서도 메모리 최적화 작업이 일어나면서 자기 멋대로 코드를 바꾼다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">static&lt;/span> &lt;span class="kd">volatile&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">static&lt;/span> &lt;span class="kd">volatile&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">static&lt;/span> &lt;span class="kd">volatile&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">r1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">static&lt;/span> &lt;span class="kd">volatile&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">r2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">static&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">Thread1&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">r1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">static&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">Thread2&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">r2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">static&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">Main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">=&lt;/span> &lt;span class="n">r1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">r2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Task&lt;/span> &lt;span class="n">t1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Task&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Thread1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Task&lt;/span> &lt;span class="n">t2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Task&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Thread2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">t1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">t2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Task&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WaitAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">t1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">t2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r1&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="p">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">r2&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">WriteLine&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;빠져나왔습니다&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>위 코드는 &amp;lsquo;x, y 값이 1이 되었고 이 값을 대입했으니 r1이든 r2이든 1이 되어서 무한루프가 돌 것이다&amp;rsquo; 라고 생각이 되지만&lt;br>
하드웨어상에서 돌릴 때 y하고 r1하고는 상관이 없네? 그럼 r1 = x 먼저하고 y = 1해도 되겠다 싶어서 순서를 바꾸기도 한다.
그렇게 되면 각 쓰레드에서는 0값이 먼저 대입되고 그 다음에 x,y에 1이 대입되므로 순서가 꼬인다.&lt;/p>
&lt;p>이 것을 꼬이지 않게 하려면? &amp;ldquo;메모리 배리어&amp;quot;를 사용하면 된다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">static&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">Thread1&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">MemoryBarrier&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">r1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">static&lt;/span> &lt;span class="k">void&lt;/span> &lt;span class="n">Thread2&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">MemoryBarrier&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">r2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Thread.MemoryBarrier()는 캐싱되어 있는 메모리를 동기화시키는 작업으로, 식당으로 치면 기존에 가지고 있던 자신이 받은 주문 쪽지를 주방과 동기화 시키고 다시 오는 것이다.
그럼 다른 쓰레드(직원)이 이를 알아채고 동기화가 되면서 순차적으로 호출이 된다.&lt;/p></description></item><item><title>HttpRequestMessage 사용 시, Specfied cast is not valid 에러 발생</title><link>https://icebluehalls.github.io/p/http-request-message-error2/</link><pubDate>Mon, 23 Jan 2023 00:00:00 +0000</pubDate><guid>https://icebluehalls.github.io/p/http-request-message-error2/</guid><description>&lt;img src="https://icebluehalls.github.io/p/http-request-message-error2/success.png" alt="Featured image of post HttpRequestMessage 사용 시, Specfied cast is not valid 에러 발생" />&lt;h2 id="에러-발생">에러 발생&lt;/h2>
&lt;p>유니티에서 HttpRequest 통신을 구현하였다.
이전 컴퓨터에서는 잘 돌아갔지만 새로운 컴퓨터에서 시도해 보니 다음과 같은 에러가 발생하였다.&lt;/p>
&lt;h3 id="테스트-코드">테스트 코드&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">UnityEngine&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="nc">NewBehaviourScript&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">MonoBehaviour&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">void&lt;/span> &lt;span class="n">Start&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Debug&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Dns&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetHostName&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="실행-시-에러">실행 시 에러&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">Specfied&lt;/span> &lt;span class="nx">cast&lt;/span> &lt;span class="nx">is&lt;/span> &lt;span class="nx">not&lt;/span> &lt;span class="nx">valid&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>열심히 찾아본 결과, 데이터 전송 시에 규격이 맞지 않다는 에러가 대부분이었고, 내가 파싱 방식을 지정하는 것도 아닌데다 다른 컴퓨터에서는 잘만 실행되는지라 이상하여 코드 문제보다는 설정 문제로 추측하였다.&lt;/p>
&lt;h2 id="정답은-proxy-레지스트리-잘못">정답은 Proxy 레지스트리 잘못!&lt;/h2>
&lt;p>해결 방법은 &lt;a class="link" href="https://blog.naver.com/jelly753f/222127953518" target="_blank" rel="noopener"
>해당 블로그&lt;/a>를 참조하였다.&lt;/p>
&lt;p>다른 컴퓨터에서는 잘 실행되던 문제인지라 로컬 설정값중 에러가 있을 것으로 추측하였고, 그중 제일 신빙성이 있어보이는 것이 서버와 연결하는 프록시 관련 설정이 이상할 것이라고 추측하였다.&lt;/p>
&lt;p>확인해본 결과 ProxyEnable이 REG_DWORD로 되어있어야 하지만 REG_BINARY로 되어있었다.&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/http-request-message-error2/error.png"
width="1651"
height="1018"
srcset="https://icebluehalls.github.io/p/http-request-message-error2/error_hud823714e18393fb03ff57874d0a548e7_138836_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/http-request-message-error2/error_hud823714e18393fb03ff57874d0a548e7_138836_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="162"
data-flex-basis="389px"
>&lt;/p>
&lt;p>해당 레지스트리를 삭제하고 동일한 이름의 REG_DWORD로 생성하였더니 잘 실행되었다.&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/http-request-message-error2/success.png"
width="1735"
height="1018"
srcset="https://icebluehalls.github.io/p/http-request-message-error2/success_hu44029e90c4387745ca36e7ea1bf2bea2_143420_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/http-request-message-error2/success_hu44029e90c4387745ca36e7ea1bf2bea2_143420_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="170"
data-flex-basis="409px"
>&lt;/p></description></item><item><title>HttpRequestMessage 사용 시, illegal byte sequence encounted in the input. 에러 발생</title><link>https://icebluehalls.github.io/p/http-request-message-error1/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://icebluehalls.github.io/p/http-request-message-error1/</guid><description>&lt;img src="https://icebluehalls.github.io/p/http-request-message-error1/unity-error.png" alt="Featured image of post HttpRequestMessage 사용 시, illegal byte sequence encounted in the input. 에러 발생" />&lt;h2 id="에러-발생">에러 발생&lt;/h2>
&lt;p>유니티에서 HttpRequest 통신을 구현하였다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">Illegal&lt;/span> &lt;span class="kr">byte&lt;/span> &lt;span class="nx">sequence&lt;/span> &lt;span class="nx">encounted&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">input&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>하지만 호출 시, 다음과 같은 에러가 발생하게 된다.&lt;/p>
&lt;p>열심히 검색해본 결과, 대부분의 답변은 프로젝트에 사용되는 경로중에 한글이 있어서 발생한다는 답변이었다.&lt;/p>
&lt;h2 id="프로젝트-경로에-한글">프로젝트 경로에 한글?&lt;/h2>
&lt;p>근데 관련 경로를 찾아보아도 한글은 존재하지 않았다.&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/http-request-message-error1/unity-default.png"
width="1193"
height="600"
srcset="https://icebluehalls.github.io/p/http-request-message-error1/unity-default_hu23a42aa42259dfed886b99f7989dd04d_30330_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/http-request-message-error1/unity-default_hu23a42aa42259dfed886b99f7989dd04d_30330_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="198"
data-flex-basis="477px"
>&lt;/p>
&lt;p>사용자 이름도 영어로 되어있어서 해당 문제는 아니였고, 검색해본 결과 HttpRequest중에 호스트 이름을 사용하는 것을 알게 되었다.&lt;/p>
&lt;h2 id="gethostname으로-테스트">GetHostName으로 테스트&lt;/h2>
&lt;p>관련된 함수중 로컬 호스트 이름=기기명을 불러오는 함수를 알게 되었고 다른 사람들은 잘 안되는데 내 컴퓨터만 계속해서 에러가 발생중.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">using&lt;/span> &lt;span class="nx">UnityEngine&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">public&lt;/span> &lt;span class="kr">class&lt;/span> &lt;span class="nx">NewBehaviourScript&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="nx">MonoBehaviour&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">void&lt;/span> &lt;span class="nx">Start&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Debug&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Net&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Dns&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">GetHostName&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://icebluehalls.github.io/p/http-request-message-error1/unity-error.png"
width="1256"
height="720"
srcset="https://icebluehalls.github.io/p/http-request-message-error1/unity-error_hu1297f5b3d907bb9a07ff7c712d5fb996_49783_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/http-request-message-error1/unity-error_hu1297f5b3d907bb9a07ff7c712d5fb996_49783_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="174"
data-flex-basis="418px"
>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ExecutionEngineException&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">String&lt;/span> &lt;span class="n">conversion&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Illegal&lt;/span> &lt;span class="kt">byte&lt;/span> &lt;span class="n">sequence&lt;/span> &lt;span class="n">encounted&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">input&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="정답은-기기-이름">정답은 기기 이름!&lt;/h2>
&lt;p>기기를 확인해보니 ‘내PC’라는 한글이 포함된 이름을 사용하고 있었고…&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/http-request-message-error1/check-my-pc.png"
width="1448"
height="766"
srcset="https://icebluehalls.github.io/p/http-request-message-error1/check-my-pc_hu0414544ee2fa84610516252cb94361d2_59759_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/http-request-message-error1/check-my-pc_hu0414544ee2fa84610516252cb94361d2_59759_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="189"
data-flex-basis="453px"
>&lt;/p>
&lt;p>영어로 바꾸고,&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/http-request-message-error1/change-to-english.png"
width="1448"
height="767"
srcset="https://icebluehalls.github.io/p/http-request-message-error1/change-to-english_hu00617aa278d59f6dbd87f357aa78fc2c_60271_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/http-request-message-error1/change-to-english_hu00617aa278d59f6dbd87f357aa78fc2c_60271_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="188"
data-flex-basis="453px"
>&lt;/p>
&lt;p>DNS.GetHostName을 실행했더니&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/http-request-message-error1/success.png"
width="1072"
height="650"
srcset="https://icebluehalls.github.io/p/http-request-message-error1/success_hudd1ff845ca056f52b1359c33633c0a9f_22491_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/http-request-message-error1/success_hudd1ff845ca056f52b1359c33633c0a9f_22491_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="164"
data-flex-basis="395px"
>&lt;/p>
&lt;p>잘실행되었다.&lt;/p>
&lt;p>어쨋든 한글이 있으면 해당 에러가 발생하는 것을 알게되었다.&lt;/p>
&lt;h2 id="추가">추가&lt;/h2>
&lt;p>유니티 경로중에 Program Files등의 띄어쓰기가 있는 경로나 한글이 들어가 있음에도 에러는 발생하지 않았다.&lt;/p></description></item><item><title>유니티 기본 TextPro 폰트 바꾸기</title><link>https://icebluehalls.github.io/p/default-text-mesh-pro/</link><pubDate>Fri, 06 Jan 2023 00:00:00 +0000</pubDate><guid>https://icebluehalls.github.io/p/default-text-mesh-pro/</guid><description>&lt;img src="https://icebluehalls.github.io/p/default-text-mesh-pro/default-settings.png" alt="Featured image of post 유니티 기본 TextPro 폰트 바꾸기" />&lt;h2 id="textmeshpro-불편한점">TextMeshPro 불편한점&lt;/h2>
&lt;p>유니티에서 이제는 일반 Text의 성능이 구리다고 해서 다 쳐내고 TextMeshPro를 밀어주기 시작하였다. 하지만 사용하기 쉬운 Text와는 달리 TextMeshPro는 처음에 세팅을 해주어야 한다.&lt;/p>
&lt;p>그 중, 제일 불편했던 것이 유니티에 기본 탑재되어 있는 liberation Sans가 한글도 지원이 안되는 주제에 TMP_Text 생성 시, 기본으로 나와서 일일히 바꿔주어야 하는 귀찮음이 존재했다.&lt;/p>
&lt;p>설정 UI에는 안보이기에 설정을 못하는 알았더니, 다른 곳에서 설정할 수 있었다.&lt;/p>
&lt;h2 id="tmp_settings-클릭">TMP_Settings 클릭&lt;/h2>
&lt;p>TextMeshPro 기본 임포트 시, Assets &amp;gt; TextMesh Pro &amp;gt; Resources에 TMP_Settings가 생성된다.&lt;/p>
&lt;p>해당 리소스를 클릭하면 설정 가능한 인스펙터 창이 나온다.&lt;/p>
&lt;p>여기서 Default Font Asset이 기본 폰트다.&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/default-text-mesh-pro/default-settings.png"
width="1704"
height="832"
srcset="https://icebluehalls.github.io/p/default-text-mesh-pro/default-settings_hu2e83e4b19c8e7103de1b31e1ab763ea9_107659_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/default-text-mesh-pro/default-settings_hu2e83e4b19c8e7103de1b31e1ab763ea9_107659_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="204"
data-flex-basis="491px"
>&lt;/p>
&lt;h2 id="default-font-asset-변경">Default Font Asset 변경&lt;/h2>
&lt;p>게임에 기본이 되는 폰트로 바꿔주자.&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/default-text-mesh-pro/change-own-text.png"
width="1707"
height="843"
srcset="https://icebluehalls.github.io/p/default-text-mesh-pro/change-own-text_hufaca80a839c916d6460cfc686c3b51c6_109791_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/default-text-mesh-pro/change-own-text_hufaca80a839c916d6460cfc686c3b51c6_109791_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="202"
data-flex-basis="485px"
>&lt;/p>
&lt;h2 id="테스트">테스트&lt;/h2>
&lt;p>그리고 생성하면?.. 성공.&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/default-text-mesh-pro/test.png"
width="449"
height="917"
srcset="https://icebluehalls.github.io/p/default-text-mesh-pro/test_hu55d595a155ffa8d2b19acdf63586d692_58887_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/default-text-mesh-pro/test_hu55d595a155ffa8d2b19acdf63586d692_58887_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="48"
data-flex-basis="117px"
>&lt;/p></description></item><item><title>유니티 ScrollView를 이용하여 자동으로 늘어나는 퀘스트 UI 만들기</title><link>https://icebluehalls.github.io/p/make-useful-scrollview/</link><pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate><guid>https://icebluehalls.github.io/p/make-useful-scrollview/</guid><description>&lt;img src="https://icebluehalls.github.io/p/make-useful-scrollview/13.png" alt="Featured image of post 유니티 ScrollView를 이용하여 자동으로 늘어나는 퀘스트 UI 만들기" />&lt;p>사실상 게임에서 아이템 리스트, 퀘스트 리스트등 여러가지 오브젝트를 균일하게 정렬하는 UI는 무조건 들어가게 된다.&lt;/p>
&lt;p>근데 유니티에서는 원하는 대로 스크롤에 넣으면 정렬되는 기능은 제공하지 않고, 스크롤뷰에 여러가지 기능을 추가해야지만 원하는 리스트 UI가 완성된다.&lt;/p>
&lt;h2 id="scrollview-생성">ScrollView 생성&lt;/h2>
&lt;p>ScrollView를 생성한다.&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/make-useful-scrollview/1.png"
width="1183"
height="781"
srcset="https://icebluehalls.github.io/p/make-useful-scrollview/1_hu08572b7fa1a4d85a5480b5e096e479b3_45892_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/make-useful-scrollview/1_hu08572b7fa1a4d85a5480b5e096e479b3_45892_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="151"
data-flex-basis="363px"
>&lt;/p>
&lt;h2 id="canvas-크기-설정">Canvas 크기 설정&lt;/h2>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/make-useful-scrollview/2.png"
width="1432"
height="671"
srcset="https://icebluehalls.github.io/p/make-useful-scrollview/2_hu16e8265137db717d4e6fc5e7c46fff92_86468_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/make-useful-scrollview/2_hu16e8265137db717d4e6fc5e7c46fff92_86468_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="213"
data-flex-basis="512px"
>&lt;/p>
&lt;p>다음은 캔버스 크기를 설정해준다.&lt;/p>
&lt;p>스크롤뷰만 보이게 해주면 되는데, 여기서는 개인적으로 캔버스 크기를 설정하여 반응형처럼 UI가 이동하는 방식으로 만들었다.&lt;/p>
&lt;h3 id="canvas">Canvas&lt;/h3>
&lt;ul>
&lt;li>Render Mode - Screen Space - Camera&lt;/li>
&lt;li>Render Camera - 유니티에서 생성 시 기본적으로 제공하는 카메라&lt;/li>
&lt;/ul>
&lt;h3 id="canvas-renderer">Canvas Renderer&lt;/h3>
&lt;ul>
&lt;li>UI Scale Mode : Scale With Screen Size&lt;/li>
&lt;li>Reference Resolution : 1080, 1920&lt;/li>
&lt;/ul>
&lt;h2 id="스크롤뷰-크기-설정">스크롤뷰 크기 설정&lt;/h2>
&lt;p>보기편한대로 스크롤뷰를 설정해준다.&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/make-useful-scrollview/3.png"
width="1445"
height="801"
srcset="https://icebluehalls.github.io/p/make-useful-scrollview/3_hufe5b19c941c51fc2f842f299a966ddeb_104043_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/make-useful-scrollview/3_hufe5b19c941c51fc2f842f299a966ddeb_104043_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="432px"
>&lt;/p>
&lt;h2 id="스크롤뷰의-scroll-rect-설정">스크롤뷰의 Scroll Rect 설정&lt;/h2>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/make-useful-scrollview/4.png"
width="1445"
height="801"
srcset="https://icebluehalls.github.io/p/make-useful-scrollview/4_hu8bb87b5faeccf179f4ea256373c651cb_107122_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/make-useful-scrollview/4_hu8bb87b5faeccf179f4ea256373c651cb_107122_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="432px"
>&lt;/p>
&lt;p>대부분의 UI에서는 왼쪽 오른쪽으로 스크롤되는 경우가 거의 없다. 단지 위아래로만 움직일 뿐.&lt;/p>
&lt;p>따라서 Horizontal 기능은 필요가 없어서 체크를 해제한다.&lt;/p>
&lt;p>MovementType은 설정된 크기 이상으로는 움직이지 못하게 하는 Clamped를 선택한다.&lt;/p>
&lt;h3 id="scroll-rect">Scroll Rect&lt;/h3>
&lt;ul>
&lt;li>Horizontal : 체크 해제&lt;/li>
&lt;li>MovementType : Clamped&lt;/li>
&lt;/ul>
&lt;h2 id="horizontal-스크롤-삭제">Horizontal 스크롤 삭제&lt;/h2>
&lt;p>Horizontal을 체크해제했으므로 스크롤뷰는 작동하지 않는다. 필요가 없으므로 삭제해주자.&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/make-useful-scrollview/5.png"
width="1440"
height="794"
srcset="https://icebluehalls.github.io/p/make-useful-scrollview/5_huc22a3ba6a8b321fbc36ae2e3e29dc562_128730_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/make-useful-scrollview/5_huc22a3ba6a8b321fbc36ae2e3e29dc562_128730_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="181"
data-flex-basis="435px"
>&lt;/p>
&lt;h2 id="vertical-스크롤-크기-설정">Vertical 스크롤 크기 설정&lt;/h2>
&lt;p>Horizontal 스크롤이 삭제되면서 빈공간이 남게 되었다. 마음에 걸리니 빈공간 없도록 설정해주자.&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/make-useful-scrollview/6.png"
width="1445"
height="801"
srcset="https://icebluehalls.github.io/p/make-useful-scrollview/6_huc83abe8e4d8ae3f1fb861de5f84fdecb_109643_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/make-useful-scrollview/6_huc83abe8e4d8ae3f1fb861de5f84fdecb_109643_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="432px"
>&lt;/p>
&lt;h2 id="content-크기-설정">Content 크기 설정&lt;/h2>
&lt;p>Content 오브젝트의 자식들은 스크롤이 되는 대상들이 된다.(부모 객체 Scroll Rect에서 자동으로 설정되어 있음)&lt;/p>
&lt;p>첫 설정시에는 작은 크기 기준으로 되어있기에 스크롤뷰의 모든 범위가 되도록 크기를 늘려주자.&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/make-useful-scrollview/7.png"
width="1445"
height="801"
srcset="https://icebluehalls.github.io/p/make-useful-scrollview/7_hu322e6d62f2c9a9732cba4e26cd696a5f_75751_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/make-useful-scrollview/7_hu322e6d62f2c9a9732cba4e26cd696a5f_75751_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="432px"
>&lt;/p>
&lt;h2 id="content에-기능-추가">Content에 기능 추가&lt;/h2>
&lt;p>자식 객체를 그냥 넣어주면 수동으로 설정을 해야만 한다. 지금부터 자동으로 정렬해주는 클래스와 크기를 자동으로 늘려주는 클래스를 생성한다.&lt;/p>
&lt;h3 id="vertical-layout-group-추가">Vertical Layout Group 추가&lt;/h3>
&lt;ul>
&lt;li>Spacing : 20(각 오브젝트끼리 여백)&lt;/li>
&lt;li>Child Alignment : Upper Center(정렬 기준, 중앙 상단부터 아래로 내려감)&lt;/li>
&lt;li>Child Force Expand : Height만 해제(자식 객체 제어 여부)&lt;/li>
&lt;/ul>
&lt;h3 id="content-size-filter">Content Size Filter&lt;/h3>
&lt;ul>
&lt;li>Vertical Fit : Preferenced Size(각 자식 오브젝트만큼 늘리기)&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/make-useful-scrollview/8.png"
width="1445"
height="801"
srcset="https://icebluehalls.github.io/p/make-useful-scrollview/8_hu32d5238503d011ddfb8d072bb1af0a75_116679_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/make-useful-scrollview/8_hu32d5238503d011ddfb8d072bb1af0a75_116679_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="432px"
>&lt;/p>
&lt;h2 id="content의-자식-객체-추가">Content의 자식 객체 추가&lt;/h2>
&lt;p>Content의 자식으로 객체를 추가하여 정상적으로 정렬이 되는지 확인한다.&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/make-useful-scrollview/9.png"
width="1445"
height="801"
srcset="https://icebluehalls.github.io/p/make-useful-scrollview/9_hu9b3c69d244a18b499348011e9abaa867_94033_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/make-useful-scrollview/9_hu9b3c69d244a18b499348011e9abaa867_94033_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="432px"
>&lt;/p>
&lt;h2 id="코드로-content-자식-객체-생성">코드로 Content 자식 객체 생성&lt;/h2>
&lt;p>스크립트를 하나 생성하고, 아무 오브젝트 연결한다.&lt;/p>
&lt;p>다음 스크립트는 2번째로 지정한 questionItem 오브젝트를 생성하고 1번째로 설정한 QuestionItemParent의 자식으로 옮기는 로직이다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">System.Collections&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">System.Collections.Generic&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">using&lt;/span> &lt;span class="nn">UnityEngine&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span> &lt;span class="k">class&lt;/span> &lt;span class="nc">NewBehaviourScript&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">MonoBehaviour&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na"> [SerializeField]&lt;/span> &lt;span class="kd">private&lt;/span> &lt;span class="n">GameObject&lt;/span> &lt;span class="n">questItemParent&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na"> [SerializeField]&lt;/span> &lt;span class="kd">private&lt;/span> &lt;span class="n">GameObject&lt;/span> &lt;span class="n">questItem&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Start is called before the first frame update&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">void&lt;/span> &lt;span class="n">Start&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 퀘스트 아이템 10개 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="m">10&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">++)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 오브젝트 생성&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">var&lt;/span> &lt;span class="n">item&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Instantiate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">questItem&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// questItemParent 오브젝트의 자식 객체로 들어감&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">transform&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SetParent&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">questItemParent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">transform&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 아이템 생성 시, scale이 비이상적으로 커지는 경우가 있어서 1,1,1로 변경&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">transform&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">localScale&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="n">Vector3&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://icebluehalls.github.io/p/make-useful-scrollview/10.png"
width="1445"
height="801"
srcset="https://icebluehalls.github.io/p/make-useful-scrollview/10_hubf129cf7ffd69b72360b52647e759d76_79180_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/make-useful-scrollview/10_hubf129cf7ffd69b72360b52647e759d76_79180_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="432px"
>&lt;/p>
&lt;p>각 연결되는 오브젝트는 다음과 같다.(QuestionItem은 Prefabs여도 무관하다)&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/make-useful-scrollview/11.png"
width="1272"
height="713"
srcset="https://icebluehalls.github.io/p/make-useful-scrollview/11_hu05fad2ff214ff3c42540ba6331326455_83477_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/make-useful-scrollview/11_hu05fad2ff214ff3c42540ba6331326455_83477_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="178"
data-flex-basis="428px"
>&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/make-useful-scrollview/12.png"
width="1272"
height="712"
srcset="https://icebluehalls.github.io/p/make-useful-scrollview/12_hu237d3c5085585fcee58158917327f59a_83012_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/make-useful-scrollview/12_hu237d3c5085585fcee58158917327f59a_83012_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="178"
data-flex-basis="428px"
>&lt;/p>
&lt;h2 id="테스트">테스트&lt;/h2>
&lt;p>이제 실행해본다.&lt;/p>
&lt;p>&lt;img src="https://icebluehalls.github.io/p/make-useful-scrollview/13.png"
width="1280"
height="720"
srcset="https://icebluehalls.github.io/p/make-useful-scrollview/13_hu60703074ad5adc65e9b475b4e0e0831a_62464_480x0_resize_box_3.png 480w, https://icebluehalls.github.io/p/make-useful-scrollview/13_hu60703074ad5adc65e9b475b4e0e0831a_62464_1024x0_resize_box_3.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p></description></item></channel></rss>