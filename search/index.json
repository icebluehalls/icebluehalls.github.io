[{"content":"hugo 자동 배포 스크립트 추가 ![1.PNG] 기존 hugo의 테마를 받은 깃 페이지에서 예시 파일로 제공되는 github \u0026gt; workflows에 있는 deploy.yml을 다운받습니다.\n![2.PNG] myBlog에도 똑같이 .github \u0026gt; workflows에 해당 파일을 붙여넣습니다.\n![3.PNG] 해당 파일을 열고 아래 하단으로 내려갑니다.\n![4.PNG]\n하단에 Deploy 하는 방법을 설정할 수 있는데, 다음과 같이 설정합니다.\nexternal_repository: {git 닉네임}/{git 블로그 주소} user_name: {git 닉네임} user_email: {git 이메일 아이디} public_branch: {깃 블로그 주소의 메인 브런치}\n![5.PNG] 블로그 내용을 자동 배포하려면 이 배포가 정상적인지 확인을 하는 깃허브 토큰이 필요합니다.\n깃허브로 가서 우측 상단의 프로필을 클릭하여 Settings를 클릭합니다.\n![6.PNG] 스크롤을 제일 밑으로 내리면 Developer Settings를 클릭합니다.\n![7.PNG] Personal access tokens를 클릭하고 우측 상단에 Generate new tokens를 클릭합니다.\n![8.PNG] 토큰의 이름은 HUGO로 설정합니다. 위 deploy.yml에서 토큰 이름이 secrets.HUGO로 되어있기 때문에 맞춰주어야합니다.\n만료 날짜는 최대한 오래합니다. 토큰이 만료되면 재등록을 해야하는 귀차늠이 있습니다,\n권한은 repo 하나만 추가해주어도 됩니다.\n![9.PNG] 토큰 생성이 완료되면 토큰 문자가 노출되는데 이것을 복사하여 다른 곳에 저장합니다. 이 페이지를 나오면 더는 볼 수 없기 때문에 다른 곳에 저장하는 것을 추천드립니다.\n잊어버리면 재발급해야합니다.\n![10.PNG] 깃 블로그의 내용은 myblog에서 이루어지며, 해당 깃에 변화된 내용을 블로그 깃에 재배포하는 것이기 때문에 myblog에 토큰을 입력해야합니다.\nmyblog의 메뉴 중 Secrets and variables를 클릭합니다.\n![11.PNG] 초록 버튼 New repository secret을 클릭합니다.\n![12.PNG] 이름을 HUGO라고 지정합니다. 위 deploy.yml에서 토큰 이름이 secrets.HUGO로 되어있기 때문에 맞춰주어야합니다.\nSecret은 복사했던 토큰 문자를 붙여넣습니다.\n![13.PNG] 토큰까지 깃허브 웹에서 설정이 완료되었다면 deploy.yml을 서버에 업로드해줍니다.(푸시해줍니다.)\n![14.PNG] 그리고 cotent/post/에 아무 md 파일이나 생성해보고 테스트로 업로드해봅니다.\n![15.PNG] myBlog의 깃허브 웹에서 Actions을 보면 deploy.yml의 실행 결과를 확인할 수 있습니다.\n![16.PNG] 위에서 성공 표시가 나온다면 블로그 깃에서는 자동으로 커밋 및 푸시가 발생하는 것을 확인할 수 있습니다.\n![17.PNG] 다시 자신의 블로그로 가서 확인해보면 깃 블로그에서 자동으로 글이 업로드 되는 것을 볼 수 있습니다.\n","date":"2023-05-20T00:00:00Z","image":"https://icebluehalls.github.io/p/etc/hugo/install3/1_hubf94cd01c36a46653770d924be46a00c_125100_120x120_fill_box_smart1_3.PNG","permalink":"https://icebluehalls.github.io/p/etc/hugo/install3/","title":"따라하기 제일 쉬운 Hugo로 블로그 만들기 #3"},{"content":"VSCode로 콘텐츠 블로그 저장소 열기 VSCode로 컴퓨터에 다운로드한 콘텐츠용 블로그 저장소를 엽니다.\n이전 포스팅에서는 myBlog로 설정된 폴더입니다.\nVSCode로 열 경우에는 VSCode 하단의 Terminal에서 해당 폴더에서부터 명령을 시작하도록 설정됩니다.\nVSCode의 Terminal은 cmd로 가서 cd C:\\Workspace\\myBlog 를 호출한 것과 동일한 결과입니다.\nhugo 명령어로 블로그 생성 Hugo 테마 다운로드 블로그의 꽃, 테마를 다운받아보겠습니다.\n휴고 테마 공식 모음 사이트에 접속합니다.\n해당 예제에서는 Stack이라는 테마를 다운받았습니다. 이외의 테마를 다운받는 것도 가능하지만 해당 블로그의 포스팅에서는 Stack을 기준으로 하였기 때문에 설정값이 달라 이후 진행이 힘드실 수 있습니다.\n만약 처음 Hugo 블로그를 이용하신다면 먼저 Stack 테마로 테스트하시고 적응이 되시면 다른 테마로 변경하는 것을 추천드립니다.\nStack을 클릭하고 Download를 클릭합니다.\nDownload를 클릭하면 github로 이동이 되는데 해당 git을 클론하도록 주소를 복사합니다.\n다시 VSCode로 돌아와 아래 Terminal에서 명령어 hugo site blog를 입력합니다.\nhugo가 성공적으로 설치되었다면 아래 영어가 주르륵 뜨면서 폴더 생성이 완료됩니다.\n해당 폴더 안에 hugo 명령어로 만든 blog가 생성되었는데 사실 생성된 blog의 위치는 한번 앞으로 와야합니다.\n만들어진 blog의 모든 파일들을 blog 밖으로(.git 파일이 있는 곳) 이동합니다.\n다 옮기면 blog는 빈폴더가 되는데 그냥 삭제해줍니다.\n깃허브 폴더로 전부 이동이 완료되었다면 이제는 휴고 블로그의 테마를 설치해볼 예정입니다.\n다음 명령어로 내블로그에 서브모듈로 테마 블로그를 설치합니다.\ngit submodle add {git 주소} themes/{테마 이름}\ngit submodule add https://github.com/CaiJimmy/hugo-theme-stack.git themes/stack\n그러면 gitmodules 파일에 명령어로 입력한 서브 모듈 깃주소가 등록됩니다.\n간혹 자동으로 등록이 안되는데 이때에는 수동으로 등록합니다.\n1 2 3 [submodule \u0026#34;themes/stack\u0026#34;] path = themes/stack url = https://github.com/CaiJimmy/hugo-theme-stack.git ![11.PNG] 설치가 완료되면 themes 폴더에 서브 모듈로 등록한 폴더가 나오는데 안으로 들어가서 예제 코드들을 들고올 것입니다.\ncotent 폴더와 config.yml을 복사합니다.\n![12.PNG] myBlog 폴더에 붙여넣습니다.\n![13.PNG] 기존 myblog에 존재하던 config.toml은 삭제합니다. 이때 복사하여 붙여넣은 config.yaml은 헷갈려서 삭제하시면 안됩니다.\n![14.PNG] config.yaml을 엽니다.\n![15.PNG] 제일 첫째 줄에 위치한 블로그 정보들을 자신의 정보에 맞게 변경합니다.\nbaseurl: \u0026ldquo;https://{myblog와 함께 만들었던 블로그 주소}\u0026rdquo; languageCode: ko-KR theme: stack title: \u0026ldquo;원하는 블로그 이름\u0026rdquo;\n![18.PNG] config.yaml의 설정이 완료되었으면 아래 terminal에서 hugo server -D 명령어를 입력합니다.\n명렁어가 성공하면 아래처럼 http://localhost:1313/ 이라는 주소가 표시됩니다. 크롬이든 엣지이든 웹 브라우저를 이용해서 로컬호스트 주소로 이동합니다\n![17.PNG] 주소로 이동하면 테마가 적용된 자신의 블로그를 볼 수 있습니다.\n![19.PNG] 어느정도 블로그의 준비가 되었으니 이번에는 적용을 해볼 에정입니다.\ngit으로 가서 저장을 해볼텐데, 이전에 깃에 올라갈 필요가 없는 파일들은 gitignore에 등록합니다.\nmyblog에 resources 폴더를 ignore합니다. 나머지 모두 stage해서 커밋 메세지를 작성하고 커밋합니다.\n![20.PNG] 만약 커밋이 안된다면 깃 프로그램의 메인 아이디를 설정하지 않은 것입니다.\n![21.PNG] File \u0026gt; Settings \u0026gt; Git에서 글로벌 유저 정보를 입력합니다. 자신의 깃 닉네임과 깃 이메일 아이디를 입력하면 됩니다.\n![22.PNG] 깃 아이디까지 설정이 완료되고 커밋까지 되었다면 해당 깃을 서버로 푸시합니다.\n블로그에 올라가도록 서정 ![23.PNG] 이번에는 myBlog에서 블로그 내용을 업로드하면 github.io로 된 깃 주소에 같이 업로드되서 블로그를 갱신하도록 만들 에정입니다.\nmyBlog에 연결하려면 브런치가 하나 생성되어야하므로, creating a new file을 누르고 temp.txt로 생성하여 아무 말이나 작성합니다.\n![24.PNG] 이런식으로 temp.txt가 추가된 것이 확인되었다면 해당 블로그 주소를 복사합니다.\n![25.PNG] 블로그 테마 주소를 서브모듈에 등록했던 것처럼 우리의 메인 git 블로그 주소도 연결시켜줍니다.\ngit submodule add -b main {블로그 주소} public 명령어를 입력합니다.\n![26.PNG] 만약 아래처럼 public이 이미 있다는 에러가 발생하면 public 폴더를 삭제한 후 다시 시도합니다.\n![27.PNG] 연결이 완료되었으면 .gitmodules에 등록이 되었는지 확인합니다. 없으면 그냥 입력해줍니다.\n![28.PNG] hugo -D 명령어를 입력합니다.\n![29.PNG] 명령어가 촤르륵 나오는데 기다립니다.\n명령어가 완료되었으면 cd public 명령어를 통해 public 폴더로 위치를 변경합니다. 그리고 git push origin main 명령어를 입력하여 푸시합니다.\n![30.PNG] 명령어까지 성공하였다면 깃 프로그램에서 블로그 주소를 따로 추가하지 않았는데도 자신의 블로그가 업데이트 된 것을 볼 수 있습니다.\n![31.PNG] 웹 브라우저에 자신의 깃허브 블로그 주소를 직접 입력하면 블로그가 정상적으로 보여지는 것을 보실 수 있습니다.\n","date":"2023-05-19T00:00:00Z","image":"https://icebluehalls.github.io/p/etc/hugo/install2/1_hufaf53a29e89512644c1cc9295dd12c48_142592_120x120_fill_box_smart1_3.PNG","permalink":"https://icebluehalls.github.io/p/etc/hugo/install2/","title":"따라하기 제일 쉬운 Hugo로 블로그 만들기 #2"},{"content":"1. GitHub에서 레포지토리 생성 레포지토리는 콘텐츠 저장용 하나, 보여지기 용 하나.\n총 2개의 레포짓토리가 생성됩니다.\n콘텐츠 저장용 : myBlog 보여지기용 : mntchocopsycho.github.io 1. 콘텐츠 저장용 블로그 레포지토리 생성 Github에서 새로운 respository를 생성합니다. 생성 시, 이름은 상관이 없으며 중요한 점은 Public으로 설정되어있어야합니다. 2. 보여지기용 블로그 레포지토리 생성 콘텐츠용 블로그 레포지토리가 생성되었으면 이번에는 보여지기용(실제 URL) 레포지토리를 생성합니다.\n여기 또한 public으로 설정해야 하며, 이름은 자신의 닉네임이 들어간 주소로 만들어야합니다.\n1 {블로그 이름}.github.io 콘텐츠용 블로그 주소로 다운로드 myBlog 레포지토리에 들어가서 HTTPS로 된 git clone 주소를 복사합니다.\n그리고 컴퓨터에 다운받습니다.(여기서는 Fork 라는 Git UI 프로그램을 사용했습니다.)\n주소는 아무곳이나 상관없습니다.\n3. Hugo 다운로드 Hugo 다운로드 주소에 접속합니다.\n컴퓨터가 Windows 이므로 Windows를 클릭합니다.\nPrebuilt Binaries에서 latest release를 클릭하여 Hugo의 진짜 다운로드 페이지로 이동합니다.\n제일 밑으로 스크롤을 내려 hugo_extended_0.xxx_windows-amd64.zip 을 다운받습니다.\nextended로 다운받는 이유는 일반 hugo로는 일부 테마에서는 scss(css 진화판)을 읽지 못해서 extended로 다운받았습니다.\nC:\\Program Files\\Hugo에 압축을 해제합니다. Hugo 폴더 안에 hugo.exe, LICENSE, README.md가 존재하면 됩니다.\nHugo 환경 변수 설정 Hugo를 cmd에서 호출하기 위해서는 환경 변수를 설정해야합니다.\n제어판의 시스템 환경 변수 편집을 들어갑니다.\n시스템 설정에서 환경 변수를 클릭합니다.\n시스템 변수의 Path를 클릭하여 편집을 클릭합니다.\nHugo 폴더를 새로 추가합니다.(만약 다른 곳에 설치하였다면 해당 경로로 설장합니다.)\n설정이 완료되었다면 완료를 클릭하여 테스트를 실시해봅니다.\ncmd를 열어서 hugo version을 입력해봅니다.\nHugo의 버전을 알려주는 메세지가 나오면 성공한 것입니다.\n","date":"2023-05-18T00:00:00Z","image":"https://icebluehalls.github.io/p/etc/hugo/install1/10_hudc211de25df7a1149cde5d1bbe1a01ed_135908_120x120_fill_box_smart1_3.PNG","permalink":"https://icebluehalls.github.io/p/etc/hugo/install1/","title":"따라하기 제일 쉬운 Hugo로 블로그 만들기 #1"},{"content":"SQL 중급 COUNT 1 SELECT COUNT(*) FROM product product 테이블 내에 모든 row의 갯수를 구한다.\n1 SELECT COUNT(name) FROM product product 테이블 내에 name이 NULL이 아닌 모든 데이터를 반환\n1 SELECT COUNT(DISTINCT company) FROM product product 테이블 내에 company이 NULL이 아니고, 이름이 중복되지 않은 모든 데이터를 반환\nAVG 1 SELECT AVG(total) FROM product product 테이블 내에 total의 평균을 구한다. 이때 NULL값은 계산에 포함이 안된다.\n1 SELECT SUM(total)/COUNT(*) FROM product product 테이블 내에 (total의 합계 / 총 row량) 구한다. Null은 계산에 대입이 되나 0으로 설정한다.\nMIN 1 SELECT MIN(total) FROM product product 내에 total이 제일 큰 row를 구한다\nMAX 1 SELECT MAX(total) FROM product product 내에 total이 제일 큰 row를 구한다\nGROUP BY 1 2 3 SELECT SupplierID, AVG(Price) FROM Product GROUP BY SupplierID Product 테이블 내에 동일 SupplierID의 평균을 구해라\n1 2 3 SELECT SupplierID, CategoryID, AVG(Price) FROM Product GROUP BY SupplierID, CategoryID Product 테이블 내에 동일 SupplierID 중 Category 또한 동일한 값들의 평균을 구해라\nWHERE 1 2 3 4 5 WHERE : 테이블의 모든 데이터 내에서 조건을 검색하고 그 이후에 GROUP BY를 한다 SELECT SupplierID, CategoryID, AVG(Price) FROM Product WHERE Price \u0026gt;= 100 GROUP BY SupplierID, CategoryID Product 테이블 내에 Price가 100골드 이상인 데이터만 가져와서 동일 SupplierID 중 Category 또한 동일한 값들의 평균을 구해라\nHAVING 1 2 3 4 5 HAVING : GROUP BY 한 데이터 내에 검색되는 조건을 부여한다 SELECT SupplierID, CategoryID, AVG(Price) FROM Product GROUP BY SupplierID, CategoryID HAVING AVG(Price) Product 테이블 내에 Price가 가져와서 동일 SupplierID 중 Category 또한 동일한 값들 중 평균 100골드 이상인 데이터들의 평균만 보여줘라\n(권장 X, 명확하게 하는 것이 가독성에 좋다)\n1 2 3 SELECT SupplierID, CategoryID, AVG(Price) FROM Product GROUP By 1, 2 SELECT 내에 첫번째(SupplierID)와 두번째 요소(CategoryID)를 GroupBy 해라\nTip 1 1 2 3 4 5 6 SELECT SupplierID -- , CategoryID , AVG(Price) FROM Products GROUP BY SupplierID , CategoryID 위와 같이 요소들을 분리하여 쓰면 주석 처리에 용이하다\n소수점 처리 CEIL SELECT CEIL(5.5)\n-\u0026gt; 6\nFLOOR SELECT FLOOR(5.5)\n-\u0026gt; 5\nROUND SELECT ROUND(5.1234, 1)\n-\u0026gt; 소수점 1번째 자리수까지만 보여주고 나머지는 반올림\nCASE CASE WHEN THEN END 조건에 맞는 데이터를 태깅해준다.(단순 보여주기)\n1 2 3 4 5 6 7 SELECT CASE WHEN categoryId = 1 THEN \u0026#34;과자\u0026#34; WHEN categoryId = 2 THEN \u0026#34;음료수\u0026#34; WHEN 3 \u0026lt; categoryId AND categoryId \u0026lt; 10 THEN \u0026#34;화장품\u0026#34; ELSE \u0026#34;비판매품\u0026#34; END AS \u0026#34;CategoryName\u0026#34; FROM Market -\u0026gt; Market테이블에서 categoryId가 1이면 과자를, 2면 음료수를 3~10이면 화장품을 그 외 조건이면 비판매품이라고 태깅한다. 그리고 새로 만들어진 컬럼을 CategoryName이라고 칭한다.\nJOIN 두 테이블의 연결고리를 이용하여 통합한다.\nINNER JOIN ON 1 2 3 4 SELECT * FROM Orders INNER JOIN Customers ON Orders.CustomerID = Customers.CustomerID INNER JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID Orders 테이블에 있는 CustomerID와 Customers 테이블에 있는 CustomerID가 일치하는 것들을 매칭하여 한번에 보여준다.\n그리고 Orders 테이블에 있는 ShipperID와 Shippers 테이블에 있는 ShippersID가 일치하는 데이터 또한 Customers의 오른쪽에 표시한다.\n다만 Orders가 가지고 있지 않은 데이터는 보여지지 않는다.(Customers.CustomerID가 4까지 있고 Orders.CustomerID가 3까지 있으면 매칭되지 않고 리스트에서 제외된다.)\nLEFT JOIN ON 1 2 3 SELECT * FROM Customers LEFT JOIN Orders ON Customers.CustomerID = Orders.CustomerID Customers 테이블에 존재하는 데이터를 기준으로 Orders의 CustomerID와 매칭되는 데이터들을 같이 표시한다. 이때 Orders에 없다면 Null로 표시한다.\nLEFT JOIN ON 1 2 3 SELECT * FROM Customers RIGHT JOIN Orders ON Customers.CustomerID = Orders.CustomerID Orders 테이블에 존재하는 데이터를 기준으로 Customers의 CustomerID와 매칭되는 데이터들을 같이 표시한다. 이때 Orders에 없다면 Null로 표시한다.\n다만 사람은 주로 왼쪽부터 보기 때문에 LEFT만 사용하며 값을 바꾸는 것을 추천한다.\n","date":"2023-04-10T00:00:00Z","image":"https://icebluehalls.github.io/p/sql-study-normal/main_hu416a6c48e314bd141d10499c9139e2f8_87521_120x120_fill_box_smart1_3.png","permalink":"https://icebluehalls.github.io/p/sql-study-normal/","title":"[백문이불여일타] 데이터 분석을 위한 중급 SQL 강의 요약"},{"content":"SQL 기초 SELECT / FROM / LIMIT SELECT SELECT : 데이터를 불러옵니다.\nSELECT *일 경우, 조건 없이 모든 데이터를 가져옵니다.\nSELECT {컬럼 이름} 일 경우, 해당 컬럼만 노출이 됩니다.\nFROM FROM : 어느 티에블에서 가져올 것인지 설정합니다.\nFROM {테이블 명}\nFROM Customers 일 경우, Customer 테이블에 있는 데이터를 불러옵니다.\n예시 :\n1 SELECT * FROM Customers : Customers 테이블에 있는 모든 데이터를 불러옵니다.\n1 SELECT CustomerName, Address FROM Customers : Custmers 테이블에 있는 모든 데이터중 CustomersName과 Address만 노출하여 보여줍니다\nLIMIT LIMIT : LIMIT을 지정하지 않을 경우 모든 데이터를 불러올 수 있습니다. LIMIT은 상위 n개의 데이터만을 불러오게 합니다.\n예시 :\n1 SELECT * FROM Customers LIMIT 10 : Customers에 있는 데이터중 상위 10개의 row만 불러옵니다.\nTip 1 SQL 문법은 강제성이 있는 것은 아니지만 가독성을 위해 대문자로 표기하는 것을 권장합니다.\nselect (x), SELECT (o)\n조건에 맞는 데이터 검색하기 WHERE WHERE : 비교연산자와 논리연산자. 컬럼 속 데이터의 조건에 따라 검색하는 것이 가능합니다.\n1 SELECT * FROM Customers WHERE CustomerName \u0026lt; \u0026#34;B\u0026#34; : Customers의 전체 데이터중 CustomerName이 B로 시작하는 데이터를 가져와라\n1 SELECT * FROM Customers WHERE CustomerID \u0026lt; 50 : Customers의 전체 데이터중 CustomerID가 50보다 작은 데이터를 가져와라\n1 SELECT * FROM Customers WHERE CustomerName \u0026lt; \u0026#34;B\u0026#34; AND Country = \u0026#34;Germany\u0026#34; : Customers의 전체 데이터중 CustomerName이 B로 시작하면서 Country가 Germany인 데이터를 가져와라\n1 SELECT * FROM Customers WHERE CustomerName \u0026lt; \u0026#34;B\u0026#34; OR Country = \u0026#34;Germany\u0026#34; : Customers의 전체 데이터중 CustomerName이 B로 시작하거나 Country가 Germany인 데이터를 가져와라\nLIKE LIKE : 특정 문자열로 시작하거나, 끝나거나, 포함되어있는 데이터들을 가져오는 것이 가능하다.\n%(와일드카드) : 기호를 통해 지정이 가능하다.\n1 SELECT * FROM Customers WHERE country LIKE \u0026#39;Br%\u0026#39; : Customers의 전체 데이터중 country의 속성값이 Br로 시작하는 데이터들을 가져와라(Brazil등)\n1 SELECT * FROM Customers WHERE country LIKE \u0026#39;%SA\u0026#39; : Customers의 전체 데이터중 country의 속성값이 Br로 끝나는 데이터들을 가져와라(USA등)\n1 SELECT * FROM Customers WHERE country LIKE \u0026#39;%TA%\u0026#39; : Customers의 전체 데이터중 country의 속성값이 Br로 끝나는 데이터들을 가져와라(Italia, TAILLAND등)\n1 SELECT * FROM Customers WHERE country LIKE \u0026#39;BRAZIL\u0026#39; : Customers의 전체 데이터중 country의 속성값이 Brazil인 데이터들을 가져와라. 다만 LIKE 'BRAZIL' 보다는 = 'BRAZIL'이 속도측면에서 훨씬 빠르다.\n1 SELECT * FROM Customers WHERE country LIKE \u0026#39;B_____\u0026#39; : Customers의 전체 데이터중 country의 속성값이 B로 시작하는 5글자 짜리 데이터들을 가져와라.\n1 SELECT * FROM Customers WHERE discount LIKE \u0026#39;50\\%\u0026#39; : Customers의 전체 데이터중 discount의 값이 50%인 데이터들을 가져와라.(% 기호는 예약어이므로 이스케이프를 통해 구분해야한다.)\nIN IN : 일치하는 조건들을 여러 개 설정할 수 있다.\n1 SELECT * FROM Customers WHERE country IN ( \u0026#39;KOREA\u0026#39;, \u0026#39;JAPAN\u0026#39;, \u0026#39;USA\u0026#39;) : Customers의 전체 데이터중 country 값이 Korea, Japan, Usa 중 하나인 데이터들을 가져와라\nBETWEEN BETWEEN : 지정한 두 값 사이에 포함되는 데이터들을 가져올 수 있다.\n1 SELECT * FROM Customers WHERE population BETWEEN 1000 AND 20000 : Customers의 전체 데이터중 country 값이 population의 숫자형 데이터가 1000에서 20000 사이인 데이터들을 가져와라\nIS NULL IS NULL : 해당 컬럼에 존재하지 않는 데이터들을 검색할 수 있다. NULL은 특수한 값이므로 \u0026lsquo;= NULL\u0026rsquo;은 검색이 불가능하다.\n1 SELECT * FROM Customers WHERE customerID IS NULL : Customers의 전체 데이터중 customerID가 NULL인 데이터들을 불러와라\n(잘못된 예시)\n1 SELECT * FROM Customers WHERE customerID = NULL : customerID가 NULL인 데이터가 불러와지지 않는다.\nTip2 컬럼명은 대소문자 구분하지 않는다.\n따옴표와 작은 따옴표도 구분하지 않는다.\nDISTINCT DISTINCT : 중복되는 데이터를 없게 만들어준다.\n1 SELECT DISTINCT city FROM station WHERE city LIKE \u0026#39;a%\u0026#39; OR city LIKE \u0026#39;america\u0026#39; : america는 a% 조건과 \u0026lsquo;america\u0026rsquo;조건 모두 겹치지만 한번만 출력됩니다.\n데이터 순서 정렬하기 ORDER BY ORDER BY : 오름차순 혹은 내림차순으로 데이터를 정렬한다. 보여주는 형식만 변경할 뿐 실제 데이터베이스의 순서가 바뀌지는 않는다.\n기본은 오름차순으로 되어있으며, ASC를 입력하여도 오름차순으로 정렬된다.(값이 큰게 아래)\n내림차순의 경우 DESC를 입력하면 된다.(값이 큰게 위)\n1 SELECT * Customers ORDER BY customerid DESC : 모든 Customers의 데이터들을 불러오 되 customerid가 내림차순으로 정렬하여 보여줘라.\nTip3 명령어는 SELECT, FROM, WHERE, ORDER BY, LIMIT 순이다.\n그 외 함수 MOD MOD : 앞의 수 에서 뒤의 수를 나눈 후, 나머지를 반환한다.\n1 SELECT * FROM city WHERE MOD(customer_id, 2) = 0 : city 테이블의 전체 데이터중에서 customer_id를 2로 나누었을 때 나머지가 0인 데이터를 가져와라\nCOUNT COUNT : 검색된 데이터의 갯수를 구한다.\n1 SELECT COUNT(ALL *) - COUNT(DISTINCT CITY) FROM STATION : STATION 테이블의 (모든 데이터의 수) - (CITY가 중복되는 데이터의 수)를 반환하라\n","date":"2023-04-09T00:00:00Z","image":"https://icebluehalls.github.io/p/sql-study-easy/main_huad269d2041ee54a2211ce8a1a8c0800d_97540_120x120_fill_box_smart1_3.png","permalink":"https://icebluehalls.github.io/p/sql-study-easy/","title":"[백문이불여일타] 데이터 분석을 위한 기초 SQL 강의 요약"},{"content":"총 117개\n2023 DJMax Respect V\n초등학교 때 PSP로 하던 DjMax의 향수와 넥슨 콜라보 곡이 있어 플레이하게 되었습니다. 에이징 커브가 왔는지 노트가 두개로 보이게 되면서 자주 플레이하지는 못했습니다. 제로의 궤적 KAI\n벽의 궤적에서 특혜를 봤던 뒤잡 시스템이나 크래프트 기술들이 너프를 당하면서 조금 어려워졌습니다. 그러나 전투 외적 연출들이 증가하고, 스토리도 좋아지면서 재밌게 플레이했습니다. 벽의 궤적 KAI\n여의 궤적 시리즈가 나오면서 그 전에 스토리 이해를 위해 진행하게 되었습니다. 섬의 궤적보다도 한참 이전의 게임이었지만 레벨 디자인과 캐릭터성은 훨씬 뛰어났습니다. 2022 엘든 링\n프롬의 첫 오픈월드로, 버그로 가는 곳처럼 보여도 사실은 정식 루트였으며, 그 길의 끝에는 보스가 있고, 보스를 통해 특수한 무기를 얻는 이상적인 모험 RPG 형태여서 매우매우 재밌게 플레이했습니다. 보스들의 연출 또한 모두 가슴이 웅장해지는 멋진 연출이었습니다. 슈퍼로봇대전 30\n로봇도 아닌데 참전하는 작품들이 생기면서 여러가지 테스트가 많았던 시리즈였습니다. 그리드맨의 연출이 기가막혔습니다. 몬스터헌터 라이즈\n몬스터헌터 월드를 재밌게 한지라 기대가 많았지만, 그래픽, 폰트, 타격감, 조작감 모두 월드에 비해서 별로였던 감이 있어 친구들과 함께 하차하게 되었습니다. 스토리를 없앤 것도 영향이 컸습니다. 길티기어 스트라이브\n랜더링을 극한으로 끌어낸 테크니컬 아티스트들에게 존경을 표했습니다. 콤보 배우기가 힘들어 금방 하차했지만 쉽게 재밌게 만들려고 한 제작진의 의도는 느낄 수 있었습니다. 2021 제노 블레이드 1\n대난투에서 알게 된 게임이었습니다. JRPG스러우면서 아닌 RPG게임이었고, 소년만화스러운 전개에 재밌는 게임성으로 수작이라는 느낌을 많이 받았습니다. 다만 50시간이라는 긴 플레이시간 때문에 좀 힘들었습니다. 슈퍼 스매시 브라더스 얼티밋\n절대로 나올 수 없을 거라 생각하던 철권, 페르소나5, 킹오파, 마인크래프트등 전원 참전하면서 감탄했습니다. 다만 대난투 X에서 보여준 아공의 사자 같이 캐릭터 특징을 잘 나타내는 스토리 진행 방식이 없어서 매우 아쉬웠습니다. 타이탄폴2\n거대 로봇을 타고 싸우거나, 거대 로봇을 일게 군인이 쓰러트릴 수 있다는 점에서 큰 재미를 느꼈습니다. 다만 업데이트가 느리다보니 변화되는 것이 없어 하차하게 되었습니다. 토탈워 쓰리킹덤\n한국어 더빙에, 경영 시뮬레이션과, 군사들을 직접 지원하고 싸울 수 있는 전쟁 시뮬레이션까지 겹쳐져서 명작이라고 생각했습니다. 다만 시뮬레이션 류 게임에 대한 이해도가 적어 너무 어려웠던지라 멀어지게 되었습니다. 위쳐3\n저 또한 발걸음만 조사하다보니 지루해져서 그리폰만 잡고 하차하게 되었습니다. 2020 사이버펑크 2077\n기대를 많이 한 게임이었고 너무나도 처참했던 게임성에 게임 불감증이 걸리게 되었습니다. 제일 불만이었던 점은 초반에 선택하는 태생이 게임에 거의 영향을 주지 않는다는 점이었습니다. 울펜슈타인\nfps 싱글 플레이 중에서 암살도 가능하고 스토리도 탄탄해서 재미있게 플레이했습니다. 스토리가 다소 과격하고 슬픈지라 기억에 잘 남았던 거 같습니다. 더 포레스트\n발매 당시에 구매를 했었는데, 버그도 많고 할거리도 별로 없어 3년정도 기다리게 되었습니다. 엔딩도 생기고 여러가지 놀거리들도 많이 생겨서 친구들과 재밌게 하고 다구리를 하면서 엔딩도 봤었습니다. 여러명이서 하는 멀티 게임 중에서는 제일 재밌어습니다. 파이어엠블렘 풍화설월\n닌텐도의 타이틀 작중 하나인 파이어엠블렘은 이번에 처음에 해보았는데, JRPG 중에서는 페르소나 5를 제외하고는 제일 퀄리티가 좋았습니다. 전투도 재밌고, 캐릭터 육성과 스케줄 관리도 잘만들었으며, 캐릭터 매력 자체도 상당했습니다. 다만 4개의 루트 모두 초반에는 공통적인 내용이어서 한개의 루트만 클리어하고 하차했었습니다. 2019 나루티밋스톰 4\n철권, 킹오파, 스파 같이 각 캐릭터의 고유기술과 운영법을 알아야지만 할 수 있는 게임이 아닌, 기본 시스템만 배워도 쉽게 입문할 수 있도록 만든 살짝 놀라운 게임이었습니다. 몬스터헌터 월드\n스팀에서 친구들과 함께 한 플레이타임이 제일 긴 게임입니다. 이상적으로 상상하던 보스레이득 같은 기분이 들어서 긴장감있게 몰입해서 했던 거 같습니다. 데빌메이크라이 5\n플레이타임은 길지 않지만 3명의 주인공의 플레이스타일들이 너무 다르고, 모두 재밌게 짜여져 있어 놀랐습니다. 보스 전투에서 나오는 음악과 기술 연출들은 가슴을 뛰게 했습니다. 바이오하자드 Re 2\n그 시절 레온이 더 잘생겨져서 놀랐습니다. 플레이타임이 8시간 안팍으로 살짝 아쉬웠지만 예전에 Wii로 즐기던 바이오하자드를 다시 한번 즐길 수 있어 좋았습니다. 게임성도 물론 좋아습니다. 세키로: 쉐도우 다이 트와이스\n프롬 게임중에서는 엘든링과 비교하여 1,2위를 매일 다투는 인생 게임중 하나입니다. 인상 깊었던 것은 게임의 완성도를 위해 멀티 플레이를 버린 것과 다크소울에서 느꼇던 \u0026lsquo;때리고 튀기식\u0026rsquo;의 루즈함을 패링 시스템으로 저돌적으로 변하게 하여 해결하는 기획력이었습니다. 스타워즈 제다이 : 오더의 몰락\n설마 스타워즈로 소울류 게임이 나올 줄은 몰랐습니다. 세계관이 잘 짜여진 스타워즈 속에서 자유롭게 모험을 할 수 있다는 것에서 큰 재미를 느낄 수 있었습니다. J 스타즈 빅토리 버서스\n점프 만화 캐릭터들을 좋아해서 플레이했습니다. 오라오라가 가능한 죠죠를 제일 많이 플레이했었습니다. 2018 와치독스2\n전편에 비해 불편한 점이 개선되고 게임성이 증가했으며, 정 들었던 전편 등장인물들이 많이 나와서 좋았습니다. 그런데 너무 캐릭터나 스토리가 가벼워지면서 \u0026lsquo;범죄인 해킹을 하고 있는데 이런 분위기여도 되나?\u0026lsquo;라는 의문은 잠깐씩 들었습니다. 갓 오브 워\n생각보다 어려웠던 게임성 덕분에 Ps3 시절에는 잘 못했던 갓오브워가 돌아왔습니다. 연출과 스토리에 더 신경써지고 가족애도 추가되면서 더 몰입은 잘 되었던 거 같습니다. 다만 중간에 나오는 퍼즐 요소들은 몰입을 조금씩 방해했던 거 같습니다. 철권 7 Fated Edition\n콘솔 게임중에서 제일 많이 플레이한 게임이었습니다.(약 1000시간). 버튼 4개에 각각 왼손,오른손,왼발,오른발이 할당되어 있고 왼손과 왼발을 같이 누르면 양손이 나가고, 오른손과 왼발을 같이 누르면 실제로 두 개만을 사용하는 기술이 나가면서 감탄했습니다. 레인보우식스 시즈\n머리를 매우 잘써야 하는 5 대 5형식의 FPS 게임은 이제껏 해보지 못해서 참신했습니다. 오퍼레이터별 고유 능력과 드론 정찰 능력, 에임이 안좋으면 고유 능력으로 대체 가능한 점이 마음에 들었습니다. 다만 티어가 올라갈수록 어이없게 죽는 모습에 스트레스를 많이 받아 어느센가 안하게 되었습니다. 2017 페르소나 5\n3편부터 해온 페르소나 팬으로서 페르소나 5는 완벽했습니다. 강렬한 연출과 강화된 커뮤니티 시스템, 그리고 전투까지 모두 완벽했습니다. 성우를 이용하여 유저를 속이는 연출 또한 충격적이었습니다. 니어: 오토마타\n캐릭터 디자인이나 스토리 구성, OST, 엔딩 모두 강렬했던 게임이었습니다. OST만 들어도 그때 당시 플레이했던 몽환적인 포스트 아포칼립스 느낌을 그대로 받을 수 있어 좋았습니다. 다만 스토리 구조상 어쩔 수 없는 회차 반복은 살짝 지루했습니다. 이블 위딘 2\n초반부에 나오는 사진작가 컨샙의 보스가 마음에 들었었고, 크리쳐도 전만큼 기괴해서 마음에 들었었습니다. 그러나 흑막으로 등장하는 보스는 멋이 없어서 별로였습니다. 바이오 하자드 7:레지던트 이블\n액션으로 너무 치우졌던 바하 시리즈가 다시 공포 위주로 돌아오게 되었습니다. 보스들 모두 광기스러워 무서웠습니다. 바이오하자드가 1인칭이 된 것은 개인적으로 공포감을 더 주는 것 같아 환영이었습니다. 인왕\n소울류라는 수식어 생기게 되면서 처음 접해본 게임이었습니다. 다크소울의 레벨 디자인은 따라가지 못해서 4번째 보스가 넘사벽으로 어렵고 스트레스도 많이 받았지만, 후반부로 갈수록 경직치가 높아지면서 수월해졌습니다. 슈퍼로봇대전 V\n초등학교때부터 좋아하던 슈로대 시리즈가 한국어로 나오면서 놀람을 그치지 못했습니다. 파일럿 간에 만담과 크로스오버 스토리를 보면서 상당히 재밌게 했던 거 같습니다. 개인적으로 스토리 주역 기체가 너무 사기적인 것은 조금 아쉬웠습니다. 여기서도 역시 에반게리온만 키웠습니다. 화이트데이\n어릴 때 BJ들이 하던 것은 많이 봐왔는데, 다운받는 방법을 몰라서 못했었습니다. 그래서 리메이크판이 나왔을 때에는 기대가 많이 되었고, 개인적으로는 한국 요소들을 잘 섞어서 공포게임을 만들었다는 것에 대해 큰 만족감을 얻었습니다. 2016 다크소울3\n프롬팬으로서 기대를 많이 했지만 유입을 늘리기 위한 난이도 하향화로 많이 아쉬웠습니다. 다크소울 2 : 스콜라 오브 더 퍼스트 신\n공략을 보았는데도 게임이 어려웠습니다. 회복약을 먹는 속도도 답답할 정도로 느렸으며, 죽을때마다 피가 최대 50%나 줄어들기도 하고, 맵도 악질적인 함정들이 많았습니다. 그럼에도 제일 모험 느낌이 나는 다크소울 시리즈는 2편이였습니다. 다크소울 1\n공략을 보면서 깨서 그런지 생각보다 어려운 느낌은 못받았었습니다. 처음에 활을 이용하여 용의 꼬리로 된 검을 얻거나, 1티어 무기를 얻으면서 깨니 큰 어려움은 없었습니다. 최대 고비는 온슈타인과 스모우였습니다. 파이널 판타지 15\n트레일러와 플레이 영상 모두 멋있게 나와서 기대를 많이 했었지만, 남자 4명이서 모험하면서 서로 티격태격 싸우기만 하다가 스토리가 산으로 가면서 좋은 인상을 주지는 못했습니다. 그래도 마지막에 모든 팬텀 소드를 이용해 보스를 쓰러트리는 연출은 개인적으로 멋있었습니다. 바이오쇼크 1\n1편의 경우, 플라스미드와 무기를 교체하면서 들어야한다는 것에 불편함을 느껴 하차하게 되었습니다. 이 게임의 최대 매력은 반전스토리였는데 이미 스토리를 알고 있던지라 아쉬움은 크지 않았습니다. 바이오쇼크 2\n손에 남자의 로망인 드릴이 달린 빅대디가 주인공이여서 재밌게 플레이했습니다. 그때는 단순 재미였지만 지금 생각해보면 무언가 아련함이 있었던 게임이었습니다. 2015 다잉라이트\n파쿠르 + 좀비 라는 신선한 소재여서 기대했습니다. 후반부로 갈수록 플레이가 정형화되는 점이 살짝 아쉬웠지만 그래도 재밌었습니다. 바이오하자드 레벨레이션스 2\nCo-op이 되는 바이오하자드여서 친구와 클리어했습니다. 다만 바이오하자드 특유의 공포 느낌은 없었고 평범한 3인칭 좀비 게임이었습니다. 배트맨 아캄나이트\n이전에 보단 배트맨보다 슈트가 멋있어서 구매해보았습니다. 라스트보스가 생각보다 멋이 없었고, 차 액션이 많아서 취향은 아니였습니다. 블러드본\n프롬 게임은 다크소울2를 해보고 너무 어려워 그만두었었습니다. 그런데 블러드본은 컨셉이 너무 멋있어서 한번 더 잡게 되었고, 프롬팬이 되었습니다. 무기가 전부 변형 가능하고 보스들이 전부 멋있는데다, 맵 어딜가든 이어지니까 모험하는 느낌이 잘 났습니다. 스타워즈 배틀프론트\n스타워즈 IP를 좋아했어서 배틀필드 3보다 재밌게 했습니다. 특히 포인트를 벌어 소환 가능한 다스베이더와 루크가 싸우는 것을 멀리서 구경할 수 있어 좋았고, X윙타고 공중전을 할 수 있다는게 큰 재미 요소중 하나였습니다. 바이오쇼크 인피니트\n처음에는 기괴한 세계관과 찰흙같은 그래픽으로 거부감이 들었는데, 플레이하다보니 금방 몰입하게 되었습니다. 조력자 포지션은 바하4의 애슐리밖에 없었는데, 엘리자베스는 정말 서포팅을 잘했었습니다. 바이오쇼크 시리즈 통틀어 제일 재미있었습니다. 메탈기어솔리드V\n잠입 액션 게임인데, 인재 영입이 더 재미있었던 신기한 게임입니다. 연출이 유치하다고는 하는데 서브컬쳐를 좋아하는 저로서는 멋밖에 없었습니다. 게임이 끝맺음을 하지 못하고 출시된 것이 참 아쉬웠습니다 2014 이블위딘\n바이오하자드 팬인 사람으로서 이블 위딘도 큰 기대였습니다. 개인적으로 바이오하자드 4를 따라잡는 것은 불가능에 가깝지만 바이오하자드 5보다는 재밌게 했었습니다. 기괴한 적에게서 나오는 공포스러움은 바이오하자드 4보다 뛰어났었습니다. 디스아너드\n암살게임중에서 제일 재밌었습니다. 디스토피아적인 세계관에, 초능력을 사용하는 암살자에, 잠입 루트나 암살 루트가 여러가지여서 3회차를 진행했음에도 전부 다른 경험이었습니다. 암살게임인데 암살을 하면 해피엔딩을 못보는 것이 조금 의아했습니다. 영웅전설 섬의 궤적1\nPs Vita로 나온 분량이 큰 서브컬쳐 게임이었습니다. 스토리와 전투, 캐릭터 모두 평범해서 기억에 안남을 뻔 했지만 후속작 암시 결말로 끝나게 되면서 기억에 남게 되었습니다. 와치 독\n해커에게 로망이 있었던 저에게는 매우 큰 기대작이었습니다. 이전에 공개한 트레일러에 비해서는 훨씬 퀄리티 떨어진 모습으로 출시되었지만 그래도 GTA 게임과 해킹을 추가하면서 차별화를 둔 것에 만족하며 플레이했었습니다. 파크라이 4\n파크라이 3은 영어여서 몰입을 하지 못해 그만두었지만, 파크라이 4는 PS4로 한글로 나오게 되면서 플레이했었습니다. 스토리가 가면 갈수록 적보다 아군이 더 나쁘다는 듯이 묘사되면서 진행에 스트레스를 느꼈습니다. 더군다나 악당이 서사있고 매력적이라 더욱 아쉬운 점이었습니다. 어쌔신 크리드 유니티\n제가 본 게임 트레일러 중에서는 2023년까지도 제일 잘만든 게임 트레일러였습니다. 그래서 출시 당일에 망했다는 소문을 전혀 믿지 않았습니다. 이 게임을 플레이하고 어쌔신 크리드 시리즈를 그만두게 되었습니다. 콜 오브 듀티 : 어드밴스드 워페어\n현대 시대에서 미래 시대로 넘어가게 되었습니다. 엑소 슈트를 입으며 슬라이딩과 더블 점프등이 되면서 다채로워졌지만 콜옵의 특징은 그 현대스러운 무거음 같아서 오히려 별로였었습니다. 인퍼머스 세컨드 선\nPS4가 출시되면서 초기 타이틀작으로 구매하게 되었습니다. 그때 인퍼머스 세컨드 선의 그래픽은 넘사벽이었습니다. 주인공의 능력도 비디오나 네온등 신박한 능력이여서 기억에 잘 남았습니다. 특히 연기의 필살기인 궤도 투하가 멋있었고, 카르마가 악 상태의 엔딩을 보면서 충격받았습니다. 메트로 2033\nFPS 중에서는 제일 설정도 치밀하고, 분위기 있는 게임이었습니다. 그때는 몬스터보다 인간과 싸우는 게 많아 불만이 있었는데 지금 생각하면 주고 싶어 하는 메시지중 하나가 아니었을까 생각이 듭니다. 미들어스 쉐도우 오브 모르도르\n엘더스크롤과 비슷할 줄 알았으나, 실상은 어쌔신 크리드에 더 가까웠습니다. 개인 요소나 스토리는 재미있었으나, 중반부 이후부터 진행이 더뎌지면서 하차하게 되었습니다. 2013 아웃라스트\n암네시아 이후로 정신적 후속작이라는 홍보를 많이 하면서 알게 된 게임이었습니다. 기대도 많이 했었고 그 기대만큼 재밌게 잘 나왔었습니다. 친구와 함께 한명은 키보드, 한명은 마우스로 5시간 안에 클리어도 해보았습니다. 히트맨\n암살 게임은 어쌔신 크리드만 해서 그런지 처음에는 밋밋하고 어려웠습니다. 그때 당시에는 총으로 학살 플레이를 하였지만 어쌔신 크리드보다 암살면에서는 훨씬 잘만든 게임이라는 것을 나중에되서야 알게 되었습니다. 페어리펜서 F\n플스에만 있다는 넵튠이란 게임에 관심을 가지게 되었는데, 그거와 비슷하지만 좀 더 모험풍 나는 게임을 선택했었습니다. JRPG스럽게 노가다요소도 있고 스토리도 소년만화스러워서 재밌게 클리어했습니다. DMC : 데빌메이크라이\n데메크 시리즈도 추천 받아서 게임판매원분께 달라고 했더니 단테가 주인공이 아닌 게임을 주었습니다. 요소는 똑같길래 재밌게 했었습니다. 라스트 오브 어스\n명작이란 이런거구나, 딱 알려주는 게임이었습니다. 배경의 아름다움, 스토리의 몰입도, 인물의 갈등 영화보다 더 영화같았던 게임이었습니다. 데드스페이스3\n2편을 다깨고 3편도 바로 플레이해보았습니다. 지금은 기억이 잘 안나지만 2편 특유의 어두운 느낌이 안났었습니다. 데드스페이스2\n인터넷에서 떠돌던 밈중 3대 공돌이(고든 프리먼, 아이작 클라크, 마스터 치프)중 제일 멋있어서 구매해보았습니다. 개인적으로 바이오하자드보다 훨씬 무서웠습니다. 주인공의 호쾌한 분노가 마음에 들었었습니다. 어쌔신크리드 블랙플래그\n어쌔신크리드3에서 해상전투는 그다지 즐겨하지 않았지만 그래도 쌍검에 쌍권총 스타일 주인공이여서 플레이했었습니다. 너무 해상전투가 많고 스토리도 암살에 관련된 부분이 적어서 하차하게 되었습니다. 어쌔신크리드 3\n처음에 하얀 암살자가 아니여서 접을까 여러번 고민했지만, 이후 나오는 주인공 코너 켄웨이가 전투를 너무나도 잘해서 엔딩까지 봤었습니다. 코너가 나오고 처음 받은 미션이 보스턴 차 사건인데, 마침 역사 시간에 등장한지라 큰 충격이었습니다. 어쌔신크리드 리벨레이션\n브라더후드에 비해 에지오가 늙어서 그런지 전투의 재미가 떨어지고, 암살보다는 정보를 얻는 미션이 많아지면서 루즈해졌습니다. 아쉽게도 클리어는 못했습니다. 어쌔신크리드 브라더 후드\n어쌔신 크리드 2를 클리어하고 바로 달렸습니다. 어쌔신 크리드 2 보다 더 재미있어졌을 뿐 나빠진 요소는 없었습니다. 이때부터 학교에서 하얀 후드를 고집했던 거 같았습니다. 어쌔신크리드 2\n지식인에 플스 게임 추천이라고 검색하면 제일 많이 나오는 게임 중 하나였습니다. 게임 시작 후, 가족과 건물에 올라가면서 나오는 BGM과 로고를 보고 감동을 받았습니다. 그 당시 기억하기 어려웠던 마키아벨리란 인물을 잘 기억하게 해준 좋은 게임이었습니다. 메탈기어라이징 리벤전스\n인생게임 Top 10안에 들지 않을까 싶습니다. 이때는 초등학교 사이에서 리그오브레전드의 사무라이 캐릭터인 야스오가 유행이었는데, 딱 야스오 그 자체였습니다. 가장 놀라웠던 점은 각도를 지정해서 벨 수 있었는데 그 각도대로 오브젝트가 둘로 갈라지는 것이었습니다. 그 외에도 OST는 10년이 지난 지금에서도 잘 듣고 있습니다. 아키바스 트립 2\n페르소나를 접하게 되면서 서브컬쳐쪽으로도 견문이 넓어졌습니다. 국제전자센터에 갔을 때 우연히 출시일이여서 구매하게 되었고, 어찌어찌하여 다 깨게 되었는데 잘만든 게임은 아니었던 거 같습니다. GTA 5\n최고로 기대를 많이 한 게임이 아닐까 싶습니다. GTA4를 상당히 재밌게 플레이 했고, 거기에 맵이 커지고, 그래픽이 개선되고, 연출도 방대해진 GTA 5는 큰 관심사였습니다. 비행기를 다룰 수 있게 되면서 Ps3 게임중 최장의 플레이시간을 가진 게임이 되었습니다. 이때 GTA5의 인기가 상당해서 안팔리는 게임 CD 하나와 엮어서 9만원에 판매되었습니다. 2012 데드아일랜드\n바이오하자드 시리즈를 클리어하면서 관심사가 좀비로 변경되었습니다. FPS 좀비게임인데 RPG요소가 있어서 놀아웠지만 레벨 디자인이 이상해서 금방 접었던 거 같습니다. 바이오하자드 4\n옛날 재밌게 하던 경험을 떠올려 PC로 다운받았습니다. 컴퓨터 조작법도 참 어려웠는데, 바이오하자드 6을 깨고 오니 고정사격자세도 불편해서 깨는데 어려움이 있었습니다. 지금봐도 타자기 저장이라던가 가방 정리라던가, 획기적인 시스템이었습니다. 바이오하자드 6\n바이오하자드 시리즈 처음으로 무빙샷이 가능해졌습니다! 주인공도 3팀이나 있었는데, 스토리가 전부 실패하거나 돌아가는 영향이 었어서 몰입은 안되었었습니다. 바이오하자드 5\n처음에는 레지던트 이블이라 써져 있어서 무슨 게임인지 몰랐습니다. 하다보니 옛날에 하던 바이오하자드와 비슷하다는 것을 알았고, 찾아보다보니 동일 시리즈였던다는 것을 알게되었습니다. 마지막 보스 웨스커가 참 어려웠었습니다. 페르소나 4 더 골든\nPS Vita가 출시되었습니다. 당시에 판도라 tv에서 Ps2 페르소나4를 보면서 아쉬워했었는데, 플레이하게 되서 기뻤습니다. 페르소나3 캐릭터들이 더 멋있던지라 P4는 살짝 아쉬웠었습니다. 콜오브 듀티 블랙옵스2\n블랙옵스의 후광을 받아 블랙옵스2도 출시를 기다려서 사게 되었습니다. 이전에 나온 모던 워페어3에 비해서는 재미있었지만 블랙옵스를 이기지는 못했습니다. 2011 마계전기 디스가이아 4\n제일 패인처럼 깬 게임이었습니다. 캐릭터도 개성적이었고 플레이 요소도 서양 게임에 비해 빈약했지만 어딘가 모를 중독성이 있었습니다. 이때 노가다 라는 개념을 처음 이해했습니다. 고인물들의 노가다 방법을 보면서 이해하지 못하고 벽을 느껴 후일담은 클리어하지 못했습니다. 페이데이 2\n초등학교 4학년, 스팀을 알게되었습니다. 온라인 게임이 판치던 시절, 또래 친구들에게 게임을 돈주고 산다는 개념을 이해시키느라 힘들었었습니다. 그때 당시에는 대부분의 친구들이 사양이 좋지 않아 하다가 팅기는 일이 일상이었습니다. 엘더스트롤 스카이림\n어떤 영화였는지는 기억이 안나지만 중세 판타지 영화를 보고 플레이하게 되었습니다. 엑스박스판이여서 한글은 없었지만 엄청난 자유도와 제일 판타지스러운 게임이여서 재밌게 했었습니다. 걸어서 마법학교까지 가서 퀘스트를 받은 기억이 아직도 선명합니다. 다크니스2\n엑스박스 360이 개조되면서 게임이 들어있는 하드디스크를 사용할 수 있게 되었습니다. 총 게임에 빠져있던 중 우연히 발견하게 되었는데 다소 폭력적이긴 했지만 악마를 이용해서 차문짝을 방패로 삼거나 채직으로 휘두르는 재미가 상당했습니다. 포탈 2\nCo-op추천 게임이여서 Ps3으로 구매했었습니다. 형에게 \u0026lsquo;아 거기 아니라고!\u0026lsquo;라고 야단 맞으면서 무서워하며 클리어했던 기억이 있습니다ㅠ 페르소나 3\n전자상가 아저씨가 명작이라고 PsP에 다운로드해주었습니다. 처음에는 사람이 관짝이 되고, 녹색 달이 나오고 기괴했지만 커뮤니티 시스템이 흥미로워서 하다보니 클리어했습니다. 이때부터 스토리도 재미에 포함시켰습니다. 암네시아 : 더 다크 디센트\n친구들과 집에서 공포영화를 보거나 공포 게임을 하는 것을 좋아했었습니다. 아직까지도 공포게임 넘버원인 것 같습니다. 개인적으로는 자신의 죄책감을 시험하는 DLC 스토리, 저스틴이 제일 인상깊었습니다. 이때 왈도식 번역체 \u0026lsquo;주웠다. TinderBox\u0026rsquo;를 처음 경험했었습니다. 프로토타입, 프로토타입 2\n칼, 해머, 쨰찍, 갑옷등으로 변신하면서 무쌍 형식으로 적을 쓸어버리는 색다른 GTA류 게임이었습니다. 스토리는 몰랐고 단순히 게임성으로 재밌게 했고, 나중에 2편에서 1편의 주인공이 보스로 나오는 것을 보고 충격을 크게 받았던 거 같습니다. 세인츠로우 3\nGTA 4를 플레이하고 대체 게임을 찾다가 발견했습니다. 아저씨가 \u0026lsquo;센초\u0026rsquo;라고 알려줘서 네이버 지식인에 물어봤던 거 같습니다. GTA에 비해 탈것과 무기가 B급 느낌나게 쌈마이해서 재밌게 했었습니다. 인퍼머스 2\n스님 같이 생기신 분이 전기를 쏴대면서 거리를 날라다니는 것을 보고 구매하게 되었습니다. 이후에 프로토타입을 알게되면서 심심한 게임성이라고 생각하여 접게 되었던 거 같습니다. 슈퍼로봇대전 L\n에반게리온 파를 보고 닌텐도 Dsi를 구매했었습니다. 2명이 한 유닛으로 묶여서 플레이되는데 적 처치 시간이 너무 걸리게 되면서 루즈해졌던 거 같습니다. 2010 마인크래프트\n이때 버전이 1.7.3이었습니다. 1.8.1로 넘어가면서 허기시스템과 정글이 생기면서 재미가 없었던 거 같습니다. 모드 충돌 방지법을 배우면서 컴퓨터 이해도가 높아졌었습니다. 이떄 네이버에서 여러가지 다운받으면서 즐겨찾기에 11번가, g마켓등이 많이 생겨났었습니다. 게리모드\n이때 처음으로 토렌트라는 것을 사용해보았습니다. 토렌트 사이트에 제일 많이 올라온 게리모드를 다운받아서 했고, 매우 높은 자유도로 인해 전쟁도 시켜보고 이것저것 하면서 재밌게 했었습니다. 이후에는 스팀으로 구매하여 멀티 플레이했습니다. 레프트4데드2\n이때는 엑박으로 즐겨서 솔로 플레이, Co-op만 했었습니다. 콜옵에 익숙해져서 게임에 무게감이 없어서 친구 올때만 하고 잘 하지는 않았습니다. 콜오브 듀티 월드엣워\n블랙 옵스를 너무 재밌게 해서 찾아보게 되었습니다. 일본군이 담배로 고문하는 장면이 아직도 뇌리에 박혀있습니다. 마지막에 깃발 꽂고 끝나는 부분에서 감동을 느꼈습니다. 다만 블랙옵스에서 재밌게 즐겼던 좀비모드는 재미가 없었습니다. 콜오브 듀티 블랙옵스\n어머니가 서든어택을 금지시켜서 대체제로 찾은 게임이었습니다. 우연히 싱글 플레이를 하게 되었는데, 감옥 탈출하는 것부터 시작해서 마지막에 구속의자에서 탈출하고 스토리가 진행하는 부분에서 소름이 돋았었습니다. 헤일로 3\n엑박의 인기가 식을 무렵, 새로운 Co-op 게임으로 가져왔었습니다. 명작이라고는 많이 했었으나 게임의 무게감이 없어서 재밌게 하지는 않았던 거 같습니다. 슬라이쿠퍼 컬렉션\nPS2때 잠깐 플레이했었는데 퍼즐과 작전 요소가 심해서 못깼었습니다. 더빙이여서 특히 몰입이 잘되었었습니다. 슬라이쿠퍼 3편부터 도입된 소매치기 시스템이 제일 재미있었습니다. 그때는 보스였던 클락워크가 무서워했었습니다. 에일리언VS프레데터 3\n친형이 프레데터를 좋아해서 사놓게 되었습니다. 이전에 AvP2가 Pc 버전으로 있었는데, 그래픽이 너무 안좋아서 하기 싫었지만 AvP3은 그때 당시 그래픽이 많이 좋았습니다. 프레데터로 주로 플레이했었습니다. 2009 대난투 스매시브라더스 X\n닌텐도 역사상 제일 잘 만든 게임이었던 거 같습니다. 스토리 전개 방식이 특히나 훌륭했고 친구 접대 게임으로도 최고였습니다. 젤다의 전설 : 황혼의 공주\nWii가 출시되었습니다. Wii도 얼마 안가 게임을 외장식 하드에 저장할 수 있게 되었습니다. 그중에서 젤다를 플레이했었는데 초등학생이었던지라 11시 방향을 이해 못해서 중간에 막혔었습니다. 로스트 플래닛\n엑스박스 360을 구매했습니다. 한 1시간동안 설산에서 헤맸던 거 같습니다. 라도발킨이나 람머스처럼 아르마딜로 닮은 보스 한명 깨고 길을 잃어 중도하차했던 거 같습니다. 이때는 CD를 험하게 다뤄 뒤에 기스가 많이 나서 게임이 실행이 안되었었습니다. CD 뒷면을 호호 불어보기도 하고 열심히 옷으로 닦았지만 살리지는 못했습니다. 터미네이터 : 미래 전쟁의 시작\n이것도 Co-op이 되어서 친구들을 집에 초대해서 플레이했었습니다. 약점 공격해야하는 적이 많아서 어려웠던 거 같습니다. 레지스탕스 : 인류 몰락의 날\nPS3이 출시되고 나서 처음 플레이해본 게임입니다. 그때는 화면이 반으로 갈라지면서 Co-OP이 되어서 친구들과 같이 했었습니다. 벽을 통과하는 총이나 고슴도치 수류탄이 인상깊었습니다. 2008 포켓몬스터 BW\n닌텐도 유행 끝날 즈음에 플레이한 포켓몬스터 마지막 시리즈였습니다. 포켓몬이 DP에 비해 정이 안가서 그렇게 몰입하지는 못했습니다. 포켓몬스터 불가사의던전 시간의 탐험대\n파랑구조대는 스토리에 정이 안갔는데, 시간의 탐험대는 나무돌이의 간지 덕분에 올클리어를 하게 되었습니다. 초등학교 3학년 정도에 한 게임인데 아직도 스토리는 기억이 나는군요. 뉴슈퍼마리오브라더스\n메인보다는 미니 게임을 더 많이 즐겨했었습니다. 루이지의 같은 카드 맞추기와 폭탄 갈라치기 게임을 많이 했었습니다. 폭탄 갈라치기는 고등학교 3학년 때 리메이크해서 유니티로 만들었었습니다. 어서오세요 동물의 숲\n친구들과 재밌게 멀티 플레이를 하던 중, 치트의 존재를 알게 되면서 인생의 변화를 맞이하게되었습니다. 이때부터 직접 치트판을 인터넷에서 다운받아 sd파일에 옮겼었던 거 같습니다. 초등학교 2학년때였습니다. 리듬 세상\n인생에서 제일 피지컬이 많이 필요한 게임이었습니다. 그떄는 불법 한글인줄 몰랐지만 3번 실패하면 넘어가지는 기능이 있어서 그걸로 꼼수를 썼던 거 같습니다. 탁구와 슈팅스타는 눈감고도 할 수 있었습니다. 슈퍼로봇대전 MX\n에반게리온을 알게 되고 너무 하고 싶어서 초등학교 3학년 때 PSP 들고 용산 지하상가 가서 sd카드에 깔아달라고 했던게 아직도 생각이 납니다. 적진에서 에반게리온 폭주하는 것만 봤던 거 같습니다. 슈퍼로봇대전 W\n아버지가 슈퍼로봇 덕후여서 저에게 추천해주었습니다. 마징가밖에 몰랐는데 거기서 테카맨, 윙건담제로, 아스트레이 레드 건담을 알게 되었습니다. 히이로가 제일 멋있었습니다. 슈퍼마리오 64\n마리오중에서는 제일 기억에 남는 마리오였습니다. 그림에 들어가는 것부터 시작해서, 펭귄 레이스, 쿠파 꼬리 잡고 돌리기등 충격적 요소들뿐이었습니다. 어쩌면 인생에서 가장 큰 모험 요소를 느꼈던 게임이었을지도. 닌텐도 레고 스타워즈\n영화보다 게임으로 먼저 스토리를 다봤습니다. 날렵한 초록 꼬맹이가 유령이 된 게 기억이 남았네요. 지금와서야 요다 인것을 알았습니다. 마리오와 루이지 RPG\n지금보니 완전히 반사신경 피지컬 게임이었습니다. 게임이 후반으로 갈수록 노가다와 피지컬 둘다 딸려서 못깼었습니다. 지금이라면? 별의 커피 울트라 슈퍼 디럭스\n도팡일당보다는 자유도는 낮아졌지만 짜임새는 올랐습니다. 특히 메타나이트로 플레이하는것이 재밌었습니다. 메이플스토리 DS\n인생 첫 온라인 게임, 메이플스토리가 DS로 출시되었습니다. 메이플과 다르게 피지컬이 많이 필요해서 올클하는데 애먹었습니다. 막판에 메이플과 어울리지 않는 4대 죄악 같은 보스들이 어울리지 않아 조금 아쉬웠습니다. 메트로이드 프라임 헌터즈\n닌텐도의 유일한 FPS 였습니다. 게임과 적 디자인이 기괴해서 무서웠었습니다. 다만 서든어택이 유행할 당시여서 닌텐도로 친구들과 닌텐도로 가장 많이 멀티를 즐긴 게임이었습니다.(빨간 클로킹 스나이퍼 유저) 별의 커피 : 도팡 일당의 습격(클리어)\n게임을 다 깨고 나서야 스킬들을 합쳐서 파이어 토네이도, 아이스 소드등을 할 수 있는 것을 알게 되었습니다. 개인적으로 울트라 슈퍼 디럭스보다 재미있었습니다. 포켓몬스터 DP(클리어)\n닌텐도가 발매되고 처음 플레이해봤습니다. 이때의 경험은 신세계였습니다. 저학년떄는 포켓몬만 했던 거 같습니다. ~2007 슈퍼마리오 선샤인\n이질적인 게임큐브에 유일하게 알고 있는 마리오파티가 반가워 플레이했습니다. 유치원생이 하기에는 너무나도 어려운 난이도였습니다. 대난투 스매시브라더스 DX(클리어)\n유치원때 게임큐브로 플레이하였습니다. 폭스와 닥터마리오까지 얻고 기가쿠파, 가논돌프도 얻을 수 있는 줄 알고 열심히 삽질한 경험이 있네요ㅠ 바이오하자드 4(게임큐브)\n아버지의 친구 가게에서 CD를 가져왔던 기억이 있습니다. 그때는 늪에서 헤엄치는 괴물까지 깨고 무서워서 못깼었습니다. 사늘한 회색과 갈색 톤의 배경은 아직도 기억이 납니다. 킹콩 PS2\n영화 킹콩의 영화판이었습니다. 주변에 굴러다니는 뼈를 꺾어서 투창하고, 킹콩으로 연타를 눌러서 공룡 입을 찢어버리는 등 영화 그대로여서 재밌게 했습니다. 나중에 철들고 PSP로도 해봤는데 PS2에는 등장인물이 많았는데 PSP는 주인공과 히로인만 나온 차이점이 있었던 거 같습니다. GTA3\n7살 때 최초로 입문한 게임입니다. 그때는 PS2 개조판이 있어서 쿠키 같은 칩을 꽂으면 게임을 여러개 할 수 있었습니다. 영어를 몰라서 게임을 하나씩 켜보면서 락스타의 로고를 찾았었습니다. 아직도 락스타 로고가 나오면서 계란 깨지는 소리를 기억하고 있습니다. ","date":"2023-03-17T00:00:00Z","image":"https://icebluehalls.github.io/p/playlist-console/title_hu3b04e487d554075e8e6f433e1264e212_67023_120x120_fill_box_smart1_3.png","permalink":"https://icebluehalls.github.io/p/playlist-console/","title":"콘솔 게임 한줄평"},{"content":"이책을 읽은 이유 예전에 어른들이 성공하고 싶으면 책을 많이 읽으라고 말한 기억이 많다. 하지만 나는 이것을 23살이 될때까지 한번도 실천한 기억이 없다. 아니 알고 있어도 실천한 기억이 없다.\n이것을 실천하려고 다짐하게 된 것은 엘리트라고 생각했던 내가 금리에 대해서도 모르고, 환율에 대해서도 이해 못하고, 연말정산도 잘 못하고, 공산당이나 민주주의 대해 정의도 못 내리고, 주식은 맨날 폭망하고, 결국 수박 겉핡기에도 못 미치는 지식으로 으쓱거리고 있었기 때문이다.\n책은 이것을 매꾸기에 매우 좋은 기회이다 싶어 배우게 되었다.\n인상 깊었던 말 1장 1. 난생 처음 인생 설계를 해보다. 각각의 꿈을 이루려면 무엇을 해야 하는지 적어보았다. 예를 들면 60세에 자산 50억 달성, 50세에 20억 달성, 45세에는 10억 달성. 올해는 투자. 오늘 내가 할일은 재테크서 읽기.\n예전에도 이러한 계획을 세운 적이 있었지만 구체적이지는 않았다. 그리고 잘 보이는 곳에 두지도 않았다. 이제부터라도 구체적인 계획을 세워야겠다. 그러면 기회라는 것을 찾기 더 쉽다. 부자가 되는 강의가 들어왔을 때, 10억 벌기라는 목표가 있을 떄와 목표가 없을 때의 받아들이는 차이는 클 것이다.\n2. 아침이 기적이 되다. 글쓴이가 병원에서 읽은 책 중 가장 인상 깊었던 책은 미라클 모닝이라고 한다. 아침에 일어나서 다음과 같은 일을 1분마다 하면 된다.\n명상하기 확신과 다짐의 선서하기 비전보드를 보거나 이뤘다고 상상하기. 감사 일기 쓰기 자기계발서 읽기 몸 움직이기 이것을 수행하면 어느순가 미움이 사라진 것 같다.\n글쓴이는 책에 나온 것을 곶이곧대로 하며 성공하였다. 나도 바로 해보자. 다만 1분은 무리이므로 5분씩 잡아 해보자.\n3. 100점보다는 80점 우리가 바라는 행운은 여유와 다양한 만남 속에서 생기는 것이지, 숨막히게 스케줄이 꽉 짜인 곳에서는 나타나지 않는다.\n일본 여행을 하며 느꼈던 점이다. 스케줄을 빡세게 하여 다닌 결과, 재미라고는 찾아보기 힘들었다. 그냥 장소 찍으러 가는 기계였다. 느슨하게 해야 마음에 여유가 생기며 좋은 일들이 많이 일어난다.\n나를 포함한 가족들 모두 같이 잘살자고 하는 행동이 오히려 가족들에게 피해를 주고 있으니 잘못된 방법이라 판단했다.\n이 또한 극히 공감되었다. 나는 주말에도 계획을 탄탄히 잡고 지키지도 않으면서 가족들에게는 이 일을 해야 되니 주말에 건들지 말라고 툴툴거렸다. 이 행동을 인지하고 있으니 이보다 더 스트레스 적인게 없었다. 떄로는 놓쳐도 된다. 지키지 않아도 된다. 힘을 빼보자.\n80점을 받았다면 자신에게 보상하라. 옷을 사거나, 좋은 음식을 먹거나, 여행을 가거나등. 지속하는 힘이 길러지면, 어느 순간부터는 보상이 없더라도 자연스럽게 습관이 된다.\n나는 모바일 겜 가챠나 여행을 그냥 막무가내로 간다. 기회비용을 방패로 삼아. 어차피 쓸 금액인데 지금 쓰는게 이득이지 라는 핑계로.. 돈이 지급되는 조건을 박아놓아야 비로소 내 돈도 절약되고 동기부여도 될 것 같다.\n4. 실천 독서가 앞당겨준 나의 미래 인생 계획서를 작성할 때는 전체적인 구성에서 한 가지 추가되었다. \u0026lsquo;나만의 인생 철학\u0026rsquo;이란 항목을 삽입했다. 인생 철학이 확립되니 도달해야할 목표가 선명해졌을 뿐만 아니라, 목표를 따르는 삶에 보람도 느낄 수 있었다. 글쓴이의 철학은 \u0026lsquo;경제적 자유를 통해 가족과 세상을 위한 삶을 살자\u0026rsquo;였다.\n나에게 철학은 \u0026lsquo;내로남불 금지\u0026rsquo;, \u0026lsquo;일한 만큼 버는 세상에서 당당하게 살 수 있도록 열심히 살자\u0026rsquo;였다. 이보다 더 구체적인 철학을 세워보자\n내가 가고자 하는 길을 간절히, 선명하게 알고 있다면, 그 기회나 행운이 옆을 지나갈 때마다 놓치지 않고 그것에 올라탈 수 있다.\n나는 현재 내 길을 구체적으로 선정하지 않았다. 선정 필수!\n3장. 책에서 찾은 돈 버는 방법 1. 꿈을 이루는 바탕이 되는 경제적 자유 나는 자신 있게 말할 수 있다. 돈을 벌고 싶다면 \u0026lsquo;부자 아빠 가난한 아빠\u0026rsquo;를 읽어보고 그대로 한번 따라 해보라.\n실천해보자\n2. 책으로 배운 지식을 주식에 활용하는 법. 장기 투자로 접근해 성공한 사람들의 방법, 즉 가치투자 방법과 기업의 재무제표 분석을 담은 책을 집중적으로 읽기로 결심했다. - 치과 의사 피트씨의 똑똑한 배당주 투자\n주식 책은 한번도 안읽고 그냥 이름 예뻐서 사는게 전부였다. 너무나 부끄러운 과거지만 지금을 위해서라도 가치투자, 재무제표를 읽어보자.\n그런데 신기하게도 어떻게 하면 돈을 많이 벌 수 있는지는 공부하지 않는다. 주변에서 주식으로 돈을 벌었다는 말을 들을 수 없는 이유는 딱 하나이다. 공부하지 않았기 때문이다.\n맞는 말이여서 부끄럽다. 공부를 열심히 해야겠다.\n3. 투자의 기본이 되는 경제 지식, 책으로 독파하다. 위험은 피할 수 없다. 다만 대응은 할 수 있다. 대응해야 할 시점에 그동안 독서로 쌓은 경제 지식이 밫을 발한다.\n위험은 짊어져야한다. 위험 없이는 성장 할 수 없다. 다만 책을 읽으면 위험을 빨리 감지하고 리스크를 최소화 할 수 있다. 재태크 관련 서적을 읽고 들어가자.\n일단 쉬운 책으로 시작하라. 금리, 환율, 원자재등 분야별로 쉽게 풀이한 책을 한두권씩 읽어보면 투자에 대한 두려움에서 조금씩 벗어날 수 있을 것이다.\n나 또한 금리, 환율 관계를 이해하지 못하니 어려움을 느끼고 금세 접었다. 금리부터 차근차근 공부해보자.\n4. 부자들의 기부가 빛나는 이유. 돈을 벌고 싶다면 세상을 부정적으로 보는 시각을 버려야한다.\n나는 내 지식을 주면 다른 사람들이 이용만 하고 주는 게 없어 소통 자체를 거부했다. 하지만 사람은 여려명이서 해야 효율이 오른다. 다른 사람을 믿어보자.\n긍정적인 사고를 유지하면서 돈을 버는 가장 쉬운 방법이 기부이다. 여러분도 돈을 벌고 싶은가? 사히에 대해, 자신의 삶에 대해 긍정적인 마음을 갖고 싶은가? 제일 손쉬운 기부부터 시작해라.\n기부를 통해 자신감을 얻고, 당당함과 긍정에너지를 얻으면 일이 잘풀린다. 기부는 한번도 생각해보지 못했다. 하지만 지금이라도 해봐야겠다는 마음이 들었다.\n4. 자신감을 키워준 책 읽기 1. 사내 교육은 책 한 권 읽은 효과 비판적 시각을 버리고, 이 책에서 배울 점이 분명 한가지는 있을 거라는 자세로 책을 대하자. 누가 가르쳐준다고 하면 뭔가 배울 것이 있을 거라는 자세를 취한다.\n그동안 회사에서는 사수가 없어 혼나본적이 없다. 하지만 전에 새로운 PM이 왔을 때에는 막 가르치려 하자 거부 반응을 했다. MZ를 욕하면서 똑같은 짓거리는 하는 것이었다. 그분에게 분명 배울점은 많이 있었다. 혼나는 것은 배울게 있다는 뜻이다. 감사히 받아들이자. 혼나지도 않다면 그것은 매우 큰 문제다.\n두세 시간 정도 저자 강연회를 들으면, 저자가 쓴 책 한권을 읽는 것과 같은 효과를 얻을 수 있다.\n발표를 준비하면 알겠지만 5분 발표여도 최소 하루는 자료 조사가 필요하다. 이분들은 우리에게 필요한 정보를 단기간으로 때려박기 위해 노력을 매우 많이 했다. 감사히 받아들이자. 강의 내용을 손으로 적든, 타이핑하든 정리하는 시간을 가져야된다.\n문맥상 중요한 단어 다섯 개의 정의와 유의어, 반의어를 인터넷 국어사전에서 찾아서 파일이나 노트 등에 적어놓아햐한다.\n나도 이 단어의 의미를 설명하라고 하면 제대로 설명하지 못한다. 내로남불 금지. 무지는 죄이다.\n2. 사회 생활의 무기가 되어주는 책 읽기. 내가 반성할 점은 없는지 한번 생각해봤으면 좋겠다.\n반성할 점은 차고도 넘친다.\n개발 부서의 경우, 프로젝트의 목적이 비용 절감인지, 기능 확대인지, 매출 증대인지 경영층의 시선에 맞춰 생각해볼 필요가 있다.\n나도 점점 개발자가 되가면서 이부분을 무시하는 경향이 있다. 구현하기 어려우면 무조건 반대. 하지만 경영진의 시점도 공유해야 반발심이 생기지 않으며 스트레스가 없어지고 공감대가 형성된다.\n3. 독서가 열어준 마음. 어른들이 아이들의 이야기를 끝까지 들어줄 수 있는 것은 아이의 입장을 이해하기 때문이다. 이처럼 직장에서 남을 이해하려고 노력한 적이 있는가?\n직장은 몰라도 친구들과 가족은 전혀 이해하지 않았다. 실패를 비판하고, 덜렁거림을 비판하는 등, 배려심은 찾아볼 수 없었다. 남을 이해하려 해보자.\n책을 읽으면 우리는 자연스럽게 저자의 입장에서 생각해보고 그가 하는 말에 공감한다. 왜 책을 많이 읽으면 공감 능력이 높아질까? 책 내용이 좋기도 하지만, 저자가 하는 말에 공감할 마음의 준비를 하고 책을 읽기 시작하기 때문이다.\n책을 읽어서 얼른 공감이라는 것을 만들어보자.\n5장. 책 읽기가 만들어준 행운들 책으로 깨달은 운명의 원리 명리학은 운명을 고정적이라고 속단하지 않는다. 다른 방법을 통해 충분히 개선할 수 있다고 말한다. 업무 지시를 받으면 짜증부터 낸다. 이러한 마음의 습관을 바꿔야 운명도 개선할 수 있다.\n야근 때문에 기존에 하던 일을 놓치게 되도 그것은 중요한 경험이 된다. 긍정적으로 받아들이자.\n우리는 보통 자신이 상식에 근거해 행동한다고 생각한다. 그래서 자기 기준에 맞지 않게 행동하는 사람을 보면 문제가 있다고 판단한다. 하지만 그건 사람이 틀린게 아니라 나와 다른 것일 뿐이다.\n나도 나는 아누비스 마냥 심판도 가능한 상식적인 사람이라고 생각한다. 하지만 삼성 회장등이 봤을 때는 풋내기다. 사람은 다른 것이지, 틀린 사람은 없다.\n6장 여러 책을 동시에 읽으면 좋은 점이 많다. 지루할 틈이 없다.\n나 또한 한 책만 읽으면 지루해서 10분만에 잔다. 서로 다른 책을 번갈아가며 자극을 이어나가자.\n우선 20권 정도를 읽으니, 책의 수준을 판별할 수 있는 나만의 눈높이가 생겼다.\n한분야는 무조건 20권씩 읽어라.\n효과적으로 읽으면서 필사할 때의 이해도를 높이기 위해, 처음 읽을 때 중요하다고 느낀 것들은 빨간색으로 줄을 그엇다. 두 번째로 읽으면서 중요하다고 느낀 것들은 파란색으로 줄을 그었다. 즉 한번 읽고 나서 어느 정도 이해가 되니, 두번째 읽을 때는 연관 지식을 기반으로 놓쳤던 중요 내용들이 보이기 시작한 것이다.\n나도 이렇게 두번씩 읽으면서 밑줄을 한번 더 쳐보자.\n지금까지 책을 빌려간 사람들이 일주일 내로 다 읽었다며 돌려준 기억이 없다. 배우기 위해 책을 읽겠다고 결심했다면, 일주일 내로 다 읽기를 권한다.\n일주일에 한권, 무조건!\n","date":"2023-02-23T00:00:00Z","image":"https://icebluehalls.github.io/p/worker16/main_huc004a23cbc5a35c0a1224c50f5a9f591_311544_120x120_fill_box_smart1_3.png","permalink":"https://icebluehalls.github.io/p/worker16/","title":"16년 차 월급쟁이, 2년 만에 경제적 자유를 얻은 실천 독서법"},{"content":"이책을 읽은 이유 예전에 어른들이 성공하고 싶으면 책을 많이 읽으라고 말한 기억이 많다. 하지만 나는 이것을 23살이 될때까지 한번도 실천한 기억이 없다. 아니 알고 있어도 실천한 기억이 없다.\n이것을 실천하려고 다짐하게 된 것은 엘리트라고 생각했던 내가 금리에 대해서도 모르고, 환율에 대해서도 이해 못하고, 연말정산도 잘 못하고, 공산당이나 민주주의 대해 정의도 못 내리고, 주식은 맨날 폭망하고, 결국 수박 겉핡기에도 못 미치는 지식으로 으쓱거리고 있었기 때문이다.\n책은 이것을 매꾸기에 매우 좋은 기회이다 싶어 배우게 되었다.\n5장 - 심플코드 통합하기 샘플코드의 유형 실행가능형 설명형 고객이 원하는 코드 문서 훑기 샘플 코드 찾기 샘플 코드의 개념 파악하기 복붙하기 샘플코드와 응답 예제가 일치 필수요소 설명이 제공됨 간결함 명확함 사용 가능함 신뢰할 수 있음 추가 요소 인라일 주석 코드 샌드박싱(시간과 노력 필요) 샘플 코드 자동 생성하기(Open API 사양) 6장 - 시각적 컨텐츠 제공하기 사진 한장 보는데 0.013초 = 글을 사진보다 더 잘 쓸 자신 없으면 사진 써라\n사진 요소 이해 용이성 : 이 콘텐츠가 독자에게 도움이 되는가? 접근성 : 일부 독자에게 사용하기 어렵지는 않은가? 성능 : 콘텐츠의 크기와 포맷이 독자에게 도움이 되는가 이나면 방해가 되는가? 주의할점 화질이 클수록 문서가 로딩되는 속도에 영향을 미칠 수 있다. 메뉴 상단의 작은 톱니바퀴 이미지 -\u0026gt; 메뉴 상단에 작은 톱니바퀴가 있습니다. 다른 사람에게 이미지를 설명하는 어투로 작성 샘플 코드는 이미지 X 다이어그램 데이터베이스 -\u0026gt; API -\u0026gt; 클라이언트 -\u0026gt; 사용자 연결선은 엉키거나 크로스되지 않도록. 단방향 혹은 양방향만 제시. 병행 라인 X, 한라인만 설명 SVG 포멧으로 이미지를 게시하기 비디오 컨텐츠 정말 필요한 것인지 생각하기 돈주고 전문가 부르기(기회비용) 7장 - 배포 일단 배포하고 생각하자. 콘텐츠 릴리스 프로세스 콘텐츠를 언제 배포하는것인가? 최종 검토와 배포는 누가 담당하는가? 콘텐츠를 어디에 배포할 것인가? 콘텐츠를 배포하려면 어떤 소프트웨어 도구가 추가로 필요한가? 새로운 콘텐츠를 사용자에게 어떻게 알릴 것인가? 단점: 설명이 어찌보면 당연하다는 것을 서술. 예시가 전무. 구체적인 통계가 전무 ","date":"2023-02-23T00:00:00Z","image":"https://icebluehalls.github.io/p/docs-for-programmers/main_huc004a23cbc5a35c0a1224c50f5a9f591_311544_120x120_fill_box_smart1_3.png","permalink":"https://icebluehalls.github.io/p/docs-for-programmers/","title":"Docs for Programmers"},{"content":"Chapter 6. 유지율 해킹하기 고객 유지율이 5퍼센트만 상승해도 수익이 25~95퍼센트까지 증가할 수 있다. 반대로 말하면 고객을 잃게 되면 엄청난 대가가 따른다는 것이다.\n복리처럼 불어나는 고객 유지의가치 고객 매출의 증가 -\u0026gt; 수입 상승 -\u0026gt; 제품 향상 -\u0026gt; 더 많은 투자 발생 입소문과 바이럴 마케팅 활동에서 큰 효과 있음(제품 만족에 따른 자진광고) 가장 확실한 길로 곧장 나아가기 처음 한달 정도 앱을 사용하고 빈도가 떨어지는 고객이 많다는 결과가 나왔다.\n더 많은 고객을 남게 하기 위해서는 무엇을 해야할까?\n모바일 알림 늘리기, 할인 제공, 새로운 기능 개발 -\u0026gt; 효과적이지만 비용이 많이 들어 부담이 됨. 그로스해킹 팀에서는 이 제안을 빨리 수집하고 분석. 테스트를 해야 한다. 일주일당 하나의 모바일 알림 보낼 시 10%, 두개는 35% 돌아온다는 결과 발견. 발전시켜 이탈 유저에게 알람을 두개 더 보냄 이와 같이 비용이 드는 아이디어를 빠르게 수집하고 분석하여 유의미하게 비용을 사용할 수 있도록 해야함. 무엇이 유지율을 이끄는가 고객이 \u0026lsquo;머스트 해브\u0026rsquo;라고 여기게 되는 질 좋은 제품이나 서비스를 제공하냐에 따라 달렸다.\n유지율을 높이기 위해서는\n안정적인 유지율을 달성했더라도 다양한 이유로 떨어지는 경험을 하게 될 수 있다.(경쟁사 등장, 소통 부족) 그로스해킹팀은 유지율 저하의 어떤 조짐도 초기에 탐지하는 능력이 있어야한다. 탐지하고 급속 실험 절차는 반드시 수용해야한다. 유지율이 높아지는 제일 큰 방법은 머스트 해브의 핵심 가치를 강화시키는 것이다.(제품 향상) 고객에게 제공하는 것을 개선하기 위해 끊임없이 노력해야한다. 고객 유지의 3단계 초기 유지기 새로운 상요자가 제품이나 서비스를 계속 사용할지 혹은 구매할지 확실하게 마음먹게 되는 시기. 모바일 앱은 약 하루, SNS는 1~2주, Saas는 한달이나 한분기, 전자상거래는 90일 정도 초기로 본다.\n여러 연구에서는 이 초기 사용 기간 동안 제품의 가치를 충분히 활용한 사용자들은 장기간 머무를 가능성이 높다는 점을 보여준다.\n또한 이 단계에서는 사용자 경험을 개선할 기회가 많이 있으므로, 알람이나 메일 발송을 보내 리텐션이 떨어지지 않도록 해야한다.\n중기 유지 단계. 제품의 참신성 때문에 생긴 관심이 시들해지는 시기.\n여기서는 그로스해킹 팀이 제품의 사용을 습관처럼 만드는 일이다. 시간이 지나면서 제품의 사용을 일상에 통합시켰기 때문에 자극을 받지 않아도 제품을 사용하게 되는 수준으로 만들어야한다.\n그들에게는 자극이 필요하지 않고 습관처럼 스스로 찾아서 사용한다.\n장기 유지 그로스해킹 팀은 제품이 끊임없이 고객에게 더 많은 가치를 제공하도록 도움을 주어야 한다. 어떠한 제품을 강화하고 만들면 좋은지 데이터를 모아서 제품 개발팀에게 요청해야한다.\n코호트 확인과 도식화 코호트 없이 이번달에 신규 가입자수가 올랐다고 무턱 좋아해서는 안된다.\n이탈율로 인해 최종적으로 유저가 많이 남았는가를 봐야한다. 가입자 수가 500인데 이탈율이 50%인것과 가입자 수가 300인데 이탈율이 15%인것은 거의 동일하기 때문이다.\n유저 이탈율이 많은 달이 눈에 띄인다면 그때 무슨 일이 있었는지 조사해보자. 광고를 진행하였는데 제품과 잘 맞지 않는 신규 고객들이 많이 유치되었을 수 있다.\n식료품은 가입 첫 달에 한번 구매한 사람, 두번 구매한 사람, 세번 구매한 사람, 네번 구매한 사람으로 나누어 6개월간 분석하였고, 3개부터 유지율이 높아진다고 알게 되었다.\n초기 유지 해킹하기 초기 유지 단계의 하락 지점을 확인하고 설문 조사를 통해서 이탈의 원인을 조사했다면 이제 해법에 대한 실험을 시작해야 한다. 이 단계에서 가장 중요한 두가지 전략은 신규 사용자 경험을 개선 + 제품의 핵심 가치를 가능한 빨리 경험하게 하는 것.\n습관 현성하기 습관 = 빈도에 관계없이 고객이 제품을 사고자 할 때마다 혹은 서비스를 원할 때마다 경쟁사가 아닌 해당 회사로 온다는 것.\n외부 촉발제를 잘 이용해야한다.\n헬스클럽은 가서 운동을 하도록 스스로의 마음을 가다듬게하는 외부 촉발제가 필요하다.(like 알람 등록, 친구와 운동약속)\n하지만 운동을 통해 내 몸의 변화가 보인다는 핵심 가치를 만나면 더이상 외부 촉발제가 필요하지 않다.\n프라임은 무료 배송을 하고 그 무료 배송을 한 덕에 얼마를 절약하였는지 알려준다. 즉 보상을 준다.\n유형적인 보상과 경험적인 보상 보상 전략은 대부분 고객에게 절약할 기회를 주거나, 쿠폰, 현금 상품권 선물등을 제공하는데 초점을 맞추고 있다.\n그러나 습관 현성에 제일 효과적인 보상은 눈에 보이지 않는 보상이다.(like 페이스북 좋아요)\n브랜드 홍보대사 프로그램 : 사회적 지위를 주면서 남들에게 유니크하다고 느끼게 하는 비싼 카드나 그 예시.(사람의 수 제한, 혜택 비공개등) 업적의 인정 : 화시가 그들을 인정하고 있다는 점을 표현하는 것. 런키퍼에서 사용자가 처음으로 10마일을 뛰거나, 페이스북에서 좋아요를 50개 이상 받아서 이메일을 보내거나, 구글 서치 콘솔에서 조회수 50일 넘으면 이메일을 보내며 고객을 인정하고 모티베이션을 주는 것.(아하 포인트에 다다를때쯤 제공) 관계의 맞춤화 : 개인화를 통해 자신만을 바라봐주고 있다는 PT받는 느낌을 들게 한다. 개봉 박두 : 제품의 출시 에정 기능들을 광고하여 지속적인 관심을 유지하게 한다.(잦은 연기로 짜증 유발하면 꽝) 장기 유지 고객을 안정적으로 유지하는 데 성공하였다면 ,다음 단계는 계속해서 고객을 만족시키면서 장기적으로는 매우 적극적으로 활동하게끔 초점을 맞추는 것.\n그러기 위해서는 아래 두가지 방법을 적절하게 유지한다.\n제품 기능, 알림, 반복 사용에 대한 보상으로 이루어진 기존의 유지 방안을 최적화 장기적으로 신기능을 꾸준히 도입 많은 기업들이 기능만 너무 많이 만들다보니 팽창 하는 사태가 발생한다. 제품이 지나치게 복잡해지면서 진입방벽이 생기고 핵심 가치를 알아보기 힘들어진다.\n그로스 해킹 팀은 고객에게 시제품이나 베타 버전을 제공하는 실험을 함으로서 예정된 새로운 기능의 호소력을 평가하는데 중요한 역할을 한다.\n식료품점에서는 사용자의 과거 구매 이력과 앱의 인기 상품 정보를 이용하여 식단 메뉴를 추천하는 기능을 제공하기로 하였다.\n그로스해킹팀은 제품 팀, 마케팅 팀과 협력해서 이 기능을 소수의 고객들에게 실험하고 그 결과를 이용해서 사용방법을 개선한다는 전략에 합의한다.\n무료 배송이 얼마나 호의적인지에 대한 데이터를 기반으로, 무료 배송의 하한선을 넘기는 요리법을 추천하도록 해야한다고 제안. 사용자에게 새로운 요리 추천 기능을 앱에서 언제부터 사용할 수 있는지 알리는 촉발제도 실험. 해당 기능을 언제 어떻게 공개해야 할지도 실험. 베타 버전을 이용한 고객들과 기능에 어떤 변화가 필요한지 소통할 방법에 대해서도 실험. 지속형 온보딩 제품의 만족감을 느끼는 사용자들에게는 이후 제품에서 알릴 수 있는 가치를 고객들에게 계속 알리는 일이 중요해진다.\n장기 유지의 또다른 중요한 요소는 학습 곡선을 따라 사용자들을 이동시키는 방법을 알아내는 것이다.(지속형 온보딩)\n상요자들은 어느 저도 제품 사용 경험이 축적된 이후에야 사용 안한 기능과 신기능에 대해 관심을 가지게 된다. 그러므로 사용자들이 완전히 숙련되어 다음 기능들을 사용할 수 있도록 잘 이끌어줘야한다.\n그로스해킹팀은 기능을 설명하는 설명서나 이미지 같은 홍보 자료를 다양한 버전으로 바꾸어서 실험 그룹에 이메일로 보내는 등의 작업을 시도해야한다.\n이메일 메시지가 효과적이라면 랜딩 페이지에 기능 홍보 라디오를 추가하는 식으로 제품 자체게에서 기능을 강조하는 실험도 할 수 있다.\n\u0026lsquo;좀비\u0026rsquo; 고객의 부활 부활 : 제품에서 이탈한 사용자가 되돌아오는 것.\n이런 고객을 되찾기 위해서는 제일 먼저,\n좀비 유저 이탈 이유 인터뷰하기 좀비 고객의 피드백을 바탕으로 이탈 이유를 해결 가능한 문제인지 파악하기. 이런 좀비 고객을 불러오는 일은 대개 이메일이나 광고를 통해 이루어진다.\n일정 시간동안 활동이 없는 것을 확인하면 그로스 해킹팀은 이메일 커뮤니케이션이나 표적 광고를 보내어 그들이 이 제품을 선택하게 된 계기, \u0026ldquo;아하 순간\u0026quot;을 상기시켜야한다.\n이미 제품에 친숙하고 제품의 \u0026lsquo;아하 순간\u0026rsquo;을 경험하였기 때문에 완전히 새로운 고객 유치보다 더 적은 비용과 노력이 든다.\n어찌되었든 마케팅쪽 푸시가 필요하다.\n느낀 점. 대부분의 언급이 활성화 해킹하기와 동일(사용자 경험 개선 + 제품의 핵심가치 빠르게 만나기) 코호트로 신규 가입 수와 유지율을 비교하며 신규 가입자 수가 많을 경우에 유지율을 보면서 최종적으로 다른 달의 최종 유저수와 다른지 확인해야한다는 것을 배웠다. 우리도 식료품이 가입 첫달에 한번, 두번, 세번, 네번 구매한 것을 구분하는 것처럼 한달 동안 기능 1개, 기능 2개, 기능 3개를 구분하거나 한번 접속, 두번 접속, 세번 접속인지 확인하는 데이터가 있었으면 좋겠다. 일단 유지율의 핵심은 신규 사용자 경험 개선 + 제품의 핵심 가치를 가능한 빨리 경험하게 하는 것이다. 프라임은 무료 배송을 하고 그 덕에 얼마를 절약하였는지 알려주면서 유저에게 촉발제 역할, 보상을 준다. 우리도 이런 것을 할 수 있나? DAU 100돌파, 기능 호출 수 10000 돌파등으로 보이는 업적을 만들고 거기까지 가게 하면 되지 않을까.(받은 업적은 커뮤니티에서 뽐낼 수 있음) ","date":"2023-01-24T00:00:00Z","image":"https://icebluehalls.github.io/post/Books/growth-hacking/growth-hacking.png","permalink":"https://icebluehalls.github.io/p/growth-hacking-chapter7/","title":"진화된 마케팅 그로스해킹(by 션 엘리스) - #Chapter7"},{"content":"멀티쓰레드 쓰레드는 크게 3개 정도로 사용 가능\nThread ThreadPool Task Thread 일반적인 쓰레드. 한번 사용하려면 할당을 해야한다.\n코드\n1 2 3 4 5 6 7 8 9 10 11 12 void OneThread() { while(true) { Console.WriteLine(\u0026#34;실행중입니다\u0026#34;); } } static void Main(string[] args) { Thread t = new Thread(OneThread); t.Start(); Console.WriteLine(\u0026#34;Hello World\u0026#34;); } 결과\n1 2 3 4 5 6 실행중입니다 실행중입니다 실행중입니다 실행중입니다 Hello World 실행중입니다 이것은 쓰레드의 성능에 따라 달라질 수 있다. 어쨌든 병행처리이다.\nThreadPool 쓰레드풀은 여러 쓰레드의 최대갯수를 지정하는 등의 조절하는 역할을 해준다.\n하지만 변수에 object state를 만들어줘야한다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 void OneThread(object state) { while(true) { Console.WriteLine(\u0026#34;실행중입니다\u0026#34;); } } static void Main(string[] args) { ThreadPool.SetMaxThreads(4,4); ThreadPool.QueueUserWorkItem(OneThread); ThreadPool.QueueUserWorkItem(OneThread); ThreadPool.QueueUserWorkItem(OneThread); ThreadPool.QueueUserWorkItem(OneThread); ThreadPool.QueueUserWorkItem((obj) =\u0026gt; { Console.WriteLine(\u0026#34;끝났나요?\u0026#34;); }); t.Start(); Console.WriteLine(\u0026#34;Hello World\u0026#34;); } 결과\n1 2 3 4 5 실행중입니다 실행중입니다 실행중입니다 실행중입니다 실행중입니다 이 경우 TheadPool은 최대 4개까지만 가능하므로, 마지막에 삽입한 끝났나요 호출 쓰레드는 작동하지 않는다.\nTask Thead의 진화판. ThreadPool의 설정을 공유한다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 using System.Threading.Tasks; static void Main(string[] args) { ThreadPool.SetMaxThreads(4,4); Task t = new Task( () =\u0026gt; {while (true) {}}); t.Start(); ThreadPool.QueueUserWorkItem((obj) =\u0026gt; { Console.WriteLine(\u0026#34;1\u0026#34;); }); ThreadPool.QueueUserWorkItem((obj) =\u0026gt; { Console.WriteLine(\u0026#34;2\u0026#34;); }); ThreadPool.QueueUserWorkItem((obj) =\u0026gt; { Console.WriteLine(\u0026#34;3\u0026#34;); }); ThreadPool.QueueUserWorkItem((obj) =\u0026gt; { Console.WriteLine(\u0026#34;4\u0026#34;); }); } 결과\n1 2 3 4 5 6 7 8 실행중입니다 1 실행중입니다 2 실행중입니다 실행중입니다 3 4 컴파일러 최적화 Debug 모드에서 Release 모드로 바뀔 때 컴파일러는 자동으로 최적화하여 빌드한다. 그러나 컴퓨터는 정확한 쓰임새를 모르기 떄문에 잘못된 내용으로 코드를 최적화시킬 수 있다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 static isStop = false; void InfinityLoop() { while(isStop == false) { Console.Write(\u0026#34;안멈출거지롱~~\u0026#34;); } } void Start() { Task t = new Task(InfinityLoop); t.Start(); isStop = true; t.Join(); Console.WriteLine(\u0026#34;끝났습니다\u0026#34;); } Debug Mode\n1 2 3 안멈출거지롱~~ 안멈출거지롱~~ 끝났습니다 Release Mode\n1 2 3 4 안멈출거지롱~~ 안멈출거지롱~~ 안멈출거지롱~~ 안멈출거지롱~~ 이러한 이유는 컴파일러가 Release로 최적화를 하면사 다음과 같이 로직을 변경했기 떄문이다.\n1 2 3 4 5 6 7 void InfinityLoop() { if(isStop == false) { while(true) { Console.Write(\u0026#34;안멈출거지롱~~\u0026#34;); } } } 이러한 값의 변경을 막고자 할때에는 volatile bool isStop = false;를 통해 volatile 키워드를 붙여서 컴퓨터 멋대로 바꾸지 못하게 당부해야한다.\n캐시 CPU 코어에서는 더 빠르게 데이터를 처리하기 위해 캐시라는 개념을 사용한다.\n캐시는 자주쓰는 데이터를 메인 저장공간에 저장하고 꺼내쓰는 식이 아닌, cpu가 메인까지 가지 않고 소지하여 계속 사용하면서 메인 메모리까지의 보내는 것을 단축시키는 역할을 한다.\n강의 예시에서는 테이블의 주문이 있을 때 주문을 받고 바로 주방에 알리는 식이 아닌 테이블을 돌아다니며 주문을 받아 적고 한번에 주방장에게 주는 방식이다.\n다만 직원이 많을 경우에는 각자 가지고 있는 주문표가 겹칠 수도 있으니 꼬일 수도 있다.\n캐시는 두가지 철학이 있다.\n시간적 캐싱(TEMPORAL LOCALITY) : 해당 주소를 사용한 직후 해당 주소값의 데이터를 계속 사용할 수 있으므로 캐싱한다. 공간적 캐싱(SAPCIAL LOCALITY) : 해당 주소를 사용한 주변 주소를 또 사용할 가능성이 있으므로 해당 주소를 캐싱한다.(배열등 인접한 주소 사용시 유용) 메모리 배리어 하드웨어에서도 메모리 최적화 작업이 일어나면서 자기 멋대로 코드를 바꾼다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 static volatile int x = 0; static volatile int y = 0; static volatile int r1 = 0; static volatile int r2 = 0; static void Thread1() { y = 1; r1 = x; } static void Thread2() { x = 1; r2 = y; } static void Main(string[] args) { while(true) { x = y= r1 = r2 = 0; Task t1 = new Task(Thread1); Task t2 = new Task(Thread2); t1.Start(); t2.Start(); Task.WaitAll(t1, t2); if(r1 == 0 \u0026amp;\u0026amp; r2 == 0) { break; } } Console.WriteLine(\u0026#34;빠져나왔습니다\u0026#34;); } 위 코드는 \u0026lsquo;x, y 값이 1이 되었고 이 값을 대입했으니 r1이든 r2이든 1이 되어서 무한루프가 돌 것이다\u0026rsquo; 라고 생각이 되지만\n하드웨어상에서 돌릴 때 y하고 r1하고는 상관이 없네? 그럼 r1 = x 먼저하고 y = 1해도 되겠다 싶어서 순서를 바꾸기도 한다. 그렇게 되면 각 쓰레드에서는 0값이 먼저 대입되고 그 다음에 x,y에 1이 대입되므로 순서가 꼬인다.\n이 것을 꼬이지 않게 하려면? \u0026ldquo;메모리 배리어\u0026quot;를 사용하면 된다.\n1 2 3 4 5 6 7 8 9 10 11 static void Thread1() { y = 1; Thread.MemoryBarrier(); r1 = x; } static void Thread2() { x = 1; Thread.MemoryBarrier(); r2 = y; } Thread.MemoryBarrier()는 캐싱되어 있는 메모리를 동기화시키는 작업으로, 식당으로 치면 기존에 가지고 있던 자신이 받은 주문 쪽지를 주방과 동기화 시키고 다시 오는 것이다. 그럼 다른 쓰레드(직원)이 이를 알아채고 동기화가 되면서 순차적으로 호출이 된다.\n","date":"2023-01-23T00:00:00Z","permalink":"https://icebluehalls.github.io/p/inflearn-gamer-server4/","title":"[C#과 유니티로 만드는 MMORPG 게임 개발 시리즈] Part4: 게임 서버 - 정리"},{"content":"에러 발생 유니티에서 HttpRequest 통신을 구현하였다. 이전 컴퓨터에서는 잘 돌아갔지만 새로운 컴퓨터에서 시도해 보니 다음과 같은 에러가 발생하였다.\n테스트 코드 1 2 3 4 5 6 7 8 using UnityEngine; public class NewBehaviourScript : MonoBehaviour { void Start() { Debug.Log(System.Net.Dns.GetHostName()); } } 실행 시 에러 1 Specfied cast is not valid 열심히 찾아본 결과, 데이터 전송 시에 규격이 맞지 않다는 에러가 대부분이었고, 내가 파싱 방식을 지정하는 것도 아닌데다 다른 컴퓨터에서는 잘만 실행되는지라 이상하여 코드 문제보다는 설정 문제로 추측하였다.\n정답은 Proxy 레지스트리 잘못! 해결 방법은 해당 블로그를 참조하였다.\n다른 컴퓨터에서는 잘 실행되던 문제인지라 로컬 설정값중 에러가 있을 것으로 추측하였고, 그중 제일 신빙성이 있어보이는 것이 서버와 연결하는 프록시 관련 설정이 이상할 것이라고 추측하였다.\n확인해본 결과 ProxyEnable이 REG_DWORD로 되어있어야 하지만 REG_BINARY로 되어있었다.\n해당 레지스트리를 삭제하고 동일한 이름의 REG_DWORD로 생성하였더니 잘 실행되었다.\n","date":"2023-01-23T00:00:00Z","image":"https://icebluehalls.github.io/p/http-request-message-error2/success_hu44029e90c4387745ca36e7ea1bf2bea2_143420_120x120_fill_box_smart1_3.png","permalink":"https://icebluehalls.github.io/p/http-request-message-error2/","title":"HttpRequestMessage 사용 시, Specfied cast is not valid 에러 발생"},{"content":"Chapter 6. 활성화 해킹하기 웹사이트 트래픽의 98퍼센트는 활성 고객으로 이어지지 않는다.\n대부분의 모바일 앱은 3일 내에 사용자의 80퍼센트를 잃는다.\n활성화율의 개선은 \u0026lsquo;아하 순간\u0026rsquo;에 도달하는 신규 사용자의 비율을 높이는 일의 핵심이다.\n제품을 \u0026lsquo;머스트 해브\u0026rsquo;로 만들어 주는 그것을 경험하는 방문자들이 많아질수록 제품을 고수하는 사람도 많아진다.\n\u0026lsquo;아하 순간\u0026rsquo;으로 가는 길 그리기 첫단계는 \u0026lsquo;아하 순간\u0026rsquo;으로 가는 고객의 여정에서 각 지점을 확인하는 것이다.\n식료품의 앱의 경우, 쇼핑객들이 바쁘게 일상생활을 하다 잠시 짬이 생겼을 때 식료품을 쉽고 빠르게 주문할 수 있다고 깨닫는 시점을 \u0026lsquo;아하 순간\u0026rsquo;이라고 지정했다.\n팀은 새로운 사용자가 이 경험을 하기 위해 밟아야 하는 모든 단계를 나열한다.\n앱 다운로드 원하는 상품 검색 상품 장바구니에 담기 신용 카드, 배송 주소 입력 구매 물건 도착 \u0026lt;- 머스트 해브를 느낌 이 단계속에서 전환율을 확인하며 고객을 막는 장애물과 도망치게 하는 원인을 찾는다.\n전환과 이탈에 대한 깔대기 보고서 만들기 위에서 정의한 필수 단계를 퍼널 분석으로 나타낸다.\n퍼널 분석에는 각 제품마다 조금씩 단계가 다르며, 필수에 순차적으로 진행되는 단계들을 넣어야한다.\n요는 제품이 무엇이든 활성화 수간까지 고객 여정의 모든 필수적인 단계를 추적해야하는 것이다.\n이 보고서에는 주요 화동 단계의 전환율은 물론, 제품을 도달하게 된 경로에 따른 방문자 추적 정보도 있어야 한다.\n구글 애드워즈를 통해서인지, SNS를 통해서인지, 온라인 배너 광고를 보고 찾아왔는지등의 추적 정보가 있어야 한다.\n이러한 정보가 있다면 활성화되지 않은 혹은 \u0026lsquo;튕겨나간\u0026rsquo; 고객들 간의 차이를 알 수 있다. 각 전환율을 보고 유독 낮은 전환율이 있다면 이 전환율을 높이기 위해서 시험을 하게 된다.\n결제 정보로 가는 전환율이 낮다면 새로운 지불 형태를 시도하는 등 결제를 더욱 쉽게 만드는 실험을 검토한다.\n괄라루 션이 설립한 온라인 설문조사 업체, 콸라루\n무료로 콸라루를 사용하다 구매한 사람들과 그렇지 않은 사람들을 분리하였다.\n조사끝에 자신이 실시한 설문조사에서 50개의 답변을 받는 사람이 구매로 이어지는 것을 알게되었다.\n션은 50개의 응답이 설문조사의 가치를 명확하게 만들어주는 티핑 포인트라고 결정지었다.\n그래서 새로운 사용자가 진행할 설문조사의 응답이 50개 이상이 될 가능성을 높이는 일을 목표로 많은 실험을 진행했다.\n이메일 문구 변경, 템플릿 제공, 추천 설문조사를 응답률이 높은 설문조사로 제공. 방문자들에게 먼저 연락하여 도움 제공.\n결과는 제품의 가격이 3배 상승했음에도 극적인 증가로 이루어졌다.\n설문조사 수칙 앱을 사용하던 중 설문조사 팝업을 본적이 있을 것이다.\n설문 조사는 효과적인 도구지만 사용자들에게는 대단히 짜증날 수 있다. 그래서 설문조사는 간단하고 다음 두 조건 중 하나를 만족할 때 시행해야한다.\n사용자가 한 페이지에 오래 머무르거나 페이지를 떠나는 경우와 같이 혼란스러움을 나타낼 때 계정을 만들거나 구매를 하느등 많은 사람들이 취하지 않는 단계를 밟은 직후. 두 경우 모두 고객이 다음 단계를 밟기로 하거나 그 반대의 결정을 한 이유에 대해서 귀중한 식견을 얻을 수 있다.\n질문은 하나 혹은 최대 두 개로 할 것을 권한다. 객관식은 생각의 선입견을 줄 수 있으므로 주관식이 좋다.\n식료품 앱은 결제하지 않는 이유에 대해 형식이 너무 복잡해서라고 생각하겠지만 실제 응답은 배송료를 내는지 몰랐다던가, 입력해야하는 코드를 잊어버렸다는 응답을 받게 되었다.\n그리고 할인 코드를 결제 페이지에 자동으로 추가하도록 실험을 하였고, 유의미한 성과를 얻을 수 있었다.\n고객의 연락처를 통해 전화를 하거나 브라우저를 떠나려고 할 때 설문조사 팝업창이 뜨는 등의 방법을 사용해 식견을 얻자.\n여기에 가입을 방해나는 요소가 있습니까? 어떤 문제 때문에 주문을 완료하지 못하셨습니까? 오늘 구매를 하지 않으셨다면, 그 이유를 말씀해주실 수 있겠습니까? 오늘 안심하고 가입하기 위해서 다른 어떤 정보가 필요하십니까? 이 페이지에서 어떤 것을 찾고 계셨습니까? 개선이 필요한 부분이 있습니까? 끈질기게 노력하면 보상이 따를 것이다 퍼널 분석을 하던중 유저층을 조사하고 업무용 이메일 주소로 가입한 사용자가 개인 이메일 게정을 통해 가입한 사용자에 비해 활성화율이 높다는 사실을 발견.\n개인 이메일 대신 업무 이메일을 사용하도록 하는 실험을 진행.\n활성 사용자가 되지 않은 대부분의 사람들이 제품을 한번도 이용한 적 없다는 사실을 발견하여, 제품을 이용하기 위해 교육을 하거나 긴 설명을 하였지만 모두 실패.\n\u0026lsquo;아하 순간\u0026rsquo;을 더 빨리 만나게 하는 데 중점을 두어야 하며, 튜토리얼로 쉽게 제품의 아하 순간을 느낄 수 있게 하였다.\n어떤 실험이 제일 효과적인지는 예측 불가하다. 많이하며 감각을 기르고 꾸준히 데이터를 분석해야한다.\n저항 제거하기 저항(Friction) : 제품 도달을 방해하느 짜증스러운 방해물.\n광고, 캡챠, 긴 응답시간등이 그 예다.\n위 예시들이 짜증나는 것은 모두 공감하지만 개발하는 입장에서는 너무 많이 보다 보니 감각이 둔해져서 이러한 저항이 있는 것을 모를 때가 많다.\n퍼널 분석은 이러한 저항이 많은 부분을 알려주는 좋은 도구이니 적극 사용하자.\n대부분은 신규 사용자 경험에서 문제가 많다.\n신규 사용자 경험 최적화하기 신규 사용자 경험을 최적화하는 첫 번째 규칙 : 단 한번뿐인 독특한 만남으로 취급하는 것이다.\n유저가 제품을 처음 보고 이 제품은 이로운 제품이다! 라는 생각이 들도록 만들어야 한다.\n신규 사용자 경험을 최적화하는 두 번째 규칙 : NUX의 랜딩 페이지가 다음 3가지를 표현해야한다.\n관련성 : 페이지가 방문자의 의도나 욕구에 얼마나 잘 부합디는가, 페이지를 찾은 방문자의 목적에 맞는가 제품의 가치를 보여주기 : \u0026lsquo;이것이 나에게 어떤 이득이 되는가\u0026rsquo;라는 질문에 명확하고 간결하게 대답할 수 있는가 행동을 명확하게 요구 : 해당 랜딩페이지 이후에 할 고객의 행동. 제품의 저항을 업애는 데 효과가 큰 것으로 입증된 두가지 핵시 기법이 있다.\n단일 인증 회원가입을 통해 정보를 일일이 입력하는 것은 큰 영향을 끼친다. 구글 아이디로 가입, 페이스북 아이디로 가입, 네이버 아이디로 가입등의 간편 로그인을 이용하면 유저에게 저항을 최대한 줄일 수 있다.\n깔대기 뒤집기 먼저 \u0026lsquo;아하 순간\u0026rsquo;을 느끼게 하여 제품에 매료시킨 후, 결제 정보를 등록하게 한다.\n최적화는 저항과의 밀고 당기기이다. 에어비엔비는 회원가입을 늘리기 위해서 페이지로 이동할때마다 로그인시 혜택을 적어놓았다. 예약률은 떨어졌지만 가입률은 증가하였고, 제품 판매량은 증가하였다.\n이후에는 저항으로 느껴 다섯 페이지당 한번으로 빈도를 줄였고, 가입률은 4% 줄었지만 부정적인 효과는 완전히 없어졌다.\n그 이후에 고객 추천 글까지 추가로 보여주었지만 글이 너무 많아 주의력을 분산시키는 악영향이 끼쳐서 실험을 그만두었다.\n긍정적인 저항의 힘 어떤 전후 설명이나 단서도 없이 가능한 빨리 제품을 접하도록 하는 것이 항상 최선은 아니다. 때로는 그 과정에 \u0026lsquo;긍정적인 저항\u0026rsquo;을 집어넣을 필요가 있다.\n방문자가 제품의 가치를 이해하고 \u0026lsquo;아하 순간\u0026rsquo;에 이를 가능성을 최대로 높이기 위해 이동 경로에 관기 가능한 단계, 이상적으로는 참여 단계를 집어넣어야 한다.\n이 예시에 대한 부분은 게임에서 찾아볼 수 있다. 아무런 튜토리얼 없이 게임을 진행하게 되면 사람들은 바로 게임을 접게 된다. 그렇기 때문에 튜토리얼을 넣어 게임을 이해하고 재미 포인트를 찾게 하는 것이 관건이다. 간단한 도전 과저를 시작하게 되고 하나의 장애가 해결되면 보상을 제공하면서 그 과정에서 사용자가 게임의 규칙과 환경에 적응하여 게임에 빠지도록 한다.\n페이스북은 새로운 사용자가 자기소개를 작성하고 사진과 신상 정보를 추가하도록 하면서 분석이나 광고에 중요한 개인 정보만을 수집하는 것이 아니라 사용자가 참여하도록 하고 심리적인 보상을 제공하도록 한다.\n많은 개입을 통해 제품의 몰입을 높여 보람을 얻게하는 행동이 중요하다.\n학습 흐름 트위터의 경우, 새로운 계정을 만드는 것뿐만 아니라 새로운 사용자에게 트위터가 무엇인지 보여주는 일도 NUX에 포함되었다.\n트위터 타임라인이 어떻게 작동하는지 보여주고 팔로우를 해야하는 범주를 제안했으며, 사용자들이 주목할 만한 게정을 팔로우하고 자기소개를 작성하도록 하는 학습 흐름을 디자인했다.\n이 학습이 끝날 무렵이면 사용자는 서비스에 가입하는 것은 물론이고 원하는 대로 자신을 소개하고 관심을 두고 있는 뉴스로 가득한 트위터 피드를 보게 된다.\n물론 이런 학습이 필요없는 쇼핑몰 같은 경우에는 이러한 경험은 없어야한다.\n질문표 작성 그저 형식적인 질문이 아닌 고객과의 유대감을 키울 수 있는 질문을 던져보자. 골프 같은 경우에는 성별, 나이, 평균 비거리, 18홀의 평균 점수, 스윙에서의 가장 큰 문제등을 물어본다. 약간의 시간이 투자되지만 일종의 투입을 이끌어내며 사용자와 제품 사이에 좀 더 깊은 사적 유디가 구축된다. 또한 그들에게 최선의 서비스를 제공하려 한다는 느낌도 전달된다.\n이처럼 질문표를 통해서 사용자에 대한 제품의 첫 노출에서부터 제품에 대한 경험을 개인화할 기회를 얻게 된다.\n이 방법은 제품을 고객들의 니즈와 욕구에 맞추는 것이 고객의 입장에서 명백하게 유리할 때 가장 좋은 효과를 낸다.\n다만 개인 정보를 꺼려하는 사람도 늘고 있기 때문에 지나치게 많은 질문을 하지 않도록 유의하자. 질문의 수가 다섯개를 넘지 않도록 하고, 객관식으로 만들라고 조언한다. 이미지나 시각 자료를 포함하면 참여율을 높일 수 있다. 이 미니 설문 또한 엄정한 실험 과정을 거쳐야 한다.\n게임화 본질적으로 게임화는 특정한 활동을 한 고객에게 특전이나 헤택같이 특별한 보상을 제공하는 방법이다.\n어도비는 지루한 교육과정을 완수할 경우 레벨업 프로그램을 제공하는 임무를 제공하였다. 체험판 이용 고객은 임무를 수행하며 소프트웨어의 최대 장점을 배움과 동시에 아하 순간을 거치게 되며 제품의 니즈를 가지게 된다.\n이처럼 도전과 재미라는 오락적 요소를 추가하고 의미 있는 보상을 제공하는 강력한 도구지만 역효과를 낳을 수도 있다. 이 게임의 선택사항이 오히려 주의력을 분산시키고 제품의 이해를 더 낮추는 악영향을 미칠 수도 있다.\n따라서 게임화 시에는 다음과 같은 특징을 갖추어야한다.\n의미있는 보상 보상을 얻는 동안에 느끼는 놀라움과 재미. 즉각적인 만족감 촉발제의 이모저모 촉발제 : 사람의 반응을 이끌어 내기 위한 모든 종류의 프롬프트.(이메일 공지, 모바일 푸시 알림)\n촉발제의 위력은 두가지로 분류된다.\n촉발제가 사용자로 하여금 회사가 바라는 행동을 하게 얼마나 큰 동기를 부여하는가 촉발제로 자극을 받았을 때 사용자가 그 행동을 얼마나 쉽게 할 수 있는가 촉발제는 일단 사용하면 되돌리기 어렵기 때문에 신중하게 실험해야한다. 또한 플랫폼의 규칙에 따라 제한도 많이 있다.\n모바일 푸시 알림의 규칙은 애플과 안드로이드 모두 다르다. 애플은 동의가 있어야 받을 수 있는 방면, 안드로이드는 디폴트가 허용으로 되어있다.\n미국에 메일을 보낼 때에는 미국의 CAN-SPAM 법과 같은 소비자보호법을 따라야한다.\n푸시 알람을 보낼 때에는 사전 동의가 필요한데, 무턱되고 가입하자마자 체크하는 행동을 올바르지 못하다. 이 푸시 알림이 필요한 이유에 대해 각인시킨후에 테스트 하는 것이 필요.\n느낀 점. 제품에 도달하게 된 경로에 따른 방문자 추적 정보(구글 애즈, SNS, 온라인 배너)가 필요한데, 이것의 추적은 가능한가? 브라우저를 나가려고 하면, \u0026ldquo;주문 완료를 방해하는 원인은 무엇입니까?\u0026ldquo;라는 설문조사 띄우기. 좋은 방법 하지만 우리 서비스에서도 가능한가? 정말로 많은 사람들이 설문조사에 응답을 할까? \u0026lt;- 응답해도 이용못하는것에는 변함이 없기 때문. 설문조사 완료 시, 최초 1회 쿠폰 증정? 우리도 업무용 이메일 주소와 개인 이메일 계정을 구분지어 데이터를 조사하면 무엇인가 알 수 있지 않을까? 제품 사용을 위해 긴 설명과 교육은 최대한 배재. \u0026lsquo;아하 순간\u0026rsquo;을 어떻게 빨리 만나게 할지를 생각하자. 단순히 정보를 많이 제공하는 것이 좋은 것은 아니다.(에어비엔비에서 고객 추천 리뷰를 보여주는 것은 좋은 생각이었지만 결과가 좋지 않아 놀랐음) 우리 제품은 강제하는 학습 흐름은 존재하지 않는다. 이것을 실행하면 유입이 떨어지지는 않을까?(둘러보는 사람을 내쫓는 행동) ","date":"2023-01-17T00:00:00Z","image":"https://icebluehalls.github.io/post/Books/growth-hacking/growth-hacking.png","permalink":"https://icebluehalls.github.io/p/growth-hacking-chapter6/","title":"진화된 마케팅 그로스해킹(by 션 엘리스) - #Chapter6"},{"content":"Chapter 5. 고객 유치 해킹하기 매출 \u0026lt; 고객 유치 비용 = 잘못된 방법\n다만 시장을 빠르게 독점하기 위해서나, 경쟁사와의 경쟁이 치열해서일 경우는 OK(시간과의 싸움)\n제일 중요한 점 : 성장의 햇심 지렛대를 결정하고 제품을 확실한 \u0026lsquo;머스트 해브\u0026rsquo;로 만드는 방법을 알고 있어야한다.\n제품의 표적 시장에 강력한 설득력을 갖추었다는 확신이 들기 전까지는 대규모 고객 유치를 해서는 안된다.\n고객 유치활동 확대 첫단계\n언어/시장 궁합 - 표적 청중의 공감을 얼마나 잘 이끌어내는가 경로/제품 궁합 - 제품을 표적 청중에게 이르게 하는 데 얼마나 효과적인가 호소력 짙은 메시지 만들기 잠재 고객에게 보이는 첫 문장은 정확한 메시지를 빠르게 전달해야만 한다.\n인간의 평균적인 주의 지속시간은 8초. - 8초안으로 마음을 사로잡아야한다.\n보여지는 물건이 어떻게 내 삶을 나아지게 하는가라는 질문에 대답하는 캐치프라이즈를 만들어야한다.\n스티브잡스의 아이팟의 경우, \u0026lsquo;주머니 속의 있는 1,000개의 노래\u0026rsquo;로 단순하고도 매혹적인 표현 사용. 이것은 별도의 정답이 없으며, 그로스 해킹을 통해 그들만의 정답에 제일 근접해질 수 있다. 후보군으로 설정된 문구를 A/B테스트로 각기 다르게 보여주어 그들의 반응 및 유입, 문구를 본 이후의 행동을 파악해보자.\n캐치프라이즈를 찾는 방법에는 다음과 같은 방법들이 존재한다.\n제품의 장점에 대해 소셜미디어에서 글을 올리거나 온라인 리뷰를 남길 때 남긴 묘사 언어 사용. \u0026lsquo;머스트 해브\u0026rsquo;인지 판단하기 위해 수행한 고객 설문조사 답변에 의지. 친구나 동료들에게 제품과 그 가치를 어떻게 설명하는지 묻기. 고객 지원팀과 이야기를 나누며 제품 칭찬, 표적 고객이 어떤 언어를 사용하는지 확인하기. 언어 궁합은 브랜딩뿐 아니라 제품 개선에도 도움을 준다 페브리즈의 메시지는 \u0026rsquo; 옷감으로부터 악취를 완전히 없애줍니다\u0026rsquo;였다.\n그러나 고객들이 어떻게 사용하는지 조사해본 결과, 청소한 방을 기분 좋은 향기로 채우는 용도로 많이 사용하였다.\n그래서 방 청소와 느낌이 비슷하게 \u0026lsquo;전과 다른 방식으로 당신을 둘러싸는 신선함\u0026rsquo;이라는 메시지로 변경하였고, 제품의 메인 사용법을 다시 포지셔닝하였다.\n중요한 것은 예상하는 고객의 사용법과 실제 고객의 사용법은 다를 수 있다. 그러므로 고객의 행동 추적을 통해 어떻게 사용되고 있는지부터 조사해보아야한다.\n경로 궁합을 맞추는 것은 포트폴리오 관리와 다르다. 유입 경로는 다양한 것을 늘리거나 강화하는 것 보다는 한두 개 경로에 집중하는 편이 더 좋다.\n여기를 뚫어봤는데 잘 안되네? 하고 더 늘리는 것이 아닌 왜 여기가 효과가 없는지, 더 개선할 방법이 없는지를 찾는 것이 좋다.\n분야를 좁혀라 최선의 경로로 곧장 나아가기 위해서는 발견과 최적화라는 두 단계를 거쳐야한다.\n발견하는 경로의 세가지 범주는 다음과 같다.\n입소문 경로 - 소셜미디어, 내장형 위젯, 친구 추천 프로그램, 온라인 동영상, 커뮤니티 참여, 대화 개최와 경품 증정, 플랫폼 통합, 크라우드펀딩, 게임과 퀴즈 자연 경로 - 홍보와 강연, 콘턴츠 마케팅, 앱 스토어 최적화, 무료 도구, 이메일 마케팅, 커뮤니티 구축, 전략적 동방자 관계, 기사 기고, 웹사이트를 통한 판매 유료 광고 - 오프라인 광고(TV, 인쇄물, 옥외광고판), 온라인 광고(구글 애즈), 제휴 광고, 영향력 있는 인물 활용 캠페인, 라디오, 재공략, 광고 네트워크, 협찬, 네이티브 광고 여기서 우선순위로 어떤 경로가 제일 유입이 잘되고 효율적인가 정하는 것이 첫 단계가 되어야 한다.\n콘텐츠 마케팅의 주요 유형\n사례 연구 실행 방법 안내 언론 발표 인포그래픽 특별 보고 기사 PDF와 e북 웹 포럼 리뷰 동영상 파워포인트 프리젠테이션 이미지와 사진 인터뷰 목록 질의응답 웹사이트 핀터레스트 인스타그램 페이스북 스냅챗 텀블러 링크드인 펄스 트위터 지역 업체 목록 팟캐스트 \u0026lsquo;무엇이든 물어보세요\u0026rsquo;라는 학습 도서 시리즈 퀴즈 무료 도구 매체 포스팅 버즈피드 추천의 글 첫번째 처내기 첫번째 처내기 작업은 사업 모델이 요구하는 것이 무엇인가를 고려하는 과정에서 쉽게 이루어진다.\nB2B 회사는 영업 팀의 영업 지원 활동을 통해 추진력을 얻고 무역 박람회에 참여해 영업 사원이 잠재 고객을 만날 수 있는 기회를 만들며, 콘텐츠 마케팅 전략을 이용해서 회사의 전문성을 강화한다.\n그러면 콘텐츠 마케팅, 무역 박람회, 영업은 포젹 고객에게 이르는 가장 효과적인 경로가 된다.\n규모가 커질 경우에는 하나의 경로에 제한되어서는 안 된다. 돈이 생기면 더 유료로 유입을 늘릴 수 있고 물들어올떄 노를 많이 저어야한다.\n아래는 여러가지 사용자의 행동을 추측하고 탐색 경로를 지정하는 예시다.\n사용자 행동 탐색 경로 사람들이 해결책을 찾기 위해 검색을 활용하고 있는가? 검색 엔진 최적화SEO 마케팅 기존 사용자가 입소문을 통해제품을 공유하는가? 바이럴 마케팅 혹은 추천 프로그램 사용자를 늘리는 것이 경험을 개션하는가? 바이럴 마케팅 표적 사용자가 이미 다른 플랫폼을 사용하고 있는가? 통합과 협력 사용자의 생애 가치가 높은가 유료 유치 이런 식으로 실험할 경로를 선택했다면 이제는 구체적인 기법들을 제안하고 우선 순위를 정할 차례다.\n경로/제품 궁합을 맞추기 위한 실험 비용 : 실험 진행 비용 표적시장 선정 : 표적 청중에 얼마나 쉽게 도달하는가, 도달할 대상을 얼마나 구체적으로 특정할 수 있는가 통제 : 실험을 어느 정도까지 통제가능한가, 시작된 실험에 변화를 줄 수 있는가? 중단할 수 있는가? 입력 시간 : 팀이 실험을 시작하는 데 시간이 얼마나 필요한가.(텔레비전 광고 제작 기간 \u0026gt; 페이스북 광고 제작 기간) 출력 시간 : 실험이 시작된 이후 결과를 얻는 데까지 시간이 얼마나 필요한가.(검색 엔진 최적화, 소셜미디어의 출력 시간 \u0026lt; 라디오 방송 한번 시간) 규모 : 청중의 규모.(텔레비전의 청중 규모 \u0026lt; 블로그에 특정 키워드를 검색해서 들어오는 규모) 위 6가지를 통해\n새로운 시도를 계속해라 사용자에게 도달할 수 있는 경로가 늘어났으므로 여러가지 시도를 해볼 수 있다.\n성장이 시작되면 경로를 새로 추가하는 일이 더 중요해진다. 어떤 경로든 한계에 이른느 일은 불가피하기 때문에 투자한 가치보다 더 많이 나가게 된다.\n계속 광고를 노출시키게 되면 광고를 무시하게 되고, 마케팅이 효과가 없다. 최대 수용량에 이르면 다른 경로에 뿌리를 내려야한다.\n고객 순환고리 설계하기 드롭박스의 성공 사례로 인해 보상 프로그램을 많이 실천하는 경우가 있다. 이것은 착각이다. 모든 바이럴 루프가 똑같이 만들어지는 것은 아니다. 일단 바이럴 루프를 만들려면 \u0026lsquo;아하 순간\u0026rsquo;이 필요하다.\n입소문에 대한 효율은 다음과 같은 식을 봐야한다.\n입소문 계수 = 고객이 보낸 초대 x 초대를 받아들인 사람들의 비율\n제품 사용자 : 25,000명 바이럴에 참가한 비율 : 25% 한사람당 초대한 횟수 : 5명 초대를 받아들인 사람의 비율 : 10% 바이럴을 통한 고객 유치 수 : 25000 * 0.25 * 5 * 0.1 = 3,125명 입소문 개수 : 5 / 10 = 0.5점 -\u0026gt; 효과적이라고 생각하는 1점에는 못미침\n다른 방식의 입소문 공식 입소문 = 페이로드 x 전환율 x 빈도\n페이로드 : 각 사용자가 한번에 홍보 수단을 보낼 가능성이 있는 사람의 수\n이메일을 보내면서 다른 사람에게 홍보이메일까지 보내는 경우는 극히 드뭄 전환율 : 이 제품을 처음보고 택하게 될 확률\n무료 이메일이므로 기존 유료 이메일을 사용하는 유저는 바꿀 확률이 높음 빈도 : 초대에 노출되는 빈도\n핫메일의 경우, 아는 지인들에게 메일을 많이 보내기 때문에 노출이 잦음 따라서 페이로드가 낮더라도 전환율과 빈도가 높아 가능성이 충분한 바이럴루프이다.\n그럼 어떻게 페이로드를 늘러야하나.\n자연스러워야한다. 보상등의 유인책을 제공해주어야한다. 홍보하는 사람과 홍보에 응한 사람 모두 보상을 주어야 한다(이증 유인책) 짜증날 수준으로 홍보를 강요해서는 안된다. 제품의 핵심 가치와 동반 상승효과를 내는 유인책을 만들어라 사용자 경험에 포함시킬 유인책이 없다면, 일종의 보상을 지급하는 방식으로 유인책을 만들어야 한다.\n꽃 배달 서비스에서 3번 이상 이용 시, 꽃병 지급. 드롭박스 : 사람들이 원해하는 무료 스토리지 증정 에어비앤비 : 첫결제시 현금 25달러 증정 식료품점 : 첫 주문시 10% 할인 최대한 가치는 낮지만 사람들 입장에서는 가치가 크다고 느낄만한 유인책을 내놓자. 공유를 위한 초대를 단순 추가가 아닌 사용자 경험의 일부분으로 만들어라 추천 버튼이 너무 도드라져서 짜증을 유발하거나 강요하는 느낌을 주지 않으면서 눈에 띄어라. 사람들이 잘 들어가는 웹페이지나 스크린에 포함시키자.(트래픽이 많은 영역) 초대받는 것이 좋은 경험이 되도록 만들어라 에어비엔비는 초대메세지를 받으면, \u0026lsquo;친구 ㅇㅇ이 에어비앤비를 통해 당신의 첫 여행에 25달러를 할인해주려고 합니다\u0026rsquo;등으로 기분 좋게 문구를 작성한다. 그에 따른 응답 버튼 문구는 \u0026lsquo;할인을 신청하세요!\u0026rsquo; 실험.실험.실험 즉각적인 성공 뒤에는 무수히 많은 실험이 있으므로 바이럴 루프를 찾기위해서는 많은 실험이 필요하다. 이것은 우연의 영역에서 나오는 일이 많으며, 우연은 많은 실천을 통해 발견된다.\n느낀점 \u0026lsquo;누구보다도 만들기 쉬운 서버\u0026rsquo;는 니즈를 충족시키고 있는 것 같다. 여러 개 경로를 늘리는 것이 안좋다고 하는데, 그러면 이상한 경로에서 집중적으로 파는 것은 더 위험한 것이 아닌지?(설명 부족, 동기적인 방식?) 새로운 시도를 계속하라면서 성장 시작후에 경로를 추가해야하고, 최대 수용량에 다름녀 다른 경로에 뿌리를 내려야한다고 써져있는데 최대 수용량은 어떻게 측정이 되는지. 바이럴 루프를 만들려면 \u0026lsquo;아하 순간\u0026rsquo;을 느끼게 해주어야한다. 입소문 공략을 펼칠려면 다른 사람과 공유할때 머스트 해브를 느끼게 하거나, 사용자 친화적이고 기분좋은 순간을 느끼게 해야한다. 하지만 역시 케바케다라는 마지막 설명이 들어가면서 뭔가 집중이 안되었음. ","date":"2023-01-11T00:00:00Z","image":"https://icebluehalls.github.io/post/Books/growth-hacking/growth-hacking.png","permalink":"https://icebluehalls.github.io/p/growth-hacking-chapter5/","title":"진화된 마케팅 그로스해킹(by 션 엘리스) - #Chapter5"},{"content":"에러 발생 유니티에서 HttpRequest 통신을 구현하였다.\n1 Illegal byte sequence encounted in the input. 하지만 호출 시, 다음과 같은 에러가 발생하게 된다.\n열심히 검색해본 결과, 대부분의 답변은 프로젝트에 사용되는 경로중에 한글이 있어서 발생한다는 답변이었다.\n프로젝트 경로에 한글? 근데 관련 경로를 찾아보아도 한글은 존재하지 않았다.\n사용자 이름도 영어로 되어있어서 해당 문제는 아니였고, 검색해본 결과 HttpRequest중에 호스트 이름을 사용하는 것을 알게 되었다.\nGetHostName으로 테스트 관련된 함수중 로컬 호스트 이름=기기명을 불러오는 함수를 알게 되었고 다른 사람들은 잘 안되는데 내 컴퓨터만 계속해서 에러가 발생중.\n1 2 3 4 5 6 7 8 using UnityEngine; public class NewBehaviourScript : MonoBehaviour { void Start() { Debug.Log(System.Net.Dns.GetHostName()); } } 1 ExecutionEngineException: String conversion error: Illegal byte sequence encounted in the input. 정답은 기기 이름! 기기를 확인해보니 ‘내PC’라는 한글이 포함된 이름을 사용하고 있었고…\n영어로 바꾸고,\nDNS.GetHostName을 실행했더니\n잘실행되었다.\n어쨋든 한글이 있으면 해당 에러가 발생하는 것을 알게되었다.\n추가 유니티 경로중에 Program Files등의 띄어쓰기가 있는 경로나 한글이 들어가 있음에도 에러는 발생하지 않았다.\n","date":"2023-01-09T00:00:00Z","image":"https://icebluehalls.github.io/p/http-request-message-error1/unity-error_hu1297f5b3d907bb9a07ff7c712d5fb996_49783_120x120_fill_box_smart1_3.png","permalink":"https://icebluehalls.github.io/p/http-request-message-error1/","title":"HttpRequestMessage 사용 시, illegal byte sequence encounted in the input. 에러 발생"},{"content":"TextMeshPro 불편한점 유니티에서 이제는 일반 Text의 성능이 구리다고 해서 다 쳐내고 TextMeshPro를 밀어주기 시작하였다. 하지만 사용하기 쉬운 Text와는 달리 TextMeshPro는 처음에 세팅을 해주어야 한다.\n그 중, 제일 불편했던 것이 유니티에 기본 탑재되어 있는 liberation Sans가 한글도 지원이 안되는 주제에 TMP_Text 생성 시, 기본으로 나와서 일일히 바꿔주어야 하는 귀찮음이 존재했다.\n설정 UI에는 안보이기에 설정을 못하는 알았더니, 다른 곳에서 설정할 수 있었다.\nTMP_Settings 클릭 TextMeshPro 기본 임포트 시, Assets \u0026gt; TextMesh Pro \u0026gt; Resources에 TMP_Settings가 생성된다.\n해당 리소스를 클릭하면 설정 가능한 인스펙터 창이 나온다.\n여기서 Default Font Asset이 기본 폰트다.\nDefault Font Asset 변경 게임에 기본이 되는 폰트로 바꿔주자.\n테스트 그리고 생성하면?.. 성공.\n","date":"2023-01-06T00:00:00Z","image":"https://icebluehalls.github.io/p/default-text-mesh-pro/default-settings_hu2e83e4b19c8e7103de1b31e1ab763ea9_107659_120x120_fill_box_smart1_3.png","permalink":"https://icebluehalls.github.io/p/default-text-mesh-pro/","title":"유니티 기본 TextPro 폰트 바꾸기"},{"content":"사실상 게임에서 아이템 리스트, 퀘스트 리스트등 여러가지 오브젝트를 균일하게 정렬하는 UI는 무조건 들어가게 된다.\n근데 유니티에서는 원하는 대로 스크롤에 넣으면 정렬되는 기능은 제공하지 않고, 스크롤뷰에 여러가지 기능을 추가해야지만 원하는 리스트 UI가 완성된다.\nScrollView 생성 ScrollView를 생성한다.\nCanvas 크기 설정 다음은 캔버스 크기를 설정해준다.\n스크롤뷰만 보이게 해주면 되는데, 여기서는 개인적으로 캔버스 크기를 설정하여 반응형처럼 UI가 이동하는 방식으로 만들었다.\nCanvas Render Mode - Screen Space - Camera Render Camera - 유니티에서 생성 시 기본적으로 제공하는 카메라 Canvas Renderer UI Scale Mode : Scale With Screen Size Reference Resolution : 1080, 1920 스크롤뷰 크기 설정 보기편한대로 스크롤뷰를 설정해준다.\n스크롤뷰의 Scroll Rect 설정 대부분의 UI에서는 왼쪽 오른쪽으로 스크롤되는 경우가 거의 없다. 단지 위아래로만 움직일 뿐.\n따라서 Horizontal 기능은 필요가 없어서 체크를 해제한다.\nMovementType은 설정된 크기 이상으로는 움직이지 못하게 하는 Clamped를 선택한다.\nScroll Rect Horizontal : 체크 해제 MovementType : Clamped Horizontal 스크롤 삭제 Horizontal을 체크해제했으므로 스크롤뷰는 작동하지 않는다. 필요가 없으므로 삭제해주자.\nVertical 스크롤 크기 설정 Horizontal 스크롤이 삭제되면서 빈공간이 남게 되었다. 마음에 걸리니 빈공간 없도록 설정해주자.\nContent 크기 설정 Content 오브젝트의 자식들은 스크롤이 되는 대상들이 된다.(부모 객체 Scroll Rect에서 자동으로 설정되어 있음)\n첫 설정시에는 작은 크기 기준으로 되어있기에 스크롤뷰의 모든 범위가 되도록 크기를 늘려주자.\nContent에 기능 추가 자식 객체를 그냥 넣어주면 수동으로 설정을 해야만 한다. 지금부터 자동으로 정렬해주는 클래스와 크기를 자동으로 늘려주는 클래스를 생성한다.\nVertical Layout Group 추가 Spacing : 20(각 오브젝트끼리 여백) Child Alignment : Upper Center(정렬 기준, 중앙 상단부터 아래로 내려감) Child Force Expand : Height만 해제(자식 객체 제어 여부) Content Size Filter Vertical Fit : Preferenced Size(각 자식 오브젝트만큼 늘리기) Content의 자식 객체 추가 Content의 자식으로 객체를 추가하여 정상적으로 정렬이 되는지 확인한다.\n코드로 Content 자식 객체 생성 스크립트를 하나 생성하고, 아무 오브젝트 연결한다.\n다음 스크립트는 2번째로 지정한 questionItem 오브젝트를 생성하고 1번째로 설정한 QuestionItemParent의 자식으로 옮기는 로직이다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 using System.Collections; using System.Collections.Generic; using UnityEngine; public class NewBehaviourScript : MonoBehaviour { [SerializeField] private GameObject questItemParent; [SerializeField] private GameObject questItem; // Start is called before the first frame update void Start() { // 퀘스트 아이템 10개 생성 for (int i = 0; i \u0026lt; 10; i++) { // 오브젝트 생성 var item = Instantiate(questItem); // questItemParent 오브젝트의 자식 객체로 들어감 item.transform.SetParent(questItemParent.transform); // 아이템 생성 시, scale이 비이상적으로 커지는 경우가 있어서 1,1,1로 변경 item.transform.localScale = new Vector3(1, 1, 1); } } } 각 연결되는 오브젝트는 다음과 같다.(QuestionItem은 Prefabs여도 무관하다)\n테스트 이제 실행해본다.\n","date":"2023-01-05T00:00:00Z","image":"https://icebluehalls.github.io/p/make-useful-scrollview/13_hu60703074ad5adc65e9b475b4e0e0831a_62464_120x120_fill_box_smart1_3.png","permalink":"https://icebluehalls.github.io/p/make-useful-scrollview/","title":"유니티 ScrollView를 이용하여 자동으로 늘어나는 퀘스트 UI 만들기"},{"content":"Chapter 4. 급속 실험 그로스해킹을 최대한 빨리 터득하는 방법은 수많은 실험을 해보는 것이다. 가장 빠르게 성장하는 회사는 가장 빠르게 배우는 회사다. 더 많은 실험을 할수록 더 많이 배우는 단순한 관계다. 한달에 5%만 향상되어도 1년이 지나면 80%의 개선이 이루어진다.\n그로스해킹은 양이 우선이지만 엉성한 실행이나 부적절한 실험 결과 수집, 시간을 잡아먹는 브레인스토밍이나 논쟁때문에 진전하지 못해서는 안하는 게 낫다. 조금씩 꾸준히 진행하면서 역량을 키워나가라.\n그로스 해킹 순환과정 그로스해킹의 순환과정은 다음과 같다.\n분석 -\u0026gt; 아이디어 도출 -\u0026gt; 우선순위 결정 -\u0026gt; 실험\n이륙을 위한 순비 순환 과정을 시작하기 전에 첫 팀 회의를 열어 팀원들에게 절차가 어떻게 진행되는지 설명한다. 리더는 팀원의 역할과 어떤 일이 필요한지 설명한다. 데이터 분석가에게 데이터를 달라고 요청하고 성장의 핵심 지렛대와 북극성 지표, 팀이 집중해야 할 영역과 팀의 목표를 보여주어야 한다. 그러면 팀은 매주 시작할 실험의 양과 속도에 관해 목표를 설정한다.일주일 동안 합리적으로 설계하고 실행할 수 있는 실험이 몇 개인지 정하는 것이다.\n예시 식료품 체인점이 그로스해킹을 한다. 이들의 목적은 모바일 앱을 통해 매출을 끌어올리는 임무였다. 이 회사는 몇달 전 전형적인 마케팅을 큰 규모로 진행하였고 상당한 얼리어답터를 끌어모으며 10만 다운로드 상태이다. 하지만 앱 주문을 통한 매출을 부진한 상태이다.(상품 추천등의 빅데이터를 이용하여 제품은 정상적)\n그래서 그로스해킹 리더를 고용했다.\n리더가 처음 한 일은 팀을 구성하는 일. 마케팅, 엔지니어링, 제품, 데이터 과학 부문에서 직원을 뽑아 팀을 구성하였다. 다음으로 앱을 사용하는 사람들에게 \u0026lsquo;아하 순간\u0026rsquo;이 무엇인지, 앱을 사용하는 사람의 사용법이 그렇지 않은 사람과 다른 점은 무엇인지 알아내야했다. \u0026lsquo;아하 순간\u0026rsquo;은 식료품을 주문해서 다음날 문 앞까지 배달받는 편리함이었다는 결과가 나왔다.\n그리고 아하 순간에 도달하기 까지 필요한 요소들을 이용해 성장 방정식을 만들어 냈다.\n설치 횟수 * 월간 활성 사용자 수 * 구매자 수 * 평균 발주량 * 반복 구매율 = 성장량\n북극성 지표는 \u0026lsquo;한 명 당 월간 매출\u0026rsquo;로 지정했다. 최종적인 목표가 매출의 증가이기 때문.\n준비는 끝나고 실천으로 가야되지만 처음에는 어떠한 실험도 하지 못한다. 그래서 아이디어 수집이 필요하다.\n1단계 : 분석 초기 다운로드 후 꾸준히 사용하는 유저와 이탈한 유저의 차이점을 데이터를 통해 알게되었고 이를 토대로 질문을 만들어낸다.\n우수 고객은 어떤 행동을 하는가? 우수 고객이 사용하는 기능은 무엇인가 우수 고객은 앱에서 어떤 화면에 자주 방문하는가 우수 고객은 앱을 얼마나 자주 여는가 우수 고객이 구매하는 상품은 어떤 것인가 우수 고객의 평균 주문량은 얼마나 되는가 우수 고객은 어느 요일, 하루 중 어느 때 쇼핑을 하는가 우수 고객의 특징은 무엇인가? 어떤 경로를 통해 왔는가?(광고, 홍보 이메일) 우수 고객은 어떤 기기를 사용하는가? 연령 수입을 비롯한 우수 고객의 인구통계학적 뱅경은 어떠한가? 우수 고객은 어디에 사는가? 우수 고객이 사는 곳은 회사의 매장 혹은 여타 회사의 매장과 얼마나 가까운가? 우수 고객이 사용하는 여타 앱은 어떤 것인가? 사용자가 앱을 사용하지 않게 된 이유는 무엇인가? 이탈률이 가장 높은 화면은 무엇인가? 사용자들이 특정한 행동을 취하는 데 방해가 되는 오류가 있는가? 제품의 가격은 어떻게 책정되는가? 여타 서비스와는 어떻게 다른가? 구매자들이 하는 활동 가운데 이탈자들이 하지 않는 것은 무엇인가? 이탈자들은 어떤 과정으로 앱을 이용했는가? 앱을 떠나기 전까지 앱에서 보내는 시간은 얼마나 되는가 마케팅 전문가는 사용자의 설문조사와 인터뷰를 실시하고 데이터 분석가는 수를 기반으로 분석한다. 설문조사에서 인구 통계학적, 심리특성적 정보를 얻고 쇼핑 습관을 파악한다.\n분석가와 마케터는 이렬느이 보고서로 정리하여 회의 전에 팀과 공유한다. 첫 회의 때에는 정기 쇼핑객이 공통적으로 가지는 흥미로운 부분을 집중조명해야한다.\n특징 1, 평균 주문액은 50달러 이상이다. 특징 2, 매번 동일한 항목을 구매한다. 특징 3, 열성적인 쇼핑객의 대부분이 회사의 모바일 웹사이트를 통해 앱을 다운받는다.\n준비는 끝났다.\n2단게 아이디어 도출 좋은 아이디어를 내는 가장 좋은 방법은 많은 아이디어를 내는 것이다. 브레인스토밍으로 어떠한 압력이나 제한도 가하지 않고 창의성 있게 모든 실험을 쥐어짜내라. 그리고 안 좋아보이는 실험은 후순위로 밀려날 뿐이다.\n기본적으로는 자신이 속한 분야에서 아이디어를 제안해야한다.\n디자이너는 화면 디자인에 대한 변화 마케팅 전문가는 사용자의 첫 구매를 장려하는 방안 엔지니어는 제품의 속도 향상 리더는 이런 아이디어들을 제출하거나 관리하는 것은 물론 결과 추적이나 보고까지 조정하는 프로젝트 관리 시스템을 마련해야한다. 접근권을 가진 모든 사람이 아이디어를 제출하고 추적하며 댓글을 달고 실험과 그 결과를 혹인할 수 있다.\n아이디어는 견본 서식에 따라 \u0026lsquo;아이디어 공급로\u0026rsquo;에 제출한다. 여기서 중요한 점은 재빨리 평가할 수 있게 만드는 것이 중요.\n예시 식료품점의 모바일 앱에서는 구매를 촉진하는 여러 가지 방법 중 하나를 지향할 것이다. 어떤 아이디어들은 앱을 다운로드했지만 구매하지 않는 사람들이 물건을 사도록 유인하는 것을 목표로 할 것이다. 다른 아이디어는 이미 구매한 사람들을 대상으로 점 더 자주 구매하도록 하거나 후속 구매에서 그들의 평균 주문량을 늘리는 것을 목표로 삼을 수도 있다. 마지막으로 회사의 모바일 웹사이트를 통해 들어 온 고객이 최고의 구매자가 되는 경향이 있기 때문에 새로운 쇼핑객을 회사의 웹사이트에서 앱으로 더 많이 끌어오는 방아능ㄹ 생각할 수도 있다.\n이 중 쇼핑객이 자주 구매하는 물건의 목록을 저장하고 재주문하는 쇼핑 목록 기능을 만들자라는 아이디어를 냈다. 이 아이디어는 다음과 같은 서식으로 제출된다.\n아이디어 이름 : 간단한 이름일수록 효울적이다. 50자 이내로 적자. 아이디어 설명 : 육화원칙으로 표적은 누군지, 무엇을 만들지, 왜 이런 안건을 내놓았는지, 어떻게 실행할지 가설 : 예상하는 원인과 결과에 대한 간결한 명제여야한다. \u0026lsquo;쇼핑객들이 이전에 구매한 항목들을 좀 더 쉽게 확인하고 재주문 할 수 있게 만든다면 반복 구매하는 사람들의 수가 20퍼센트 증가할 것이다\u0026rsquo;라는 식으로 만들어야 한다. 측정해야할 지표 : 추적해야하는 지표가 무엇인지 명시해야 한다. 대부분의 실험에는 하나 이상의 지표를 측정해야한다. 때로는 한 지표의 개선이 다른 지표의 하락을 동반하기 때문이다. 가입을 늘리기 위해 디자인을 리뉴얼 하면서 눈에 보기 쉬워졌지만 목적을 이해하지 못해 방문수만 늘고 실제 이용자가 적다면 어떨까? 이것은 심각한 장애가 될 것이다. 실험에 영향을 받는 하류 지표들을 관찰해서 추적할 지표들을 확인해야한다.얼마나 많은 사용자가 새로운 기능을 사용했고 그 기능을 사용한 사람들의 구매 행동에 영향을 주었는지, 핵심 지표를 개선시켰는지, 가설이 맞는지 판단할 수 있는 식견을 제공하는 범위내에서 측정해야한다.\n3단계 : 우선순위 결정 우선순위를 결정할 때에는 ICE 점수를 많이 이용한다.\nI(Impact) : 주요 지표의 개선 정도, 테스트하면 매출이 어느정도 개선될지에 대한 예측. 점수가 꼭 높은 실험이 아니더라도 실험하기 더 쉽고 빠른 실험을 하는 것이 중요 C(Confidence) : 신뢰도. 그 아이디어가 예상한 만큼의 영향을 줄것이라는 강한 믿음. 데이터 분석, 업계 기준 검토, 발표된 사례 연구, 이전 실험의 짬등을 증거로 해야한다. E(Ease) : 용이성. 실험을 진행하는 데 필요한 시간과 자원. 영향력이 높아도 시간과 리소스가 많이 필요하면 우선순위에서 밀리게 된다.\n리더는 이 점수들이 맞는지 검토하며 조정한다. 하지만 무턱대고 \u0026lsquo;이거 개발하기 쉬울 것 같은데\u0026rsquo;하며 용이성을 내리다간 팀간의 갈등이 생길 수 있다. 그리고 이러한 점수 또한 예측이 빗겨나갈 수 있고, 낮은 실험이 성공할수도 있다. 사이트의 가시성만 높여도 700% 상승할 수도 있다. 꼭 영향력있는 실험만 하지 않고 그로스해킹에 맞게 빠르고 쉬운 작업만 하는게 맞다.\nICE외에도 Time, Impact, Resource의 TIR, Potention(잠재력), Inportance(중요성), Ease(용이성)의 PIE 체계도 있다.\n체계에 맞게 아이디어에 점수를 매기고 토론하여 테스트할 아이디어를 정한 다음 제품 매니저에게 언제 작업 가능한지 조정해야한다.\n4단계 : 실험 쇼핑앱 같은 경우, 디자인팀과 이메일팀과 함께 마케팅 문구를 만들 수 있다. 마케팅 팀원은 데이터 분석가와 힘을 합쳐 실험군과 대조군을 정하여 결과를 적절히 추적할 수있다. 실험 준비가 완료되면 영향이 가는 제품의 팀원들에게 알려 충격이 가지 않게 해야 하며, 장애 발견 시, 고칠 여력이 없다면 다른 실험을 먼저 실행할지 검토한다.\n실험의 진행 규칙. 99퍼센트의 통계학적 신뢰 수준을 사용해라 : 일반적인 신뢰수준은 95%와 99%이다. 4%가 크지 않을 수도 있지만 20번의 실험중 1번은 실패한다는 소리이기도 하다. 100번중 한번과 20번중 한번은 큰 차이가 있다.\n대조군이 항상 이긴다. 실험이 무조건적으로 좋은 결과만 나올 수는 없을 뿐더러, 이부분에 실망하지 말고 성과를 낼려고 억지로 기간을 늘리지도 말고 더할지 말지 토론해서 결정하자.\n느낀점 우리에게는 먼저 분석이 없었고, 예시와 비슷하게 고객의 행동과 특징, 이탈 이유를 조사해야할 필요가 있다. 예시에 있는 부분들을 참고하면 도움이 많이 될 것 같다. 다만 이것도 아하 순간을 찾는 과정이기 때문에 시간이 오래 걸리는 작업이다. 하지만 이것을 찾는다면 실험을 보다 효율적이고 임팩트있게 하지 않을까싶다. 아이디어 도출에 대해서는 어느정도 잘하고 있다고는 생각한다. 아이디어 순환율만 뺀다면. 여기서 부족한 부분은 결과를 좀더 명확하게 해야할 필요가 있다. 20%증가, 10%증가등등. 이런 값을 얻기 위해서는 무엇을 해야할까(온라인의 기준 데이터, 실험 참가자수와 현재의 행동에 미칠 것으로 예상되는 대략적인 추정) 그러나 측정해야할 지표는 아직까지 잘 못하는 편. 하류 데이터도 일단 보지 않고 있다. 실험을 할떄에는 무턱대고 점수 높은 것이 아니라 측정할 수 있는 실험을 가지고 측정해야한다. 글을 읽으며 영향력은 없어도 되며 빠르고 쉬운 작업이 우선. 다만 너무 영향력이 없으면 안됨 이라고 써져있어서 이것에 기준을 예측하는 것이 어렵다. 이런 예측을 잘할려면 서술된 것처럼 아이디어를 많이 내고 테스트 하는 것. 99퍼센트의 통계학적 신뢰 수준을 사용하라라는데 99퍼센트는 사전에 어떻게 측정할 수 있는 건지. 무엇이 99퍼센트인지 모르겠다.(실험 성공률, 실험 개선 성공률) 실험ㅇ르 하며 사용자 경험 혹은 성장 지렛대의 어떤 부분에 초점을맞ㅊㄱ ㅗ있는가? 단기적인 목표가 있는가?를 생각하며 하자. ","date":"2022-12-21T00:00:00Z","image":"https://icebluehalls.github.io/post/Books/growth-hacking/growth-hacking.png","permalink":"https://icebluehalls.github.io/p/growth-hacking-chapter4/","title":"진화된 마케팅 그로스해킹(by 션 엘리스) - #Chapter4"},{"content":"Chapter 3. 성장의 지렛대 머스트 해브는 매우 중요한 요소로, 대기업조차 머스트 해브를 생각하지 않고 출사하여 실패한 사례가 많다. 대표적인 경우가 구글 글래스나 세그웨이 스쿠터다.\n에버픽스 사례 사진 앱인 에버픽스는 처음에 4.5점의 별점을 받으며 \u0026lsquo;설치한 후에 잊어버려도 되는\u0026rsquo; 특성으로 뜨기 시작했으며, 초기 사용자 중 절반은 일주일에 한 번씩은 사용하였다.\n49달러의 프로버전 업그레이드 조차 평균 프로 전환율인 1%를 넘어 12.4퍼센트까지 도달하였다. 하지만 에버픽스는 여기서 더 성장할 방법을 찾지 않았다.\n회사의 운영비는 48만 달러였지만 매출은 25만 달러가 조금 넘고, 투입 자본 또한 모두 AWS에 사용 비용으로 제출하였다. 에버픽스는 그제서야 그로스해킹 방안을 시도하려 했지만 유저가 귀찮음을 느낄 거 같아 진행하지는 않았다.\n여기서 알아야할 점은 그로스해킹은 단순히 해킹 메뉴에 있는 한 가지를 선택하는 것이 아니라, 원하는 결과를 달성하기 위해 끊임없이 실험을 거치는 과정이다. 유명한 그로스해킹 방법 중 하나를 사용하는 것이 아닌 매출을 늘리기 위해 여러가지 가설을 세우고 테스트를 진행하며 개선 가능한 점을 찾아 실험해보는 것이 그로스해킹이다. 버튼 색 바꾸기, 위치 바꾸기등 선 실천 후 연구는 좋지 않다.\n에버픽스 또한 피드백을 빨리 받고 그에 맞춰 제품을 더욱 수익성 있고 고객 니즈에 필요한 제품이 되었다면 수익성이 좋은 기업이 되었을 것이다.\n성장 전략 해킹하기 \u0026lsquo;아하 순간\u0026rsquo;을 찾았다면 다음은 성장 전략을 결정하는 것이다. 성장 아이디어를 빠른 속도로 실험하는 단계로 가기 전 성장을 어떻게 촉진할지, 즉 성장의 지렛대는 무엇이고 바라는 결과를 달성하는 데 그 지렛대가 적절한지 파악해야한다.\n성장의 초기 단계라고 짧은 시간안에 성장에 가장 큰 영향을 주는 실험 전략을 만들고 싶어하는 것이 맞지만, 규모가 작은 회사는 한번의 기회비용이 상당하며, 실패할 경우에는 큰 피해를 입게 된다. 이렇게 큰 피해를 입지 않기 위해서라도 이 실험이 적합한지는 확실한 근거가 있어야 한다.\n일단 실험의 핵심인 빠른 시간이라는 것도 중요한데, 처음부터 많은 사용자수를 원하여 산정할 경우에는 방문자수가 만족할때까지 실험을 보고만 있어야하는 상황이 발생한다.72일 정도나 되는 실험은 평생과 다름없다라는 전문가의 평에 따라 너무 긴 실험은 지양하자.\n중요한 지표 성장 전력 결정의 첫 단추는 제품 성장에 어떤 지표가 가장 중요한지 이해하는 일이다. 그 중 가장 좋은 방법은 성장 방정식을 만드는 것이다. 성장 방정식은 성장을 추진하는 모든 핵심 요소, 즉 핵심적인 성장 지렛대를 나타내는 간단한 공식이다.\n(웹사이트 트래픽 x 이메일 전환율 x 활성 사용자 비율 x 유료 구독으로의 전환율) + 보유 구독자 + 다시 찾은 구독자 = 구독자 매출 성장\n이베이의 성장 방정식을 보면 아이템을 등록한 판매자의 수 x 등록된 아이템의 수 x 구매자의 수 x 성공적인 거래의 수 = 총 매출량 성장\n여기서 중요한 것은 아하 순간을 생각하며 방정식을 짜야한다. 택시에게 있어서 아하 순간은 택시가 얼마나 빠르게 도착하는지이다. 그리고 그에 따른 승객의 수 역시 중요하다. 우버는 이러한 점을 파악하여 성장 방정식에 넣었다.\n페이스 북의 핵슴 요소는 뉴스 피드를 훑어보는 데 쓰는 시간이다. 이런 식으로 중요한 데이터를 대시보드를 통해 추적하는 것이 훨씬 더 중요하며 오직 중요한 데이터 만을 표시하는 게 포인트다.\n본질적인 지표가 무엇인지 확인하려면 핵심 가치를 경험하는 사용자와 가장 직접적으로 연관되는 활동을 찾아야한다. 사이트 방문 횟수, 빈도, 포스팅 수, 댓글 수, 사이트에서 보낸 시간 등이 중요한 지표가 된다.\n사용자가 아하 순간에 이르기까지 거쳐가는 과정들을 지표로 추적해야 한다. 꼭 필요한 지표만 데이터 대시보드로 만들어 표현하자.\n북극성 선택하기 북긍성 지표란 궁극적인 핵심 지표. 해당 지표에 모든 성장 활동을 집중시키고, 실험이 오랜 기간으로 본래의 본질을 잃거나 계획이 어긋날 경우 해당 지표를 다시 보며 길을 찾아야한다. 북극성 지표는 고객을 위해 창출하는 핵심 가치를 가장 정확하게 포착하는 지표여야 한다. 북극성 지표가 무엇인지 판단하려면 스스로에게 성장 방정식의 여러 변수들 중에 제품이 전달하는 \u0026lsquo;머스트 해브\u0026rsquo; 경험을 가장 잘 보여주는 것은 무엇인가 라는 질문을 던져야한다.\n이베이의 경우 총 거래량은 구매자와 판매자 모두의 만족 정도를 가늠할 수 있는 좋은 기준인데, 더 많은 아이템이 팔릴 수록 더 많은 구매자들이 입찰하고 싶은 물건을 발견하는 \u0026lsquo;아하 순간\u0026rsquo;을 경했다는 말이고, 더 많은 판매자들이 자신의 물건을 찾는 구매자들을 만났다는 뜻이다.\n왓츠앱의 하아 순간은 세계 어디에 있든 비용에 대해서 전혀 걱정하지 않고 친구와 가족들에게 무제한으로 메세지를 보내는 때다. 따라서 일간 활성 사용자보다는 전송된 메세지의 수가 왓츠앱의 북극성 지표로 적합하다.\n조준경 새롭게 맞추기 시간이 지나 회사가 성장하고 초기의 목표를 달성하면 북극서도 달라 질 수 있다. 노하우를 얻어 초기 단계는 금방 이루어내면 다음 회사가 성장하는 단계의 실험을 해야한다. 페이스북은 처음에는 10일 이내에 최소한 7명의 친구를 추가하는 것에 의의를 두었지만 지금은 통역 엔진과 라이트 기능으로 해외 유저를 영입하는 것에 더 열심이다.\n가장 좋은 길 밝히기 제품 출시에 있어서 정해진 길을 벗어나면 망하는 일이 많다. 그걸 방지하기 위해서는 궁극적인 핵심 지표인 북극성 지표가 필요하다.\n북극성 지표를 발전시키는 일에 전념하면 시간과 자원을 어떻게 쓸 것인지를 좀 더 쉽게 결정할 수 있다. 에어비앤비의 북극성 지표는 예약 일수로, 예약이 저조한 시장을 찾기 위해 데이터를 확인했다. 데이터를 확인했을 때 뉴욕이 유명한 관광지임에도 예약이 저조한 것을 확인하였고 그 이유를 확인한 결과 사진의 퀄리티가 너무 낮아 큰 돈을 쓸 마음이 없어져버린다는 것이었다. 그로스해킹 팀은 실험으로 뉴욕에 직접 가 퀄리티 좋은 사진을 찍고 대체하며 실험을 하였다. 그결과 뉴욕의 매출이 두배 상승했고 가설이 입증되었다. 그리고 벤쿠버, 마이애미, 런던등 실적을 내지 못하는 도시에도 동일하게 사진을 퀄리티 있게 교체하였고 예약률이 전체적으로 2.5배 상승하는 효과를 누렸다.\n에약을 늘리는 시도로 뉴욕의 숙소를 검색하는 사람들의 숫자를 크게 높이는 방법도 있었을 것이다. 홍보 이메일을 더 많이 보내거나 더 값을 싸게 하거나, 하지만 본질적인 문제가 있었다면 그것은 돈낭비다.\n이렇듯 데이터만 가지고 있다고 실험을 하면 되는 것이 아니라 실제로 해당 데이터들이 유용한지, 북극성 지표에 필요한 데이터들인지 한번 확인해볼 필요가 있다.\n필수 데이터 성장 방정식을 결정하고 북극성 지표를 세우기 위해서는 고객 행동에 대한 자료를 모으고 제품 성과와 실험 결과를 측정하는 능력이 우선되어야 한다. 그런 전제 조건이 충족되어야만 가설이 제품을 사용하는 실제 모습과 일치하는지 알 수 있다.\n먼저 이러한 데이터를 모으려면 제품을 사용하며 고객이 머스트 해브로 가는 길을 알아야한다.\n숫자만 있는 것은 아니다 유저의 행동을 데이터화 하여 이를 추적하면서 아하 순간과 머스트해브를 찾는 방법도 있지만 실제 서비스시에는 다양한 고객 유형으로 찾기 어려울 때도 있다. 이때는 데이터가 아닌 실제 발로 뛰면서 인터뷰나 설문 조사가 필요할 수 도 있다.\n이해하기 쉽게 디자인하여 보고하기 이거를 그저 엑셀로 만들어 숫자형태로만 보여주면 그로스해킹팀들은 그 숫자만을 보다가 쉽게 흥미를 잃거나 더욱 혼란에 빠질 수 있다. 이 데이터들을 보기 쉽게 대쉬보드화에서 다른 데이터들과, 다른 시간들과 비교할 수 있도록 그래프등으로 쉽게 보여주어야 충분한 성과를 보여줄 수 있다. 게코보드와 클립폴리오, 태블로와 클릭 센스등 데이터의 가시성을 높이는 도구를 이용하자.\n종합하기 성장의 기회를 포착하고 최적화하기 위해서는 성장의 지렛대는 찾아내는 법이나 깊이 있는 분석을 하여 보고하는 법, 고객 피드백을 이용하여 이를 보완하는 방법 등을 활용할 수 있다. 트위터는 30명의 사용자를 팔로우 하는 사람들이 장기 활성 사용자가 된다는 사실을 코호트 분석을 통해 알게 되었다.\n트위터는 기본적으로 한달을 기준으로 사용자를 나눈다. 하루에 다섯번 이상 트윗을 본 사람. 트위터를 보지만 트윗을 전혀 하지 않는 사람, 주말에는 트윗을 하는 사람, 일주일에 팔로워가 10명 이상 늘어나는 사람 등 훨씬 정교한 집단으로 나눌 수 있다.\n이 기준을 한달로 구분해서 달 별로 확인을 했더나 한달에 7번 이상 사이트를 방문한 사람은 다음달에도 계속 사용할 확률이 90~100% 였던 것이었다. 다음으로 상요자를 한달에 7번 이상 접속한 유저, 그보다 적게 접속한 유저, 첫 방문 후에 사이트에 재방문하지 않는 유저 세 개의 집단으로 구분했고, 방문자중 20%만 핵심 사용자가 된다는 결론을 내릴 수 있었다. 7번 이상 사이트를 찾은 사람을 분석하자 대략 30명의 팔로우를 한사람이었다는 것을 알아냈고 이것을 아하순간이라고 여기게 되었다.\n여기에 더 나아가 30명보다 맣이 팔로우를 하게 되면 더욱 오래 잔존할 것 같아 테스트를 해봤지만 예상과는 달리 많은 사람을 맞팔할수록 애정을 가진 확률이 높아지는 것은 아니였다. 자신이 팔로우한 사람의 30%가 맞팔을 하고 있는 것이 제일 높은 충성도를 보였고, 이 점은 식견 수집으로만 필요한 지점이었다.\n30% 이상의 맞팔이 이루어진다면 트위터는 현실 세계의 교우관계와 비슷해지면서 트위터만의 개성을 잃게 되는 것을 알게 되었다. 친한 사람들끼리 하하호호하는 것이 아닌 지구 반대편에서 모르는 사람들이 어떤 일을 하는지 아는 것, 그것이 트위터의 매력이었던 것이었다.\n트위터를 탈주했다가 다시 온 유저를 대상으로 조사를 해본 결과, 초기에는 트위터가 자신의 홍보를 하는 소셜 네트워크라고 생객했지만 유명인사나 직장에서 존경하는 인물들의 이야기를 듣고 싶게 되서 다시 돌아오는 것을 알게 되었다.\n이를 통해 성장의 지렛대는 한 사용자가 팔로우하는 사람의 수와 팔로우 받는 사람의 수였던 것이었다.\n이처럼 성장 방정식과 발전시켜야 할 핵심 지표를 확인하며 적절한 장치와 자료 수집, 체계를 확립하면서 성장의 지렛대를 발견하고 모니터링하는 것이야말로 성공적인 그로스해킹에 꼭 필요한 단계다.\n궁금한 점 실험 하나에 적합한 테스터 수와 기간은 어떻게 측정을 해야 하나 성장 방정식은 어떻게 작성해야하나 뒤끝이 성장하기 위해서 중요하게 여겨야 하는 지표는 무엇인가 이 지표는 아하 순간을 밟는 과정을 통해 확인해야한다. 우리의 수익과 관련있는 아하 순간과 지표가 과연 있을까?(이베이는 아이템 수에 따라 매출이 크게 상승하는 것을 알았기 때문에 가능) 우리의 목표는 무엇인가. 매출인가, 시장 독점인가, Saas 시장에서의 비중인가. 만약 매출이라면 우리가 이용자수를 크게 만들었다한들 돈이 되지 않는 유저라면 매출이 크게 늘지는 않을 것이다. 돈이 되는 유저를 늘리는 것이 더 현명할 것이다. 그러면 돈이 되는 유저를 어떻게 불러오고 만족시키는지가 관건이 될거고 돈이 되는 유저의 요구사항을 듣는 것이 맞지 않을까. 시장 독점인지, 매출 상승인지 궁금하다.(회사의 목표는 무엇?) 아하 순간을 찾아야 북극성 지표를 설정할 수 있는 것인지 트위터는 한달에 7번 이상 사이트를 방문한 사람은 다음달에도 90 ~ 100%의 접속률을 유지한다. 그러면 우리도 어떤 행동을 했을 때 다음달에 90~100%를 유지하는 행동을 한 유저를 추려내면 아하 순간을 찾을 수 있지 않을까. ","date":"2022-12-15T00:00:00Z","image":"https://icebluehalls.github.io/post/Books/growth-hacking/growth-hacking.png","permalink":"https://icebluehalls.github.io/p/growth-hacking-chapter3/","title":"진화된 마케팅 그로스해킹(by 션 엘리스) - #Chapter3"},{"content":"\u0026lsquo;머스트 해브\u0026rsquo;인가 빠른 성장을 한 기업의 공통점. 많은 사람들의 사랑을 받는 제품을 만들었다는 것. \u0026lsquo;꼭 가지고 싶은 것\u0026rsquo;으로 비치는 제품을 만들었다는 것이다.\n말로는 쉽지만 이런 고객 니즈를 완벽하게 파악하는 것은 매우 어려운 일이다.\n구글 글래스와 아마존의 파이어 폰 결국 모두 원하지 않았기에 대기업일지라도 빠르게 망해버렸다.\n이처럼 그로스해킹의 기본적인 규칙은 제품이 \u0026lsquo;머스트 해브\u0026rsquo;인지, 그 이유, 핵심 가치, 대상 고객에 대해 알기 전까지는 실험을 밀어붙이지 않는 것이다.\n사장님께서 하도 압박을 받아 뭐라도 건져봐야겠다라는 마음에 억지로 테스트를 했다가는 시간낭비, 인력낭비만 커지게 된다. 거기에 다 망가져가는 집을 가지고 이 집 어때보여요 하는 것과 같은 꼴.\n많은 사람들이 그로스해킹이라고 하면 입소문을 내서 리텐션, 신규 고객을 끌어올리는 작업이라고 생각한다. 하지만 그로스해킹은 연구를 통해 고객의 니즈를 파악하고 그 니즈를 끌어올리는 전략이다.\n브랜치아웃 페이스북의 브랜치 아웃은 페이스북을 이용하여 직업 네트워크를 구축하는 링크드인 같은 기능이었다.\n이때 그로스해킹팀은 입소문을 퍼뜨리기 바빠 마케팅을 빡새게 했고 유저 수 또한 400만명에서 2500만으로 증가가 되었다. 다만 이탈률 또한 상당히 높았다.\n즉 마케팅은 성공했으나 다 부셔서 가능 제품을 보며 진짝 고객을 만들지는 못했던 셈.\n아하 순간 아하 순간이란 제품의 유용성이 사용자에게 제대로 받아들여지는 순간을 말한다. 사용자가 핵심 가치, 즉 제품이 무엇을 위한 것인지 왜 제품을 필요하는지, 사용하면서 주는 이로훈 효과들을 인식하는 순간. 그리고 이런 생각을 가진 고객들은 충성도 높은 파워 유저가 되어 다른 지인분들께 홍보를 알아서 해준다.\n드롭박스의 경우, 드롭 박스의 기본적인 기술, 파일 저장을 했을 때가 \u0026lsquo;아하 순간\u0026rsquo; 트위터는 30명 이상을 팔로우 하게 되었을 때 글의 리젠이 활발해면서 \u0026lsquo;아하 순간\u0026rsquo; 슬랙은 2000개의 메세지를 팀 내에서 주고 받을 경우 발생하는 \u0026lsquo;아하 순간\u0026rsquo;\n등 각 회사의 제품에 따라 아하 순간은 다르다. 그렇다면 \u0026lsquo;이 제품을 꼭 사용해야한다\u0026rsquo;라고 생각이 들게끔 하는 아하 순간은 어떻게 찾아낼 수 있을까?\n제일 좋은 방법은 충성도 높은 고객 대상으로 설문조사를 하는 것이다.\n머스트 해브 설문조사 질문의 내용은 다음과 같다.\n이 제품을 내일부터 이용불가하다면 느끼는 실망감은?(매우 실망 ~ 제품에 대해서 모름) 해당 제품을 이용할 수 없다면 그 대안으로 다른 것을 이용하시겠습니까? 해당 제품을 사용하며 받는 제일 큰 혜택 해당 제품을 다른 사람에게 추천해준 적이 존재하는지 당신이 생각하기에 해당 제품을 이용하며 얻은 가장 큰 혜택은 무엇인지 제품의 개선 방식이 있다면 무엇일지 이후 이메일을 통해서 고객님의 응답에 대한 자세한 설명을 요청해도 되는지 설문조사 대상 하지만 이것을 모든 고객에게 주면 안된다. 충성도가 있고 적극적인 고객에게 조사를 해야 유효한 결과를 볼 수 있다.\n그리고 해당 설문조사는 \u0026lsquo;제품이 핵심 가치를 달성했는지 확인하는 단계\u0026rsquo; 이외에는 사용하지 안흔 것이 좋다.\n위 질문들을 보고 사용자가 \u0026lsquo;내일부터 이용이 불가하다고? 장사를 접을 생각인가?\u0026rsquo; 라는 불안감을 조성할 수 있기 때문이다.\n그래서 제품이 가치가 있고 사용자의 니즈에 충족한다고 느끼는 유저에 대해 설문조사를 실행하는 것이 베스트.\n유지율 측정 \u0026lsquo;머스트 해브\u0026rsquo;의 지위에 올랐는지 측정하는 방법으로는 제품의 유지율이 있다. 에 제품을 써야한다라는 느낌을 받으면 고객은 그 제품을 꾸준히 사용할테고 그렇지 않다면 흥미를 잃고 쓰지 않을 것이기 때문.\n\u0026lsquo;퀘트라\u0026rsquo;라는 회사에서는 모바일 앱의 한달 유지율은 10퍼센트라고 한다. 넷플렉스, 아마존등의 Saas는 연간 유지율이 90%라고 한다\n\u0026lsquo;머스트 해브\u0026rsquo;에 이르는 길 상당 수의 고객이 아하 순간을 경험했다는 흔적을 찾았으면 그때는 성장을 위한 실험 단계로 이동해야 한다. 고객이 어떤 기능을 원할까 추측하는 일보다는 설문 조사보다도 더 깊게 고객과 대화하여 니즈를 알아야한다.\n기능 추가는 제품 개선의 가장 확실한 햅버처럼 보이지만 니즈와 거리가 먼 기능들만 계속 추가하면 오히려 제품을 다루기 어렵고 진입방벽을 높게 만든다.\n개선은 대부분 더하는 일이 아닌 빼는 일에서 비롯된다.\n왜 아하 순간에 이르지 못했는지, 어떻게 이를 수 있는지 알기 위해서는 추측에 의존하기보다 분석적으로 접근해야한다.\n인터뷰를 하거나 시장에 나가 고객 혹은 예상 고객들과 이야기를 나누는 등의 추가적인 고객 설문조사 제품 변화와 메시지 전달에 대한 효율적 실험 사용자 데이터에 대한 면밀한 분석 사무실 밖으로 나와 아날로기에 뛰어들기 직접 고객 개개인에게 인터뷰를 하는 것이 제일 효과적이다. 다만 여기서는 고객에 대해 분석하러 가는 것일 뿐, 구입을 권유하거나 마케팅을 하는데 목적을 두어서는 안된다.\n또 제품을 아무런 터치 없이 그대로 출시하고 예상 사용자들이 어떤 반응을 보이는지 실제로 관찰하는 것이다.(궁금했던 점 4)\n전자상거래 사이트 엣시는 수공업체의 공예 제품을 사고파는 사이트였는데, 밖으로 나가 공예품 전시회에 참석하며 이들이 판매할 때 어떤 경험을 했는지 물어보며 아하 순간을 확인하였다.\n그리고 많은 공예가 그룹이 간행물이나 블로그 중심으로 뭉쳐 있는 것을 알게되고, 그들의 니즈에 맞춘 전용 커뮤니티 그룹을 만들면서 대성공하였다.\n데이트 어플인 틴더는 성장을 촉진하기 위해서는 초기 활동도 지역화해야 한다고 생각하여 대학의 동아리에 포커스를 잡고 여학생 동아리에서 회원을 모으고 그 모아진 회원들을 남학생에게 보여주면서 초기 유저들을 모아두었다. 그러자 고객들이 홍보를 해주면서 빠르게 늘어날 수 있게 되었다.\n이 방법이 나은가 저 방법이 나은가 성장을 저해하는 방법이 제품이나 서비스 자체의 기능 부족이 아니라 표현, 설명 부족일 수도 이싸. 이때는 여러가지 실험을 해봐야하는데 A/B 테스트를 이용하면 손쉽게 실험할 수 있다. A/B 테스트는 임의로 선정한 두 개 이상의 표적 집단을 대상으로 두 개의 다른 메시지를 실험하는 방법이다.\n온라인 뉴스레터의 표제를 각각 다르게 문구를 쓴다던가, 버튼의 문안을 바꾼다던가.\n베이스 캠프에서는 A/B테스트를 통해 가입 페이지에서 \u0026lsquo;무료 체험판에 가입하세요\u0026rsquo; 보다 \u0026lsquo;프로그램과 가격을 확인하세요\u0026rsquo;라는 텍스트가 200% 더 클릭율이 높다는 실험결과를 얻을 수 있었다.\n이런 식의 간단한 변화가 \u0026lsquo;아하 순간\u0026rsquo;으로 이끌어 제품 채택을 하게끔 도와준다.\n하지만 A/B 테스트는 이 테스트에 참여하거나 더 높은 체택률을 보여준 유저가 아하 순간을 느꼈거나 충성스러운 고객이 되는 것까지는 확인이 불가능하다는 것이다. 그저 아하 순간으로 더 쉽게 보내는 도구일 뿐, 이것으로 아하 순간을 느꼈다 라고 하기에는 어렵다.\n제품 자체의 실험 위 A/B테스트에서는 디자인 위주로 설명되어 있지만 제품에서의 개선 또한 필요하다. 장바구니로 가는 시간을 줄이는 테스트라던가, 설명을 짧게 더 붙이거나 좋은 리뷰를 보여주는 실험이라던가.\n데이터에 몰두하기 구글 애널리틱스를 통해 웹사이트에 대한 기본적인, 방문자 수, 이탈률과 같은 지표를 보고만 있어서는 안된다. 고객들이 물건에 대한 깊이 있는 식견을 주지 못한다. 그로스해킹은 모든 측면에 대한 데이터를 가지고 있어야만 한다. 웹사이트를 얼마나 자주 방문하는지, 얼마나 오래 머무르는지와 같은 데이터 이상의 것.\n유저 경험의 차이를 볼 수 있는 데이터가 필요하다.\n이러한 비교 가능한 유저 경험의 데이터의 모음인 데이터 레이크 혹은 데이터 웨어하우스를 그로스해킹팀에서는 만들어야한다.\n활성 사용자는 무엇을 하고 있는가 데이터를 수집해서 식견을 얻어내는 첫 번쨰 단계는 사용자나 고객의 핵심적인 활동을 추적하는 일이다.\n특정 버튼을 클릭하거나, 동영상을 시청하거나, 특정 웹페이지로 들어가는 행동등. 이런 행동이 이어지고 이탈하는 순간을 캐치해야만 머스트 해브를 찾을 수 있다.\n궁금했던 점 사용자 유지율이 대해서는 모든 유저들을 대상으로 조사를 해야하나? Saas의 연간 유지율이 90%라고 하는데 사실일까? 넷플렉스, 아마존등의 구독 해제를 겨우 10%의 사람만 해제할까? 결국 머스트 해브를 찾으려면 고객 설문조사밖에 없나?(유지율로는 추측만 가능한데 왠만해서는 추측하지 말라고 했으므로) 온라인 커뮤니티(DC, 루리웹)에다가 \u0026lsquo;이거 제품 쓸만함?\u0026lsquo;이라고 물어보는 것도 아날로그 조사로 할 수 있나? \u0026lsquo;아하 순간\u0026rsquo;은 n개월 동안 이탈하지 않는 유저의 특정 행동들의 공통점. 웹사이트를 얼마나 자주 방문하는지, 얼마나 오래 머무르는지와 같은 데이터 가 존재하는지. ","date":"2022-12-08T00:00:00Z","image":"https://icebluehalls.github.io/post/Books/growth-hacking/growth-hacking.png","permalink":"https://icebluehalls.github.io/p/growth-hacking-chapter2/","title":"진화된 마케팅 그로스해킹(by 션 엘리스) - #Chapter2"},{"content":"들어가며 션 엘리스의 업적 션 엘리스는 \u0026lsquo;업로어\u0026rsquo; 라는 소프트웨어 판매회사에서 획기적인 마케팅을 선사하였다. 그것은 바로 기존의 배너형 광고, 유료 광고가 아닌 여타 웹사이트에서 업로어의 게임을 무료로 제공하는 방법이었다.\n광고 대신 게임이 들어가는 방법으로 내장형 위젯까지 만들어야했기에 위험 부담이 컸지만 해당 위젯을 낮은 단가에 여러 사이트에 배포한 결과 대박을 쳤다.\n그 다음으로는 로그미인이라는 회사에 들어가 가입은 하였지만 서비스는 이용하지 않는 문제점을 캐치하고 이유를 묻는 메일을 보냈다.(당시에는 이런 이메일조차 보내지 않았다.) 제품은 정말 획기적인데 안쓰는 이유는 충격적이게도 이 제품이 정말로 무료인지 사람들이 믿지 않았다는 점. 그래서 션은 제품의 랜딩페이지에서 정말로 유료면서 좋은 기능을 가지고 있다는 점을 어필하도록 수정했고 전환율이 3배가올랐다. 또한 가입 절차에 이탈이 발생하여 이것을 세분화시키고 개선한 끝에 700%의 광고 수익률이 발생하였다.\n아래는 그로스해킹 성공 예시\n드롭박스 : 소셜미디어, 이메일 통해 지인에게 추천시 250MB 무료 증정 - 60% 증가(10만명 -\u0026gt; 400만명) 페이스북 - 번역 엔진의 자동화, 10일 이내에 친구 7명 이상 생길 경우 계속 사용. 에어비엔비 - 원래는 크레이그리스트에서 호텔만 보여주었고, 호텔 외에도 다른 숙박을원하는 사람도 있는 것을 캐치. 인기 부동산 임대사이트 크레이그리스트에 에어비앤비 목록을 무료로 게재(팝업으로 기재) 에어비엔비 - 사진 품질이 떨어져 예약을 꺼려하는 사람들을 위해 에어비엔비 측에서 사진 잘찍으라고 어플 제공. 그로스 해킹 이런 식으로 전형적인 마케팅 계획, 화려한 출시 행사, 막대한 광고 때리기 보다 제품 스스로가 마케팅하도록 소프트웨어를 활용하여 고객 기반을 구축하고 늘리는 방법, 그것을 위해서 제품을 사용하는 사용자들의 경험을 데이터화하여 분서갛고 개선점을 찾아 빠르게 실험하고 개선하는 것, 그것이 \u0026lsquo;그로스 해킹\u0026rsquo;이다.\n그로스해킹의 요소\n마케팅과 제품 개발에서의 연락 단절 해결, 다양한 인재 통합 그로스해킹팀을 구성 정성적 연구와 정량적 자료 분석 이용하여 사용자 행동과 사용자 기호에 대한 깊은 식견 아이디어를 빠르게 창출하고 실험하며 결과와 조치에 엄격한 지표 작성 챕터 1 - 그로스 해킹 팀 구축 비트 토렌트의 사례 비트 토렌트는 파일을 다운로드하게 만드는 획기적인 데스트톱 소프트웨어여서 인기가 상당했다.\n하지만 시장이 모바일로 넘어가게 되면서 데스크톱 소프트웨어는 인기가 떨어지게 되었다.\n비트 토렌트는 그 이후에 앱을 내놓았고, 많은 유저가 사용했지만 무료에서 유로 버전으로 전환율은 한참 떨어졌다.\n마케팅과 제품 모두 완벽했음에도 전환율이 떨어진 이유를 설문조사해보니 충격적이게도 제품의 유료 버전 자체를 몰랐다는 것이었다.\n이러한 에러사항이 발생한 이유는 바로 마케팅 때 새로운 고객의 유치에만 신경을 쓰고 있었기 때문에 기존 사용하던 고객들은 신경을 쓰지 못했다는 것이었다.\n이러한 설명을 들은 제품 개발팀은 충격으로 각성하게 되었고 유로 업그레이드 버튼의 위치만 바꿈으로서 92%의 수익이 증가하게 되었다.\n두번째 사례로는 구글 스토어에서 보여지는 평점과 리뷰를 높은 점수와 좋은 리뷰를 더 위에 배치하게 함으로서 다운로드 수가 증가하게 되었다. 그리고 이러한 리뷰를 요청하는 순간은 앱에서 가장 만족스로운 순간에 작성하도록 만들었다.\n여기서 알아야할 것은 고객의 유치만 신경쓰지 말 것, 그리고 분석 결과를 관련된 팀에게 전달하여 문제를 알려줄 것.\n비트 토렌트의 문제점 중 하나는 앱이 백그라운드에서 돌기 때문에 배터리가 빠르게 소진되는 것이었다. 그래서 프로 버전에서 배터리가 35%만 남았을 때 백그라운드가 종료되는 기능을 만들었고, 무료 사용자들에게 홍보하여 47퍼센트의 수익을 상승시켰다. 이러한 성공 신화 덕분에 다른 부서들에서도 그로스해킹의 위대함을 알고 관심을 가지게 되었고 회사 내 전반적으로 제품의 관심이나 애착심이 증가하게 되었다.\n팀을 이루는 사람들 그로스해킹에서 빠지면 안되는 구성들은 다음과 같다.\n그로스 해킹 리더 제품 매니저 소프트웨어 엔지니어 마케팅 전문가 데이터 분석가 제품 디자이너 그로스해킹 리더 팀 관리와 동시에 아이디어 창출과 실험 과정에도 적극적으로 참여하는 대장의 역할이다.\n실험의 진로를 잡고, 팀이 목표를 달성하고 있는지 감독한다.\n일주일에 한번은 회의를 가지며 그로스 해킹 리더가 주재해야한다.\n팀이 선택한 지표가 성장 목표에 적절한지 확인해야 하며. 이를 위해서는 제품 관리에 대한전문 지식을 갖추어야 하며 실험을 운영하는 방법에대해 이해하고 있어야 한다.\n총괄적으로 실험의 우선순위 정하기,추적하기, 결과 공유하기를 잘하면 된다.\n제품 매니저 \u0026lsquo;좋은 제품 매니저는 제품의 CEO다\u0026rsquo;\n제품 매니저는 제품 개발 경험은 물론이고 고객 설문 조사와 인터뷰에 대한 경험도 있으므로 아이디어 창출이나 실험 고정에 중요한 기여를 할 수 있다.\n무조건 포함되어야하는 역할\n소프트웨어 엔지니어 실험 결과가 나오면 이것을 적용시키는 역할.\n자신이 만든 프로그램에 개선점과 문제점을 찾아 개선을 해야하므로 무조건 영입해야한다.\n기존에 맡은 일만 충실히 해내는 것이 아닌 자신의 제품을 한번 돌아보고 이것을 개선하는것이 중요 포인트이다.\n마케팅 전문가 콘텐츠 마케팅 전문가, 검색 엔진 최적화등 여러 분야에서 나올 수 있다. 엔지니어와 마케팅이 결합하면 마케팅 시에 발생했던 문제점이나 개선점들을 직접적으로 듣고 아이디어를 내는 것이 수월해진다.\n데이터분석가 고객 데이터를 수집하고 구저화하여 분석하는 역할. 통게적으로 타당하고 빈틈없이 실험을 디자인해야하고 정보원에 접근하는 법과 사용자 식견을 끌어내는 법, 실험의 결과를 집계해서 그에 대한 식견을 제시하는 법을 알야아한다. 구글 애널리틱스를 통해 대처가 가능하지만 안좋은 방법이며 내부의 로그등을 심어 데이터의 금광을 발견해야한다.\n제품 디자이너 UX를 만들면서 사용자 심리, 인터페이스 디자인, 사용자 연구 기법등 실험을 위한 훌륭한 아이디어 창춘에 유용한 식견을 제공할 수 있다.\n규모와 범위. 조직이 크다면 제품의 포인트별로 나누어도 된다. 고객 유치팀, 고객 활성화팀, 고객 유지팀등.\n만약 규모가 작으면 한 팀에서 유치 따로 활성화 따로, 유지 따로 테스트를 진행하여도 된다.\n그로스 해킹 추진 방법 그로스해킹 순서는 다음과 같다.\n데이터 분석과 식견 정리 아이디어 도출 실험의 우선순위 결정 실험의 진행 위 4가지가 끊임없이 반복되어야 한다. 진행을 하며 성과가 밝은 것에는 집중 투자하고 성과가 없으면 빨리 포기하여야한다.\n주간 회의를 통해 팀이 집중력을 잃거나 궤도에서 벗어나는 일을 방지하며 그로스해킹과정의 빠른 속성을 유지하는 데 필요한 높은 수준의 협력과 소통을 가능하게 한다.\n고객의 이탈하는 이유를 분석해본 결과, 이탈자들은 적극적인 사용자들에게 인기 있는 특정 기능을 이용하지 않았다는 것을 알게 되었고, 그 특정 기능을 시도할 수 있도록 방안을 실험할 수 있을 것이다.\n구전 전통과 감성적 애착 실험 방안은 나왔는데 개발팀에서 도와주지 않는다면?\n프로그래머는 해당 일이 귀찮고 현재 로직에 맞지 않아, UX 디자이너는 기껏 만든 UI가 망가지는 것을 꺼려한다.\n이러한 갈등은 팀 전체에 보상이 주어지거나 그 방안들이 얼마나 성공하고 영향이 있는지 명확한 근거자료를 제시하는 것이다.\n","date":"2022-11-30T00:00:00Z","image":"https://icebluehalls.github.io/post/Books/growth-hacking/growth-hacking.png","permalink":"https://icebluehalls.github.io/p/growth-hacking-chapter1/","title":"진화된 마케팅 그로스해킹(by 션 엘리스) - #Chapter1"},{"content":"우분투의 경우, 명령어로 cmake를 다운받으면 3.19가 다운 받아지며 그 이상의 버전은 다운이 불가능하다.\n따라서 cmake 최신 버전을 다운받으려면 다음과 같이 알집 파일을 압축 해제해서 안에 있는 실행파일을 직접 실행시켜야 한다.\nCmake 홈페이지에 접속 링크 : https://cmake.org/download/\n리눅스용 설치 파일의 링크를 복사 우분투를 열어 다운받기 명령어 실행 1 wget https://github.com/Kitware/CMake/releases/download/v3.24.2/cmake-3.24.2.tar.gz 다운받은 압축파일 압축 풀기 1 tar -xvzf 해당파일.tar.gz 압축이 풀리면 tar.gz 말고 일반 cmake-3.24.2가 보일 것이다.\n해당 폴더로 접속하여 bootstrap 실행 1 cd cmake-3.24.2 1 ./bootstrap --prefix=/usr/local c++ 미설치 에러 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 root@DESKTOP-49U4JDF:~/cmake-3.24.2# ls Auxiliary CMakeLogo.gif DartConfig.cmake Source configure Bootstrap.cmk CONTRIBUTING.rst Help Templates doxygen.config CMakeCPack.cmake CTestConfig.cmake Licenses Tests CMakeCPackOptions.cmake.in CTestCustom.cmake.in Modules Utilities CMakeGraphVizOptions.cmake CompileFlags.cmake Packaging bootstrap CMakeLists.txt Copyright.txt README.rst cmake_uninstall.cmake.in root@DESKTOP-49U4JDF:~/cmake-3.24.2# sudo sh bootstrap --------------------------------------------- CMake 3.24.2, Copyright 2000-2022 Kitware, Inc. and Contributors C compiler on this system is: cc --------------------------------------------- Error when bootstrapping CMake: Cannot find a C++ compiler that supports both C++11 and the specified C++ flags. Please specify one using environment variable CXX. The C++ flags are \u0026#34;\u0026#34;. They can be changed using the environment variable CXXFLAGS. See cmake_bootstrap.log for compilers attempted. 위와 같은 에러가 뜰 경우, 아래 명령어를 통해 g++을 다운받아야한다.(아래 openssl과 함께 참조)\n1 apt-get install g++ openssl 미설치 에러 1 Could NOT find OpenSSL, try to set the path to OpenSSL root folder in the system variable OPENSSL_ROOT_DIR 아래 명령어를 통해 openssl을 다운받아야한다\n1 apt-get install libssl-dev make \u0026amp; make install 명령어로 cmake를 설치한다 1 make 1 make install 설치 완료. 버전 확인 정상적으로 3.24.2가 출력되면 성공한 것이다.\n1 cmake --version ","date":"2022-10-04T02:35:04+09:00","image":"https://icebluehalls.github.io/p/how-to-download-cmake-in-ubuntu/bootstrap_success_hu6ca3b7b074376955acac5286f2f25655_36228_120x120_fill_box_smart1_3.PNG","permalink":"https://icebluehalls.github.io/p/how-to-download-cmake-in-ubuntu/","title":"우분투에 최신버전 Cmake 다운받기"},{"content":"개요 현재 사용중인 코딩 스타일은 BSD로 다음과 같다.\nBSD\n1 2 3 4 int main() { } 문득 이쁘지 않은 거 같아 K\u0026amp;R 스타일로 바꿔보려고 한다.\nK\u0026amp;R\n1 2 3 int main() { } Visual Studio는 쉽게 기능을 제공해주는데, VSCode는 설정에서 지원하지 않아 커스텀 설정을 해주어야 한다.\n1 .C# 확장 설치 VSCode 왼쪽 확장 탭 버튼을 통해 확장 탭으로 가고 C#을 검색하여 Microsoft에서 공식 지원하는 확장(extension)을 다운받는다. 2. .omnisharp 폴더 찾기 확장의 설치가 다되었으면 내 컴퓨터 어딘가에 설정값을 저장하는 폴더가 생긴다. 아마 대부분은 내 PC \u0026gt; 로컬 디스크 C \u0026gt; 사용자 \u0026gt; {사용자 이름} \u0026gt; .omnisharp 폴더로 생길 것이다. 앞으로 여기에 있는 설정값에 따라 c# 문법은 해당 설정값에 따라 포맷팅이 될 것이다.\n3. omnisharp.json 파일 새로 생성 설정값을 적용하기 위해서는 .omnisharp 폴더에 omnisharp.json이라는 json 파일을 만들어야한다. 이름이 틀리면 작동하지 않는다.\n4. omnisharp.json 작성 생성했으면 안에 값을 다음과 같이 입력한다.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 { \u0026#34;FormattingOptions\u0026#34;: { \u0026#34;NewLinesForBracesInTypes\u0026#34;: false, \u0026#34;NewLinesForBracesInAccessors\u0026#34;: false, \u0026#34;NewLinesForBracesInAnonymousMethods\u0026#34;: false, \u0026#34;NewLinesForBracesInAnonymousTypes\u0026#34;: false, \u0026#34;NewLinesForBracesInLambdaExpressionBody\u0026#34;: false, \u0026#34;NewLinesForBracesInObjectCollectionArrayInitializers\u0026#34;: false, \u0026#34;NewLinesForBracesInProperties\u0026#34;: false, \u0026#34;NewLinesForBracesInControlBlocks\u0026#34;: false, \u0026#34;NewLinesForBracesInMethods\u0026#34;: false, \u0026#34;NewLineForClausesInQuery\u0026#34;: false, \u0026#34;NewLineForCatch\u0026#34;: false, \u0026#34;NewLineForElse\u0026#34;: false, \u0026#34;NewLineForFinally\u0026#34;: false, \u0026#34;NewLineForMembersInObjectInit\u0026#34;: false, \u0026#34;NewLineForMembersInAnonymousTypes\u0026#34;: false, \u0026#34;WrappingPreserveSingleLine\u0026#34;: true, \u0026#34;WrappingKeepStatementsOnSingleLine\u0026#34;: true, \u0026#34;UseTabs\u0026#34;: true, \u0026#34;TabSize\u0026#34;: 4, \u0026#34;SpaceAfterCast\u0026#34;: false } } 설정값 여기서 영어를 할 수 있는 분들이라면 커스텀마이징이 가능해진다. 위 설정값을 true/false로 변경하는 것으로 쉽게 수정이 가능하며, 위에 기재된 설정값 외에도 더 많은 값들이 존재한다.\n위 값 또한 스택오버플로우에서 유저들이 사용하는 것을 그대로 가져온 것이기 때문에 기본이 되는 규약은 아니다. 거기서 추가한 것은 Catch, Finally문에서도 K\u0026amp;R이 적용되도록 NewLineForCatch와 NewLineForFinally를 false로 한 설정 뿐이다.\n5. 완료 이것으로 기본 포맷팅은 완료가 되었다.\n한번 VSCode를 껏다 키고 포맷팅이 원하는대로 되는지 확인하자. Alt + Shift + F 시 현재 페이지를 포맷팅 할 수 있다.(Ctrl + Shift + F는 검색이므로 혼동하지 말자) 그 외 처음에는 적용이 안되고 포맷팅이 아예 안되는 현상이 있었다. 이 경우 C# 확장을 최신 버전이 아닌 1~2단계 아래 버전으로 바꾸었더니 확장이 새로 설치되면서 적용이 되었다.\n","date":"2022-09-28T00:00:00Z","image":"https://icebluehalls.github.io/p/how-to-change-knr-style/before_after_hu793d13c132bc9ed6008e2f1a1a16b8ca_28353_120x120_fill_box_smart1_3.png","permalink":"https://icebluehalls.github.io/p/how-to-change-knr-style/","title":"VSCode에서 중괄호 스타일 K\u0026R로 변경하기"}]